(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.algorithm=f()}})(function(){var define,module,exports;return function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r}()({1:[function(require,module,exports){const{Token}=require("./Token");const Lexer=require("./Lexer");const{Interval}=require("./IntervalSet");class TokenStream{}class BufferedTokenStream extends TokenStream{constructor(tokenSource){super();this.tokenSource=tokenSource;this.tokens=[];this.index=-1;this.fetchedEOF=false}mark(){return 0}release(marker){}reset(){this.seek(0)}seek(index){this.lazyInit();this.index=this.adjustSeekIndex(index)}get(index){this.lazyInit();return this.tokens[index]}consume(){let skipEofCheck=false;if(this.index>=0){if(this.fetchedEOF){skipEofCheck=this.index<this.tokens.length-1}else{skipEofCheck=this.index<this.tokens.length}}else{skipEofCheck=false}if(!skipEofCheck&&this.LA(1)===Token.EOF){throw"cannot consume EOF"}if(this.sync(this.index+1)){this.index=this.adjustSeekIndex(this.index+1)}}sync(i){const n=i-this.tokens.length+1;if(n>0){const fetched=this.fetch(n);return fetched>=n}return true}fetch(n){if(this.fetchedEOF){return 0}for(let i=0;i<n;i++){const t=this.tokenSource.nextToken();t.tokenIndex=this.tokens.length;this.tokens.push(t);if(t.type===Token.EOF){this.fetchedEOF=true;return i+1}}return n}getTokens(start,stop,types){if(types===undefined){types=null}if(start<0||stop<0){return null}this.lazyInit();const subset=[];if(stop>=this.tokens.length){stop=this.tokens.length-1}for(let i=start;i<stop;i++){const t=this.tokens[i];if(t.type===Token.EOF){break}if(types===null||types.contains(t.type)){subset.push(t)}}return subset}LA(i){return this.LT(i).type}LB(k){if(this.index-k<0){return null}return this.tokens[this.index-k]}LT(k){this.lazyInit();if(k===0){return null}if(k<0){return this.LB(-k)}const i=this.index+k-1;this.sync(i);if(i>=this.tokens.length){return this.tokens[this.tokens.length-1]}return this.tokens[i]}adjustSeekIndex(i){return i}lazyInit(){if(this.index===-1){this.setup()}}setup(){this.sync(0);this.index=this.adjustSeekIndex(0)}setTokenSource(tokenSource){this.tokenSource=tokenSource;this.tokens=[];this.index=-1;this.fetchedEOF=false}nextTokenOnChannel(i,channel){this.sync(i);if(i>=this.tokens.length){return-1}let token=this.tokens[i];while(token.channel!==this.channel){if(token.type===Token.EOF){return-1}i+=1;this.sync(i);token=this.tokens[i]}return i}previousTokenOnChannel(i,channel){while(i>=0&&this.tokens[i].channel!==channel){i-=1}return i}getHiddenTokensToRight(tokenIndex,channel){if(channel===undefined){channel=-1}this.lazyInit();if(tokenIndex<0||tokenIndex>=this.tokens.length){throw""+tokenIndex+" not in 0.."+this.tokens.length-1}const nextOnChannel=this.nextTokenOnChannel(tokenIndex+1,Lexer.DEFAULT_TOKEN_CHANNEL);const from_=tokenIndex+1;const to=nextOnChannel===-1?this.tokens.length-1:nextOnChannel;return this.filterForChannel(from_,to,channel)}getHiddenTokensToLeft(tokenIndex,channel){if(channel===undefined){channel=-1}this.lazyInit();if(tokenIndex<0||tokenIndex>=this.tokens.length){throw""+tokenIndex+" not in 0.."+this.tokens.length-1}const prevOnChannel=this.previousTokenOnChannel(tokenIndex-1,Lexer.DEFAULT_TOKEN_CHANNEL);if(prevOnChannel===tokenIndex-1){return null}const from_=prevOnChannel+1;const to=tokenIndex-1;return this.filterForChannel(from_,to,channel)}filterForChannel(left,right,channel){const hidden=[];for(let i=left;i<right+1;i++){const t=this.tokens[i];if(channel===-1){if(t.channel!==Lexer.DEFAULT_TOKEN_CHANNEL){hidden.push(t)}}else if(t.channel===channel){hidden.push(t)}}if(hidden.length===0){return null}return hidden}getSourceName(){return this.tokenSource.getSourceName()}getText(interval){this.lazyInit();this.fill();if(interval===undefined||interval===null){interval=new Interval(0,this.tokens.length-1)}let start=interval.start;if(start instanceof Token){start=start.tokenIndex}let stop=interval.stop;if(stop instanceof Token){stop=stop.tokenIndex}if(start===null||stop===null||start<0||stop<0){return""}if(stop>=this.tokens.length){stop=this.tokens.length-1}let s="";for(let i=start;i<stop+1;i++){const t=this.tokens[i];if(t.type===Token.EOF){break}s=s+t.text}return s}fill(){this.lazyInit();while(this.fetch(1e3)===1e3){continue}}}module.exports=BufferedTokenStream},{"./IntervalSet":5,"./Lexer":7,"./Token":13}],2:[function(require,module,exports){const CommonToken=require("./Token").CommonToken;class TokenFactory{}class CommonTokenFactory extends TokenFactory{constructor(copyText){super();this.copyText=copyText===undefined?false:copyText}create(source,type,text,channel,start,stop,line,column){const t=new CommonToken(source,type,channel,start,stop);t.line=line;t.column=column;if(text!==null){t.text=text}else if(this.copyText&&source[1]!==null){t.text=source[1].getText(start,stop)}return t}createThin(type,text){const t=new CommonToken(null,type);t.text=text;return t}}CommonTokenFactory.DEFAULT=new CommonTokenFactory;module.exports=CommonTokenFactory},{"./Token":13}],3:[function(require,module,exports){const Token=require("./Token").Token;const BufferedTokenStream=require("./BufferedTokenStream");class CommonTokenStream extends BufferedTokenStream{constructor(lexer,channel){super(lexer);this.channel=channel===undefined?Token.DEFAULT_CHANNEL:channel}adjustSeekIndex(i){return this.nextTokenOnChannel(i,this.channel)}LB(k){if(k===0||this.index-k<0){return null}let i=this.index;let n=1;while(n<=k){i=this.previousTokenOnChannel(i-1,this.channel);n+=1}if(i<0){return null}return this.tokens[i]}LT(k){this.lazyInit();if(k===0){return null}if(k<0){return this.LB(-k)}let i=this.index;let n=1;while(n<k){if(this.sync(i+1)){i=this.nextTokenOnChannel(i+1,this.channel)}n+=1}return this.tokens[i]}getNumberOfOnChannelTokens(){let n=0;this.fill();for(let i=0;i<this.tokens.length;i++){const t=this.tokens[i];if(t.channel===this.channel){n+=1}if(t.type===Token.EOF){break}}return n}}module.exports=CommonTokenStream},{"./BufferedTokenStream":1,"./Token":13}],4:[function(require,module,exports){const{Token}=require("./Token");require("./polyfills/codepointat");require("./polyfills/fromcodepoint");class InputStream{constructor(data,decodeToUnicodeCodePoints){this.name="<empty>";this.strdata=data;this.decodeToUnicodeCodePoints=decodeToUnicodeCodePoints||false;this._index=0;this.data=[];if(this.decodeToUnicodeCodePoints){for(let i=0;i<this.strdata.length;){const codePoint=this.strdata.codePointAt(i);this.data.push(codePoint);i+=codePoint<=65535?1:2}}else{this.data=new Array(this.strdata.length);for(let i=0;i<this.strdata.length;i++){const codeUnit=this.strdata.charCodeAt(i);this.data[i]=codeUnit}}this._size=this.data.length}reset(){this._index=0}consume(){if(this._index>=this._size){throw"cannot consume EOF"}this._index+=1}LA(offset){if(offset===0){return 0}if(offset<0){offset+=1}const pos=this._index+offset-1;if(pos<0||pos>=this._size){return Token.EOF}return this.data[pos]}LT(offset){return this.LA(offset)}mark(){return-1}release(marker){}seek(_index){if(_index<=this._index){this._index=_index;return}this._index=Math.min(_index,this._size)}getText(start,stop){if(stop>=this._size){stop=this._size-1}if(start>=this._size){return""}else{if(this.decodeToUnicodeCodePoints){let result="";for(let i=start;i<=stop;i++){result+=String.fromCodePoint(this.data[i])}return result}else{return this.strdata.slice(start,stop+1)}}}toString(){return this.strdata}get index(){return this._index}get size(){return this._size}}module.exports=InputStream},{"./Token":13,"./polyfills/codepointat":44,"./polyfills/fromcodepoint":45}],5:[function(require,module,exports){const{Token}=require("./Token");class Interval{constructor(start,stop){this.start=start;this.stop=stop}clone(){return new Interval(this.start,this.stop)}contains(item){return item>=this.start&&item<this.stop}toString(){if(this.start===this.stop-1){return this.start.toString()}else{return this.start.toString()+".."+(this.stop-1).toString()}}get length(){return this.stop-this.start}}class IntervalSet{constructor(){this.intervals=null;this.readOnly=false}first(v){if(this.intervals===null||this.intervals.length===0){return Token.INVALID_TYPE}else{return this.intervals[0].start}}addOne(v){this.addInterval(new Interval(v,v+1))}addRange(l,h){this.addInterval(new Interval(l,h+1))}addInterval(toAdd){if(this.intervals===null){this.intervals=[];this.intervals.push(toAdd.clone())}else{for(let pos=0;pos<this.intervals.length;pos++){const existing=this.intervals[pos];if(toAdd.stop<existing.start){this.intervals.splice(pos,0,toAdd);return}else if(toAdd.stop===existing.start){this.intervals[pos]=new Interval(toAdd.start,existing.stop);return}else if(toAdd.start<=existing.stop){this.intervals[pos]=new Interval(Math.min(existing.start,toAdd.start),Math.max(existing.stop,toAdd.stop));this.reduce(pos);return}}this.intervals.push(toAdd.clone())}}addSet(other){if(other.intervals!==null){other.intervals.forEach(toAdd=>this.addInterval(toAdd),this)}return this}reduce(pos){if(pos<this.intervals.length-1){const current=this.intervals[pos];const next=this.intervals[pos+1];if(current.stop>=next.stop){this.intervals.splice(pos+1,1);this.reduce(pos)}else if(current.stop>=next.start){this.intervals[pos]=new Interval(current.start,next.stop);this.intervals.splice(pos+1,1)}}}complement(start,stop){const result=new IntervalSet;result.addInterval(new Interval(start,stop+1));if(this.intervals!==null)this.intervals.forEach(toRemove=>result.removeRange(toRemove));return result}contains(item){if(this.intervals===null){return false}else{for(let k=0;k<this.intervals.length;k++){if(this.intervals[k].contains(item)){return true}}return false}}removeRange(toRemove){if(toRemove.start===toRemove.stop-1){this.removeOne(toRemove.start)}else if(this.intervals!==null){let pos=0;for(let n=0;n<this.intervals.length;n++){const existing=this.intervals[pos];if(toRemove.stop<=existing.start){return}else if(toRemove.start>existing.start&&toRemove.stop<existing.stop){this.intervals[pos]=new Interval(existing.start,toRemove.start);const x=new Interval(toRemove.stop,existing.stop);this.intervals.splice(pos,0,x);return}else if(toRemove.start<=existing.start&&toRemove.stop>=existing.stop){this.intervals.splice(pos,1);pos=pos-1}else if(toRemove.start<existing.stop){this.intervals[pos]=new Interval(existing.start,toRemove.start)}else if(toRemove.stop<existing.stop){this.intervals[pos]=new Interval(toRemove.stop,existing.stop)}pos+=1}}}removeOne(value){if(this.intervals!==null){for(let i=0;i<this.intervals.length;i++){const existing=this.intervals[i];if(value<existing.start){return}else if(value===existing.start&&value===existing.stop-1){this.intervals.splice(i,1);return}else if(value===existing.start){this.intervals[i]=new Interval(existing.start+1,existing.stop);return}else if(value===existing.stop-1){this.intervals[i]=new Interval(existing.start,existing.stop-1);return}else if(value<existing.stop-1){const replace=new Interval(existing.start,value);existing.start=value+1;this.intervals.splice(i,0,replace);return}}}}toString(literalNames,symbolicNames,elemsAreChar){literalNames=literalNames||null;symbolicNames=symbolicNames||null;elemsAreChar=elemsAreChar||false;if(this.intervals===null){return"{}"}else if(literalNames!==null||symbolicNames!==null){return this.toTokenString(literalNames,symbolicNames)}else if(elemsAreChar){return this.toCharString()}else{return this.toIndexString()}}toCharString(){const names=[];for(let i=0;i<this.intervals.length;i++){const existing=this.intervals[i];if(existing.stop===existing.start+1){if(existing.start===Token.EOF){names.push("<EOF>")}else{names.push("'"+String.fromCharCode(existing.start)+"'")}}else{names.push("'"+String.fromCharCode(existing.start)+"'..'"+String.fromCharCode(existing.stop-1)+"'")}}if(names.length>1){return"{"+names.join(", ")+"}"}else{return names[0]}}toIndexString(){const names=[];for(let i=0;i<this.intervals.length;i++){const existing=this.intervals[i];if(existing.stop===existing.start+1){if(existing.start===Token.EOF){names.push("<EOF>")}else{names.push(existing.start.toString())}}else{names.push(existing.start.toString()+".."+(existing.stop-1).toString())}}if(names.length>1){return"{"+names.join(", ")+"}"}else{return names[0]}}toTokenString(literalNames,symbolicNames){const names=[];for(let i=0;i<this.intervals.length;i++){const existing=this.intervals[i];for(let j=existing.start;j<existing.stop;j++){names.push(this.elementName(literalNames,symbolicNames,j))}}if(names.length>1){return"{"+names.join(", ")+"}"}else{return names[0]}}elementName(literalNames,symbolicNames,token){if(token===Token.EOF){return"<EOF>"}else if(token===Token.EPSILON){return"<EPSILON>"}else{return literalNames[token]||symbolicNames[token]}}get length(){return this.intervals.map(interval=>interval.length).reduce((acc,val)=>acc+val)}}module.exports={Interval:Interval,IntervalSet:IntervalSet}},{"./Token":13}],6:[function(require,module,exports){const{Set,BitSet}=require("./Utils");const{Token}=require("./Token");const{ATNConfig}=require("./atn/ATNConfig");const{IntervalSet}=require("./IntervalSet");const{RuleStopState}=require("./atn/ATNState");const{RuleTransition,NotSetTransition,WildcardTransition,AbstractPredicateTransition}=require("./atn/Transition");const{predictionContextFromRuleContext,PredictionContext,SingletonPredictionContext}=require("./PredictionContext");class LL1Analyzer{constructor(atn){this.atn=atn}getDecisionLookahead(s){if(s===null){return null}const count=s.transitions.length;const look=[];for(let alt=0;alt<count;alt++){look[alt]=new IntervalSet;const lookBusy=new Set;const seeThruPreds=false;this._LOOK(s.transition(alt).target,null,PredictionContext.EMPTY,look[alt],lookBusy,new BitSet,seeThruPreds,false);if(look[alt].length===0||look[alt].contains(LL1Analyzer.HIT_PRED)){look[alt]=null}}return look}LOOK(s,stopState,ctx){const r=new IntervalSet;const seeThruPreds=true;ctx=ctx||null;const lookContext=ctx!==null?predictionContextFromRuleContext(s.atn,ctx):null;this._LOOK(s,stopState,lookContext,r,new Set,new BitSet,seeThruPreds,true);return r}_LOOK(s,stopState,ctx,look,lookBusy,calledRuleStack,seeThruPreds,addEOF){const c=new ATNConfig({state:s,alt:0,context:ctx},null);if(lookBusy.contains(c)){return}lookBusy.add(c);if(s===stopState){if(ctx===null){look.addOne(Token.EPSILON);return}else if(ctx.isEmpty()&&addEOF){look.addOne(Token.EOF);return}}if(s instanceof RuleStopState){if(ctx===null){look.addOne(Token.EPSILON);return}else if(ctx.isEmpty()&&addEOF){look.addOne(Token.EOF);return}if(ctx!==PredictionContext.EMPTY){const removed=calledRuleStack.contains(s.ruleIndex);try{calledRuleStack.remove(s.ruleIndex);for(let i=0;i<ctx.length;i++){const returnState=this.atn.states[ctx.getReturnState(i)];this._LOOK(returnState,stopState,ctx.getParent(i),look,lookBusy,calledRuleStack,seeThruPreds,addEOF)}}finally{if(removed){calledRuleStack.add(s.ruleIndex)}}return}}for(let j=0;j<s.transitions.length;j++){const t=s.transitions[j];if(t.constructor===RuleTransition){if(calledRuleStack.contains(t.target.ruleIndex)){continue}const newContext=SingletonPredictionContext.create(ctx,t.followState.stateNumber);try{calledRuleStack.add(t.target.ruleIndex);this._LOOK(t.target,stopState,newContext,look,lookBusy,calledRuleStack,seeThruPreds,addEOF)}finally{calledRuleStack.remove(t.target.ruleIndex)}}else if(t instanceof AbstractPredicateTransition){if(seeThruPreds){this._LOOK(t.target,stopState,ctx,look,lookBusy,calledRuleStack,seeThruPreds,addEOF)}else{look.addOne(LL1Analyzer.HIT_PRED)}}else if(t.isEpsilon){this._LOOK(t.target,stopState,ctx,look,lookBusy,calledRuleStack,seeThruPreds,addEOF)}else if(t.constructor===WildcardTransition){look.addRange(Token.MIN_USER_TOKEN_TYPE,this.atn.maxTokenType)}else{let set=t.label;if(set!==null){if(t instanceof NotSetTransition){set=set.complement(Token.MIN_USER_TOKEN_TYPE,this.atn.maxTokenType)}look.addSet(set)}}}}}LL1Analyzer.HIT_PRED=Token.INVALID_TYPE;module.exports=LL1Analyzer},{"./IntervalSet":5,"./PredictionContext":10,"./Token":13,"./Utils":14,"./atn/ATNConfig":16,"./atn/ATNState":21,"./atn/Transition":29}],7:[function(require,module,exports){const{Token}=require("./Token");const Recognizer=require("./Recognizer");const CommonTokenFactory=require("./CommonTokenFactory");const{RecognitionException}=require("./error/Errors");const{LexerNoViableAltException}=require("./error/Errors");class TokenSource{}class Lexer extends Recognizer{constructor(input){super();this._input=input;this._factory=CommonTokenFactory.DEFAULT;this._tokenFactorySourcePair=[this,input];this._interp=null;this._token=null;this._tokenStartCharIndex=-1;this._tokenStartLine=-1;this._tokenStartColumn=-1;this._hitEOF=false;this._channel=Token.DEFAULT_CHANNEL;this._type=Token.INVALID_TYPE;this._modeStack=[];this._mode=Lexer.DEFAULT_MODE;this._text=null}reset(){if(this._input!==null){this._input.seek(0)}this._token=null;this._type=Token.INVALID_TYPE;this._channel=Token.DEFAULT_CHANNEL;this._tokenStartCharIndex=-1;this._tokenStartColumn=-1;this._tokenStartLine=-1;this._text=null;this._hitEOF=false;this._mode=Lexer.DEFAULT_MODE;this._modeStack=[];this._interp.reset()}nextToken(){if(this._input===null){throw"nextToken requires a non-null input stream."}const tokenStartMarker=this._input.mark();try{while(true){if(this._hitEOF){this.emitEOF();return this._token}this._token=null;this._channel=Token.DEFAULT_CHANNEL;this._tokenStartCharIndex=this._input.index;this._tokenStartColumn=this._interp.column;this._tokenStartLine=this._interp.line;this._text=null;let continueOuter=false;while(true){this._type=Token.INVALID_TYPE;let ttype=Lexer.SKIP;try{ttype=this._interp.match(this._input,this._mode)}catch(e){if(e instanceof RecognitionException){this.notifyListeners(e);this.recover(e)}else{console.log(e.stack);throw e}}if(this._input.LA(1)===Token.EOF){this._hitEOF=true}if(this._type===Token.INVALID_TYPE){this._type=ttype}if(this._type===Lexer.SKIP){continueOuter=true;break}if(this._type!==Lexer.MORE){break}}if(continueOuter){continue}if(this._token===null){this.emit()}return this._token}}finally{this._input.release(tokenStartMarker)}}skip(){this._type=Lexer.SKIP}more(){this._type=Lexer.MORE}mode(m){this._mode=m}pushMode(m){if(this._interp.debug){console.log("pushMode "+m)}this._modeStack.push(this._mode);this.mode(m)}popMode(){if(this._modeStack.length===0){throw"Empty Stack"}if(this._interp.debug){console.log("popMode back to "+this._modeStack.slice(0,-1))}this.mode(this._modeStack.pop());return this._mode}emitToken(token){this._token=token}emit(){const t=this._factory.create(this._tokenFactorySourcePair,this._type,this._text,this._channel,this._tokenStartCharIndex,this.getCharIndex()-1,this._tokenStartLine,this._tokenStartColumn);this.emitToken(t);return t}emitEOF(){const cpos=this.column;const lpos=this.line;const eof=this._factory.create(this._tokenFactorySourcePair,Token.EOF,null,Token.DEFAULT_CHANNEL,this._input.index,this._input.index-1,lpos,cpos);this.emitToken(eof);return eof}getCharIndex(){return this._input.index}getAllTokens(){const tokens=[];let t=this.nextToken();while(t.type!==Token.EOF){tokens.push(t);t=this.nextToken()}return tokens}notifyListeners(e){const start=this._tokenStartCharIndex;const stop=this._input.index;const text=this._input.getText(start,stop);const msg="token recognition error at: '"+this.getErrorDisplay(text)+"'";const listener=this.getErrorListenerDispatch();listener.syntaxError(this,null,this._tokenStartLine,this._tokenStartColumn,msg,e)}getErrorDisplay(s){const d=[];for(let i=0;i<s.length;i++){d.push(s[i])}return d.join("")}getErrorDisplayForChar(c){if(c.charCodeAt(0)===Token.EOF){return"<EOF>"}else if(c==="\n"){return"\\n"}else if(c==="\t"){return"\\t"}else if(c==="\r"){return"\\r"}else{return c}}getCharErrorDisplay(c){return"'"+this.getErrorDisplayForChar(c)+"'"}recover(re){if(this._input.LA(1)!==Token.EOF){if(re instanceof LexerNoViableAltException){this._interp.consume(this._input)}else{this._input.consume()}}}get inputStream(){return this._input}set inputStream(input){this._input=null;this._tokenFactorySourcePair=[this,this._input];this.reset();this._input=input;this._tokenFactorySourcePair=[this,this._input]}get sourceName(){return this._input.sourceName}get type(){return this._type}set type(type){this._type=type}get line(){return this._interp.line}set line(line){this._interp.line=line}get column(){return this._interp.column}set column(column){this._interp.column=column}get text(){if(this._text!==null){return this._text}else{return this._interp.getText(this._input)}}set text(text){this._text=text}}Lexer.DEFAULT_MODE=0;Lexer.MORE=-2;Lexer.SKIP=-3;Lexer.DEFAULT_TOKEN_CHANNEL=Token.DEFAULT_CHANNEL;Lexer.HIDDEN=Token.HIDDEN_CHANNEL;Lexer.MIN_CHAR_VALUE=0;Lexer.MAX_CHAR_VALUE=1114111;module.exports=Lexer},{"./CommonTokenFactory":2,"./Recognizer":11,"./Token":13,"./error/Errors":38}],8:[function(require,module,exports){const{Token}=require("./Token");const{ParseTreeListener,TerminalNode,ErrorNode}=require("./tree/Tree");const Recognizer=require("./Recognizer");const{DefaultErrorStrategy}=require("./error/ErrorStrategy");const ATNDeserializer=require("./atn/ATNDeserializer");const ATNDeserializationOptions=require("./atn/ATNDeserializationOptions");const Lexer=require("./Lexer");class TraceListener extends ParseTreeListener{constructor(parser){super();this.parser=parser}enterEveryRule(ctx){console.log("enter   "+this.parser.ruleNames[ctx.ruleIndex]+", LT(1)="+this.parser._input.LT(1).text)}visitTerminal(node){console.log("consume "+node.symbol+" rule "+this.parser.ruleNames[this.parser._ctx.ruleIndex])}exitEveryRule(ctx){console.log("exit    "+this.parser.ruleNames[ctx.ruleIndex]+", LT(1)="+this.parser._input.LT(1).text)}}class Parser extends Recognizer{constructor(input){super();this._input=null;this._errHandler=new DefaultErrorStrategy;this._precedenceStack=[];this._precedenceStack.push(0);this._ctx=null;this.buildParseTrees=true;this._tracer=null;this._parseListeners=null;this._syntaxErrors=0;this.setInputStream(input)}reset(){if(this._input!==null){this._input.seek(0)}this._errHandler.reset(this);this._ctx=null;this._syntaxErrors=0;this.setTrace(false);this._precedenceStack=[];this._precedenceStack.push(0);if(this._interp!==null){this._interp.reset()}}match(ttype){let t=this.getCurrentToken();if(t.type===ttype){this._errHandler.reportMatch(this);this.consume()}else{t=this._errHandler.recoverInline(this);if(this.buildParseTrees&&t.tokenIndex===-1){this._ctx.addErrorNode(t)}}return t}matchWildcard(){let t=this.getCurrentToken();if(t.type>0){this._errHandler.reportMatch(this);this.consume()}else{t=this._errHandler.recoverInline(this);if(this._buildParseTrees&&t.tokenIndex===-1){this._ctx.addErrorNode(t)}}return t}getParseListeners(){return this._parseListeners||[]}addParseListener(listener){if(listener===null){throw"listener"}if(this._parseListeners===null){this._parseListeners=[]}this._parseListeners.push(listener)}removeParseListener(listener){if(this._parseListeners!==null){const idx=this._parseListeners.indexOf(listener);if(idx>=0){this._parseListeners.splice(idx,1)}if(this._parseListeners.length===0){this._parseListeners=null}}}removeParseListeners(){this._parseListeners=null}triggerEnterRuleEvent(){if(this._parseListeners!==null){const ctx=this._ctx;this._parseListeners.forEach(function(listener){listener.enterEveryRule(ctx);ctx.enterRule(listener)})}}triggerExitRuleEvent(){if(this._parseListeners!==null){const ctx=this._ctx;this._parseListeners.slice(0).reverse().forEach(function(listener){ctx.exitRule(listener);listener.exitEveryRule(ctx)})}}getTokenFactory(){return this._input.tokenSource._factory}setTokenFactory(factory){this._input.tokenSource._factory=factory}getATNWithBypassAlts(){const serializedAtn=this.getSerializedATN();if(serializedAtn===null){throw"The current parser does not support an ATN with bypass alternatives."}let result=this.bypassAltsAtnCache[serializedAtn];if(result===null){const deserializationOptions=new ATNDeserializationOptions;deserializationOptions.generateRuleBypassTransitions=true;result=new ATNDeserializer(deserializationOptions).deserialize(serializedAtn);this.bypassAltsAtnCache[serializedAtn]=result}return result}compileParseTreePattern(pattern,patternRuleIndex,lexer){lexer=lexer||null;if(lexer===null){if(this.getTokenStream()!==null){const tokenSource=this.getTokenStream().tokenSource;if(tokenSource instanceof Lexer){lexer=tokenSource}}}if(lexer===null){throw"Parser can't discover a lexer to use"}const m=new ParseTreePatternMatcher(lexer,this);return m.compile(pattern,patternRuleIndex)}getInputStream(){return this.getTokenStream()}setInputStream(input){this.setTokenStream(input)}getTokenStream(){return this._input}setTokenStream(input){this._input=null;this.reset();this._input=input}getCurrentToken(){return this._input.LT(1)}notifyErrorListeners(msg,offendingToken,err){offendingToken=offendingToken||null;err=err||null;if(offendingToken===null){offendingToken=this.getCurrentToken()}this._syntaxErrors+=1;const line=offendingToken.line;const column=offendingToken.column;const listener=this.getErrorListenerDispatch();listener.syntaxError(this,offendingToken,line,column,msg,err)}consume(){const o=this.getCurrentToken();if(o.type!==Token.EOF){this.getInputStream().consume()}const hasListener=this._parseListeners!==null&&this._parseListeners.length>0;if(this.buildParseTrees||hasListener){let node;if(this._errHandler.inErrorRecoveryMode(this)){node=this._ctx.addErrorNode(o)}else{node=this._ctx.addTokenNode(o)}node.invokingState=this.state;if(hasListener){this._parseListeners.forEach(function(listener){if(node instanceof ErrorNode||node.isErrorNode!==undefined&&node.isErrorNode()){listener.visitErrorNode(node)}else if(node instanceof TerminalNode){listener.visitTerminal(node)}})}}return o}addContextToParseTree(){if(this._ctx.parentCtx!==null){this._ctx.parentCtx.addChild(this._ctx)}}enterRule(localctx,state,ruleIndex){this.state=state;this._ctx=localctx;this._ctx.start=this._input.LT(1);if(this.buildParseTrees){this.addContextToParseTree()}this.triggerEnterRuleEvent()}exitRule(){this._ctx.stop=this._input.LT(-1);this.triggerExitRuleEvent();this.state=this._ctx.invokingState;this._ctx=this._ctx.parentCtx}enterOuterAlt(localctx,altNum){localctx.setAltNumber(altNum);if(this.buildParseTrees&&this._ctx!==localctx){if(this._ctx.parentCtx!==null){this._ctx.parentCtx.removeLastChild();this._ctx.parentCtx.addChild(localctx)}}this._ctx=localctx}getPrecedence(){if(this._precedenceStack.length===0){return-1}else{return this._precedenceStack[this._precedenceStack.length-1]}}enterRecursionRule(localctx,state,ruleIndex,precedence){this.state=state;this._precedenceStack.push(precedence);this._ctx=localctx;this._ctx.start=this._input.LT(1);this.triggerEnterRuleEvent()}pushNewRecursionContext(localctx,state,ruleIndex){const previous=this._ctx;previous.parentCtx=localctx;previous.invokingState=state;previous.stop=this._input.LT(-1);this._ctx=localctx;this._ctx.start=previous.start;if(this.buildParseTrees){this._ctx.addChild(previous)}this.triggerEnterRuleEvent()}unrollRecursionContexts(parentCtx){this._precedenceStack.pop();this._ctx.stop=this._input.LT(-1);const retCtx=this._ctx;const parseListeners=this.getParseListeners();if(parseListeners!==null&&parseListeners.length>0){while(this._ctx!==parentCtx){this.triggerExitRuleEvent();this._ctx=this._ctx.parentCtx}}else{this._ctx=parentCtx}retCtx.parentCtx=parentCtx;if(this.buildParseTrees&&parentCtx!==null){parentCtx.addChild(retCtx)}}getInvokingContext(ruleIndex){let ctx=this._ctx;while(ctx!==null){if(ctx.ruleIndex===ruleIndex){return ctx}ctx=ctx.parentCtx}return null}precpred(localctx,precedence){return precedence>=this._precedenceStack[this._precedenceStack.length-1]}inContext(context){return false}isExpectedToken(symbol){const atn=this._interp.atn;let ctx=this._ctx;const s=atn.states[this.state];let following=atn.nextTokens(s);if(following.contains(symbol)){return true}if(!following.contains(Token.EPSILON)){return false}while(ctx!==null&&ctx.invokingState>=0&&following.contains(Token.EPSILON)){const invokingState=atn.states[ctx.invokingState];const rt=invokingState.transitions[0];following=atn.nextTokens(rt.followState);if(following.contains(symbol)){return true}ctx=ctx.parentCtx}if(following.contains(Token.EPSILON)&&symbol===Token.EOF){return true}else{return false}}getExpectedTokens(){return this._interp.atn.getExpectedTokens(this.state,this._ctx)}getExpectedTokensWithinCurrentRule(){const atn=this._interp.atn;const s=atn.states[this.state];return atn.nextTokens(s)}getRuleIndex(ruleName){const ruleIndex=this.getRuleIndexMap()[ruleName];if(ruleIndex!==null){return ruleIndex}else{return-1}}getRuleInvocationStack(p){p=p||null;if(p===null){p=this._ctx}const stack=[];while(p!==null){const ruleIndex=p.ruleIndex;if(ruleIndex<0){stack.push("n/a")}else{stack.push(this.ruleNames[ruleIndex])}p=p.parentCtx}return stack}getDFAStrings(){return this._interp.decisionToDFA.toString()}dumpDFA(){let seenOne=false;for(let i=0;i<this._interp.decisionToDFA.length;i++){const dfa=this._interp.decisionToDFA[i];if(dfa.states.length>0){if(seenOne){console.log()}this.printer.println("Decision "+dfa.decision+":");this.printer.print(dfa.toString(this.literalNames,this.symbolicNames));seenOne=true}}}getSourceName(){return this._input.sourceName}setTrace(trace){if(!trace){this.removeParseListener(this._tracer);this._tracer=null}else{if(this._tracer!==null){this.removeParseListener(this._tracer)}this._tracer=new TraceListener(this);this.addParseListener(this._tracer)}}}Parser.bypassAltsAtnCache={};module.exports=Parser},{"./Lexer":7,"./Recognizer":11,"./Token":13,"./atn/ATNDeserializationOptions":18,"./atn/ATNDeserializer":19,"./error/ErrorStrategy":37,"./tree/Tree":46}],9:[function(require,module,exports){const RuleContext=require("./RuleContext");const Tree=require("./tree/Tree");const INVALID_INTERVAL=Tree.INVALID_INTERVAL;const TerminalNode=Tree.TerminalNode;const TerminalNodeImpl=Tree.TerminalNodeImpl;const ErrorNodeImpl=Tree.ErrorNodeImpl;const Interval=require("./IntervalSet").Interval;class ParserRuleContext extends RuleContext{constructor(parent,invokingStateNumber){parent=parent||null;invokingStateNumber=invokingStateNumber||null;super(parent,invokingStateNumber);this.ruleIndex=-1;this.children=null;this.start=null;this.stop=null;this.exception=null}copyFrom(ctx){this.parentCtx=ctx.parentCtx;this.invokingState=ctx.invokingState;this.children=null;this.start=ctx.start;this.stop=ctx.stop;if(ctx.children){this.children=[];ctx.children.map(function(child){if(child instanceof ErrorNodeImpl){this.children.push(child);child.parentCtx=this}},this)}}enterRule(listener){}exitRule(listener){}addChild(child){if(this.children===null){this.children=[]}this.children.push(child);return child}removeLastChild(){if(this.children!==null){this.children.pop()}}addTokenNode(token){const node=new TerminalNodeImpl(token);this.addChild(node);node.parentCtx=this;return node}addErrorNode(badToken){const node=new ErrorNodeImpl(badToken);this.addChild(node);node.parentCtx=this;return node}getChild(i,type){type=type||null;if(this.children===null||i<0||i>=this.children.length){return null}if(type===null){return this.children[i]}else{for(let j=0;j<this.children.length;j++){const child=this.children[j];if(child instanceof type){if(i===0){return child}else{i-=1}}}return null}}getToken(ttype,i){if(this.children===null||i<0||i>=this.children.length){return null}for(let j=0;j<this.children.length;j++){const child=this.children[j];if(child instanceof TerminalNode){if(child.symbol.type===ttype){if(i===0){return child}else{i-=1}}}}return null}getTokens(ttype){if(this.children===null){return[]}else{const tokens=[];for(let j=0;j<this.children.length;j++){const child=this.children[j];if(child instanceof TerminalNode){if(child.symbol.type===ttype){tokens.push(child)}}}return tokens}}getTypedRuleContext(ctxType,i){return this.getChild(i,ctxType)}getTypedRuleContexts(ctxType){if(this.children===null){return[]}else{const contexts=[];for(let j=0;j<this.children.length;j++){const child=this.children[j];if(child instanceof ctxType){contexts.push(child)}}return contexts}}getChildCount(){if(this.children===null){return 0}else{return this.children.length}}getSourceInterval(){if(this.start===null||this.stop===null){return INVALID_INTERVAL}else{return new Interval(this.start.tokenIndex,this.stop.tokenIndex)}}}RuleContext.EMPTY=new ParserRuleContext;class InterpreterRuleContext extends ParserRuleContext{constructor(parent,invokingStateNumber,ruleIndex){super(parent,invokingStateNumber);this.ruleIndex=ruleIndex}}module.exports=ParserRuleContext},{"./IntervalSet":5,"./RuleContext":12,"./tree/Tree":46}],10:[function(require,module,exports){const RuleContext=require("./RuleContext");const{Hash,Map,equalArrays}=require("./Utils");class PredictionContext{constructor(cachedHashCode){this.cachedHashCode=cachedHashCode}isEmpty(){return this===PredictionContext.EMPTY}hasEmptyPath(){return this.getReturnState(this.length-1)===PredictionContext.EMPTY_RETURN_STATE}hashCode(){return this.cachedHashCode}updateHashCode(hash){hash.update(this.cachedHashCode)}}PredictionContext.EMPTY=null;PredictionContext.EMPTY_RETURN_STATE=2147483647;PredictionContext.globalNodeCount=1;PredictionContext.id=PredictionContext.globalNodeCount;class PredictionContextCache{constructor(){this.cache=new Map}add(ctx){if(ctx===PredictionContext.EMPTY){return PredictionContext.EMPTY}const existing=this.cache.get(ctx)||null;if(existing!==null){return existing}this.cache.put(ctx,ctx);return ctx}get(ctx){return this.cache.get(ctx)||null}get length(){return this.cache.length}}class SingletonPredictionContext extends PredictionContext{constructor(parent,returnState){let hashCode=0;const hash=new Hash;if(parent!==null){hash.update(parent,returnState)}else{hash.update(1)}hashCode=hash.finish();super(hashCode);this.parentCtx=parent;this.returnState=returnState}getParent(index){return this.parentCtx}getReturnState(index){return this.returnState}equals(other){if(this===other){return true}else if(!(other instanceof SingletonPredictionContext)){return false}else if(this.hashCode()!==other.hashCode()){return false}else{if(this.returnState!==other.returnState)return false;else if(this.parentCtx==null)return other.parentCtx==null;else return this.parentCtx.equals(other.parentCtx)}}toString(){const up=this.parentCtx===null?"":this.parentCtx.toString();if(up.length===0){if(this.returnState===PredictionContext.EMPTY_RETURN_STATE){return"$"}else{return""+this.returnState}}else{return""+this.returnState+" "+up}}get length(){return 1}static create(parent,returnState){if(returnState===PredictionContext.EMPTY_RETURN_STATE&&parent===null){return PredictionContext.EMPTY}else{return new SingletonPredictionContext(parent,returnState)}}}class EmptyPredictionContext extends SingletonPredictionContext{constructor(){super(null,PredictionContext.EMPTY_RETURN_STATE)}isEmpty(){return true}getParent(index){return null}getReturnState(index){return this.returnState}equals(other){return this===other}toString(){return"$"}}PredictionContext.EMPTY=new EmptyPredictionContext;class ArrayPredictionContext extends PredictionContext{constructor(parents,returnStates){const h=new Hash;h.update(parents,returnStates);const hashCode=h.finish();super(hashCode);this.parents=parents;this.returnStates=returnStates;return this}isEmpty(){return this.returnStates[0]===PredictionContext.EMPTY_RETURN_STATE}getParent(index){return this.parents[index]}getReturnState(index){return this.returnStates[index]}equals(other){if(this===other){return true}else if(!(other instanceof ArrayPredictionContext)){return false}else if(this.hashCode()!==other.hashCode()){return false}else{return equalArrays(this.returnStates,other.returnStates)&&equalArrays(this.parents,other.parents)}}toString(){if(this.isEmpty()){return"[]"}else{let s="[";for(let i=0;i<this.returnStates.length;i++){if(i>0){s=s+", "}if(this.returnStates[i]===PredictionContext.EMPTY_RETURN_STATE){s=s+"$";continue}s=s+this.returnStates[i];if(this.parents[i]!==null){s=s+" "+this.parents[i]}else{s=s+"null"}}return s+"]"}}get length(){return this.returnStates.length}}function predictionContextFromRuleContext(atn,outerContext){if(outerContext===undefined||outerContext===null){outerContext=RuleContext.EMPTY}if(outerContext.parentCtx===null||outerContext===RuleContext.EMPTY){return PredictionContext.EMPTY}const parent=predictionContextFromRuleContext(atn,outerContext.parentCtx);const state=atn.states[outerContext.invokingState];const transition=state.transitions[0];return SingletonPredictionContext.create(parent,transition.followState.stateNumber)}function merge(a,b,rootIsWildcard,mergeCache){if(a===b){return a}if(a instanceof SingletonPredictionContext&&b instanceof SingletonPredictionContext){return mergeSingletons(a,b,rootIsWildcard,mergeCache)}if(rootIsWildcard){if(a instanceof EmptyPredictionContext){return a}if(b instanceof EmptyPredictionContext){return b}}if(a instanceof SingletonPredictionContext){a=new ArrayPredictionContext([a.getParent()],[a.returnState])}if(b instanceof SingletonPredictionContext){b=new ArrayPredictionContext([b.getParent()],[b.returnState])}return mergeArrays(a,b,rootIsWildcard,mergeCache)}function mergeSingletons(a,b,rootIsWildcard,mergeCache){if(mergeCache!==null){let previous=mergeCache.get(a,b);if(previous!==null){return previous}previous=mergeCache.get(b,a);if(previous!==null){return previous}}const rootMerge=mergeRoot(a,b,rootIsWildcard);if(rootMerge!==null){if(mergeCache!==null){mergeCache.set(a,b,rootMerge)}return rootMerge}if(a.returnState===b.returnState){const parent=merge(a.parentCtx,b.parentCtx,rootIsWildcard,mergeCache);if(parent===a.parentCtx){return a}if(parent===b.parentCtx){return b}const spc=SingletonPredictionContext.create(parent,a.returnState);if(mergeCache!==null){mergeCache.set(a,b,spc)}return spc}else{let singleParent=null;if(a===b||a.parentCtx!==null&&a.parentCtx===b.parentCtx){singleParent=a.parentCtx}if(singleParent!==null){const payloads=[a.returnState,b.returnState];if(a.returnState>b.returnState){payloads[0]=b.returnState;payloads[1]=a.returnState}const parents=[singleParent,singleParent];const apc=new ArrayPredictionContext(parents,payloads);if(mergeCache!==null){mergeCache.set(a,b,apc)}return apc}const payloads=[a.returnState,b.returnState];let parents=[a.parentCtx,b.parentCtx];if(a.returnState>b.returnState){payloads[0]=b.returnState;payloads[1]=a.returnState;parents=[b.parentCtx,a.parentCtx]}const a_=new ArrayPredictionContext(parents,payloads);if(mergeCache!==null){mergeCache.set(a,b,a_)}return a_}}function mergeRoot(a,b,rootIsWildcard){if(rootIsWildcard){if(a===PredictionContext.EMPTY){return PredictionContext.EMPTY}if(b===PredictionContext.EMPTY){return PredictionContext.EMPTY}}else{if(a===PredictionContext.EMPTY&&b===PredictionContext.EMPTY){return PredictionContext.EMPTY}else if(a===PredictionContext.EMPTY){const payloads=[b.returnState,PredictionContext.EMPTY_RETURN_STATE];const parents=[b.parentCtx,null];return new ArrayPredictionContext(parents,payloads)}else if(b===PredictionContext.EMPTY){const payloads=[a.returnState,PredictionContext.EMPTY_RETURN_STATE];const parents=[a.parentCtx,null];return new ArrayPredictionContext(parents,payloads)}}return null}function mergeArrays(a,b,rootIsWildcard,mergeCache){if(mergeCache!==null){let previous=mergeCache.get(a,b);if(previous!==null){return previous}previous=mergeCache.get(b,a);if(previous!==null){return previous}}let i=0;let j=0;let k=0;let mergedReturnStates=[];let mergedParents=[];while(i<a.returnStates.length&&j<b.returnStates.length){const a_parent=a.parents[i];const b_parent=b.parents[j];if(a.returnStates[i]===b.returnStates[j]){const payload=a.returnStates[i];const bothDollars=payload===PredictionContext.EMPTY_RETURN_STATE&&a_parent===null&&b_parent===null;const ax_ax=a_parent!==null&&b_parent!==null&&a_parent===b_parent;if(bothDollars||ax_ax){mergedParents[k]=a_parent;mergedReturnStates[k]=payload}else{mergedParents[k]=merge(a_parent,b_parent,rootIsWildcard,mergeCache);mergedReturnStates[k]=payload}i+=1;j+=1}else if(a.returnStates[i]<b.returnStates[j]){mergedParents[k]=a_parent;mergedReturnStates[k]=a.returnStates[i];i+=1}else{mergedParents[k]=b_parent;mergedReturnStates[k]=b.returnStates[j];j+=1}k+=1}if(i<a.returnStates.length){for(let p=i;p<a.returnStates.length;p++){mergedParents[k]=a.parents[p];mergedReturnStates[k]=a.returnStates[p];k+=1}}else{for(let p=j;p<b.returnStates.length;p++){mergedParents[k]=b.parents[p];mergedReturnStates[k]=b.returnStates[p];k+=1}}if(k<mergedParents.length){if(k===1){const a_=SingletonPredictionContext.create(mergedParents[0],mergedReturnStates[0]);if(mergeCache!==null){mergeCache.set(a,b,a_)}return a_}mergedParents=mergedParents.slice(0,k);mergedReturnStates=mergedReturnStates.slice(0,k)}const M=new ArrayPredictionContext(mergedParents,mergedReturnStates);if(M===a){if(mergeCache!==null){mergeCache.set(a,b,a)}return a}if(M===b){if(mergeCache!==null){mergeCache.set(a,b,b)}return b}combineCommonParents(mergedParents);if(mergeCache!==null){mergeCache.set(a,b,M)}return M}function combineCommonParents(parents){const uniqueParents=new Map;for(let p=0;p<parents.length;p++){const parent=parents[p];if(!uniqueParents.containsKey(parent)){uniqueParents.put(parent,parent)}}for(let q=0;q<parents.length;q++){parents[q]=uniqueParents.get(parents[q])}}function getCachedPredictionContext(context,contextCache,visited){if(context.isEmpty()){return context}let existing=visited.get(context)||null;if(existing!==null){return existing}existing=contextCache.get(context);if(existing!==null){visited.put(context,existing);return existing}let changed=false;let parents=[];for(let i=0;i<parents.length;i++){const parent=getCachedPredictionContext(context.getParent(i),contextCache,visited);if(changed||parent!==context.getParent(i)){if(!changed){parents=[];for(let j=0;j<context.length;j++){parents[j]=context.getParent(j)}changed=true}parents[i]=parent}}if(!changed){contextCache.add(context);visited.put(context,context);return context}let updated=null;if(parents.length===0){updated=PredictionContext.EMPTY}else if(parents.length===1){updated=SingletonPredictionContext.create(parents[0],context.getReturnState(0))}else{updated=new ArrayPredictionContext(parents,context.returnStates)}contextCache.add(updated);visited.put(updated,updated);visited.put(context,updated);return updated}function getAllContextNodes(context,nodes,visited){if(nodes===null){nodes=[];return getAllContextNodes(context,nodes,visited)}else if(visited===null){visited=new Map;return getAllContextNodes(context,nodes,visited)}else{if(context===null||visited.containsKey(context)){return nodes}visited.put(context,context);nodes.push(context);for(let i=0;i<context.length;i++){getAllContextNodes(context.getParent(i),nodes,visited)}return nodes}}module.exports={merge:merge,PredictionContext:PredictionContext,PredictionContextCache:PredictionContextCache,SingletonPredictionContext:SingletonPredictionContext,predictionContextFromRuleContext:predictionContextFromRuleContext,getCachedPredictionContext:getCachedPredictionContext}},{"./RuleContext":12,"./Utils":14}],11:[function(require,module,exports){const{Token}=require("./Token");const{ConsoleErrorListener}=require("./error/ErrorListener");const{ProxyErrorListener}=require("./error/ErrorListener");class Recognizer{constructor(){this._listeners=[ConsoleErrorListener.INSTANCE];this._interp=null;this._stateNumber=-1}checkVersion(toolVersion){const runtimeVersion="4.9.3";if(runtimeVersion!==toolVersion){console.log("ANTLR runtime and generated code versions disagree: "+runtimeVersion+"!="+toolVersion)}}addErrorListener(listener){this._listeners.push(listener)}removeErrorListeners(){this._listeners=[]}getLiteralNames(){return Object.getPrototypeOf(this).constructor.literalNames||[]}getSymbolicNames(){return Object.getPrototypeOf(this).constructor.symbolicNames||[]}getTokenNames(){if(!this.tokenNames){const literalNames=this.getLiteralNames();const symbolicNames=this.getSymbolicNames();const length=literalNames.length>symbolicNames.length?literalNames.length:symbolicNames.length;this.tokenNames=[];for(let i=0;i<length;i++){this.tokenNames[i]=literalNames[i]||symbolicNames[i]||"<INVALID"}}return this.tokenNames}getTokenTypeMap(){const tokenNames=this.getTokenNames();if(tokenNames===null){throw"The current recognizer does not provide a list of token names."}let result=this.tokenTypeMapCache[tokenNames];if(result===undefined){result=tokenNames.reduce(function(o,k,i){o[k]=i});result.EOF=Token.EOF;this.tokenTypeMapCache[tokenNames]=result}return result}getRuleIndexMap(){const ruleNames=this.ruleNames;if(ruleNames===null){throw"The current recognizer does not provide a list of rule names."}let result=this.ruleIndexMapCache[ruleNames];if(result===undefined){result=ruleNames.reduce(function(o,k,i){o[k]=i});this.ruleIndexMapCache[ruleNames]=result}return result}getTokenType(tokenName){const ttype=this.getTokenTypeMap()[tokenName];if(ttype!==undefined){return ttype}else{return Token.INVALID_TYPE}}getErrorHeader(e){const line=e.getOffendingToken().line;const column=e.getOffendingToken().column;return"line "+line+":"+column}getTokenErrorDisplay(t){if(t===null){return"<no token>"}let s=t.text;if(s===null){if(t.type===Token.EOF){s="<EOF>"}else{s="<"+t.type+">"}}s=s.replace("\n","\\n").replace("\r","\\r").replace("\t","\\t");return"'"+s+"'"}getErrorListenerDispatch(){return new ProxyErrorListener(this._listeners)}sempred(localctx,ruleIndex,actionIndex){return true}precpred(localctx,precedence){return true}get state(){return this._stateNumber}set state(state){this._stateNumber=state}}Recognizer.tokenTypeMapCache={};Recognizer.ruleIndexMapCache={};module.exports=Recognizer},{"./Token":13,"./error/ErrorListener":36}],12:[function(require,module,exports){const{RuleNode}=require("./tree/Tree");const{INVALID_INTERVAL}=require("./tree/Tree");const Trees=require("./tree/Trees");class RuleContext extends RuleNode{constructor(parent,invokingState){super();this.parentCtx=parent||null;this.invokingState=invokingState||-1}depth(){let n=0;let p=this;while(p!==null){p=p.parentCtx;n+=1}return n}isEmpty(){return this.invokingState===-1}getSourceInterval(){return INVALID_INTERVAL}getRuleContext(){return this}getPayload(){return this}getText(){if(this.getChildCount()===0){return""}else{return this.children.map(function(child){return child.getText()}).join("")}}getAltNumber(){return 0}setAltNumber(altNumber){}getChild(i){return null}getChildCount(){return 0}accept(visitor){return visitor.visitChildren(this)}toStringTree(ruleNames,recog){return Trees.toStringTree(this,ruleNames,recog)}toString(ruleNames,stop){ruleNames=ruleNames||null;stop=stop||null;let p=this;let s="[";while(p!==null&&p!==stop){if(ruleNames===null){if(!p.isEmpty()){s+=p.invokingState}}else{const ri=p.ruleIndex;const ruleName=ri>=0&&ri<ruleNames.length?ruleNames[ri]:""+ri;s+=ruleName}if(p.parentCtx!==null&&(ruleNames!==null||!p.parentCtx.isEmpty())){s+=" "}p=p.parentCtx}s+="]";return s}}module.exports=RuleContext},{"./tree/Tree":46,"./tree/Trees":47}],13:[function(require,module,exports){class Token{constructor(){this.source=null;this.type=null;this.channel=null;this.start=null;this.stop=null;this.tokenIndex=null;this.line=null;this.column=null;this._text=null}getTokenSource(){return this.source[0]}getInputStream(){return this.source[1]}get text(){return this._text}set text(text){this._text=text}}Token.INVALID_TYPE=0;Token.EPSILON=-2;Token.MIN_USER_TOKEN_TYPE=1;Token.EOF=-1;Token.DEFAULT_CHANNEL=0;Token.HIDDEN_CHANNEL=1;class CommonToken extends Token{constructor(source,type,channel,start,stop){super();this.source=source!==undefined?source:CommonToken.EMPTY_SOURCE;this.type=type!==undefined?type:null;this.channel=channel!==undefined?channel:Token.DEFAULT_CHANNEL;this.start=start!==undefined?start:-1;this.stop=stop!==undefined?stop:-1;this.tokenIndex=-1;if(this.source[0]!==null){this.line=source[0].line;this.column=source[0].column}else{this.column=-1}}clone(){const t=new CommonToken(this.source,this.type,this.channel,this.start,this.stop);t.tokenIndex=this.tokenIndex;t.line=this.line;t.column=this.column;t.text=this.text;return t}toString(){let txt=this.text;if(txt!==null){txt=txt.replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/\t/g,"\\t")}else{txt="<no text>"}return"[@"+this.tokenIndex+","+this.start+":"+this.stop+"='"+txt+"',<"+this.type+">"+(this.channel>0?",channel="+this.channel:"")+","+this.line+":"+this.column+"]"}get text(){if(this._text!==null){return this._text}const input=this.getInputStream();if(input===null){return null}const n=input.size;if(this.start<n&&this.stop<n){return input.getText(this.start,this.stop)}else{return"<EOF>"}}set text(text){this._text=text}}CommonToken.EMPTY_SOURCE=[null,null];module.exports={Token:Token,CommonToken:CommonToken}},{}],14:[function(require,module,exports){function valueToString(v){return v===null?"null":v}function arrayToString(a){return Array.isArray(a)?"["+a.map(valueToString).join(", ")+"]":"null"}String.prototype.seed=String.prototype.seed||Math.round(Math.random()*Math.pow(2,32));String.prototype.hashCode=function(){const key=this.toString();let h1b,k1;const remainder=key.length&3;const bytes=key.length-remainder;let h1=String.prototype.seed;const c1=3432918353;const c2=461845907;let i=0;while(i<bytes){k1=key.charCodeAt(i)&255|(key.charCodeAt(++i)&255)<<8|(key.charCodeAt(++i)&255)<<16|(key.charCodeAt(++i)&255)<<24;++i;k1=(k1&65535)*c1+(((k1>>>16)*c1&65535)<<16)&4294967295;k1=k1<<15|k1>>>17;k1=(k1&65535)*c2+(((k1>>>16)*c2&65535)<<16)&4294967295;h1^=k1;h1=h1<<13|h1>>>19;h1b=(h1&65535)*5+(((h1>>>16)*5&65535)<<16)&4294967295;h1=(h1b&65535)+27492+(((h1b>>>16)+58964&65535)<<16)}k1=0;switch(remainder){case 3:k1^=(key.charCodeAt(i+2)&255)<<16;case 2:k1^=(key.charCodeAt(i+1)&255)<<8;case 1:k1^=key.charCodeAt(i)&255;k1=(k1&65535)*c1+(((k1>>>16)*c1&65535)<<16)&4294967295;k1=k1<<15|k1>>>17;k1=(k1&65535)*c2+(((k1>>>16)*c2&65535)<<16)&4294967295;h1^=k1}h1^=key.length;h1^=h1>>>16;h1=(h1&65535)*2246822507+(((h1>>>16)*2246822507&65535)<<16)&4294967295;h1^=h1>>>13;h1=(h1&65535)*3266489909+(((h1>>>16)*3266489909&65535)<<16)&4294967295;h1^=h1>>>16;return h1>>>0};function standardEqualsFunction(a,b){return a?a.equals(b):a==b}function standardHashCodeFunction(a){return a?a.hashCode():-1}class Set{constructor(hashFunction,equalsFunction){this.data={};this.hashFunction=hashFunction||standardHashCodeFunction;this.equalsFunction=equalsFunction||standardEqualsFunction}add(value){const hash=this.hashFunction(value);const key="hash_"+hash;if(key in this.data){const values=this.data[key];for(let i=0;i<values.length;i++){if(this.equalsFunction(value,values[i])){return values[i]}}values.push(value);return value}else{this.data[key]=[value];return value}}contains(value){return this.get(value)!=null}get(value){const hash=this.hashFunction(value);const key="hash_"+hash;if(key in this.data){const values=this.data[key];for(let i=0;i<values.length;i++){if(this.equalsFunction(value,values[i])){return values[i]}}}return null}values(){let l=[];for(const key in this.data){if(key.indexOf("hash_")===0){l=l.concat(this.data[key])}}return l}toString(){return arrayToString(this.values())}get length(){let l=0;for(const key in this.data){if(key.indexOf("hash_")===0){l=l+this.data[key].length}}return l}}class BitSet{constructor(){this.data=[]}add(value){this.data[value]=true}or(set){const bits=this;Object.keys(set.data).map(function(alt){bits.add(alt)})}remove(value){delete this.data[value]}contains(value){return this.data[value]===true}values(){return Object.keys(this.data)}minValue(){return Math.min.apply(null,this.values())}hashCode(){const hash=new Hash;hash.update(this.values());return hash.finish()}equals(other){if(!(other instanceof BitSet)){return false}return this.hashCode()===other.hashCode()}toString(){return"{"+this.values().join(", ")+"}"}get length(){return this.values().length}}class Map{constructor(hashFunction,equalsFunction){this.data={};this.hashFunction=hashFunction||standardHashCodeFunction;this.equalsFunction=equalsFunction||standardEqualsFunction}put(key,value){const hashKey="hash_"+this.hashFunction(key);if(hashKey in this.data){const entries=this.data[hashKey];for(let i=0;i<entries.length;i++){const entry=entries[i];if(this.equalsFunction(key,entry.key)){const oldValue=entry.value;entry.value=value;return oldValue}}entries.push({key:key,value:value});return value}else{this.data[hashKey]=[{key:key,value:value}];return value}}containsKey(key){const hashKey="hash_"+this.hashFunction(key);if(hashKey in this.data){const entries=this.data[hashKey];for(let i=0;i<entries.length;i++){const entry=entries[i];if(this.equalsFunction(key,entry.key))return true}}return false}get(key){const hashKey="hash_"+this.hashFunction(key);if(hashKey in this.data){const entries=this.data[hashKey];for(let i=0;i<entries.length;i++){const entry=entries[i];if(this.equalsFunction(key,entry.key))return entry.value}}return null}entries(){let l=[];for(const key in this.data){if(key.indexOf("hash_")===0){l=l.concat(this.data[key])}}return l}getKeys(){return this.entries().map(function(e){return e.key})}getValues(){return this.entries().map(function(e){return e.value})}toString(){const ss=this.entries().map(function(entry){return"{"+entry.key+":"+entry.value+"}"});return"["+ss.join(", ")+"]"}get length(){let l=0;for(const hashKey in this.data){if(hashKey.indexOf("hash_")===0){l=l+this.data[hashKey].length}}return l}}class AltDict{constructor(){this.data={}}get(key){key="k-"+key;if(key in this.data){return this.data[key]}else{return null}}put(key,value){key="k-"+key;this.data[key]=value}values(){const data=this.data;const keys=Object.keys(this.data);return keys.map(function(key){return data[key]})}}class DoubleDict{constructor(defaultMapCtor){this.defaultMapCtor=defaultMapCtor||Map;this.cacheMap=new this.defaultMapCtor}get(a,b){const d=this.cacheMap.get(a)||null;return d===null?null:d.get(b)||null}set(a,b,o){let d=this.cacheMap.get(a)||null;if(d===null){d=new this.defaultMapCtor;this.cacheMap.put(a,d)}d.put(b,o)}}class Hash{constructor(){this.count=0;this.hash=0}update(){for(let i=0;i<arguments.length;i++){const value=arguments[i];if(value==null)continue;if(Array.isArray(value))this.update.apply(this,value);else{let k=0;switch(typeof value){case"undefined":case"function":continue;case"number":case"boolean":k=value;break;case"string":k=value.hashCode();break;default:if(value.updateHashCode)value.updateHashCode(this);else console.log("No updateHashCode for "+value.toString());continue}k=k*3432918353;k=k<<15|k>>>32-15;k=k*461845907;this.count=this.count+1;let hash=this.hash^k;hash=hash<<13|hash>>>32-13;hash=hash*5+3864292196;this.hash=hash}}}finish(){let hash=this.hash^this.count*4;hash=hash^hash>>>16;hash=hash*2246822507;hash=hash^hash>>>13;hash=hash*3266489909;hash=hash^hash>>>16;return hash}}function hashStuff(){const hash=new Hash;hash.update.apply(hash,arguments);return hash.finish()}function escapeWhitespace(s,escapeSpaces){s=s.replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r");if(escapeSpaces){s=s.replace(/ /g,"·")}return s}function titleCase(str){return str.replace(/\w\S*/g,function(txt){return txt.charAt(0).toUpperCase()+txt.substr(1)})}function equalArrays(a,b){if(!Array.isArray(a)||!Array.isArray(b))return false;if(a===b)return true;if(a.length!==b.length)return false;for(let i=0;i<a.length;i++){if(a[i]===b[i])continue;if(!a[i].equals||!a[i].equals(b[i]))return false}return true}module.exports={Hash:Hash,Set:Set,Map:Map,BitSet:BitSet,AltDict:AltDict,DoubleDict:DoubleDict,hashStuff:hashStuff,escapeWhitespace:escapeWhitespace,arrayToString:arrayToString,titleCase:titleCase,equalArrays:equalArrays}},{}],15:[function(require,module,exports){const LL1Analyzer=require("./../LL1Analyzer");const{IntervalSet}=require("./../IntervalSet");const{Token}=require("./../Token");class ATN{constructor(grammarType,maxTokenType){this.grammarType=grammarType;this.maxTokenType=maxTokenType;this.states=[];this.decisionToState=[];this.ruleToStartState=[];this.ruleToStopState=null;this.modeNameToStartState={};this.ruleToTokenType=null;this.lexerActions=null;this.modeToStartState=[]}nextTokensInContext(s,ctx){const anal=new LL1Analyzer(this);return anal.LOOK(s,null,ctx)}nextTokensNoContext(s){if(s.nextTokenWithinRule!==null){return s.nextTokenWithinRule}s.nextTokenWithinRule=this.nextTokensInContext(s,null);s.nextTokenWithinRule.readOnly=true;return s.nextTokenWithinRule}nextTokens(s,ctx){if(ctx===undefined){return this.nextTokensNoContext(s)}else{return this.nextTokensInContext(s,ctx)}}addState(state){if(state!==null){state.atn=this;state.stateNumber=this.states.length}this.states.push(state)}removeState(state){this.states[state.stateNumber]=null}defineDecisionState(s){this.decisionToState.push(s);s.decision=this.decisionToState.length-1;return s.decision}getDecisionState(decision){if(this.decisionToState.length===0){return null}else{return this.decisionToState[decision]}}getExpectedTokens(stateNumber,ctx){if(stateNumber<0||stateNumber>=this.states.length){throw"Invalid state number."}const s=this.states[stateNumber];let following=this.nextTokens(s);if(!following.contains(Token.EPSILON)){return following}const expected=new IntervalSet;expected.addSet(following);expected.removeOne(Token.EPSILON);while(ctx!==null&&ctx.invokingState>=0&&following.contains(Token.EPSILON)){const invokingState=this.states[ctx.invokingState];const rt=invokingState.transitions[0];following=this.nextTokens(rt.followState);expected.addSet(following);expected.removeOne(Token.EPSILON);ctx=ctx.parentCtx}if(following.contains(Token.EPSILON)){expected.addOne(Token.EOF)}return expected}}ATN.INVALID_ALT_NUMBER=0;module.exports=ATN},{"./../IntervalSet":5,"./../LL1Analyzer":6,"./../Token":13}],16:[function(require,module,exports){const{DecisionState}=require("./ATNState");const{SemanticContext}=require("./SemanticContext");const{Hash}=require("../Utils");function checkParams(params,isCfg){if(params===null){const result={state:null,alt:null,context:null,semanticContext:null};if(isCfg){result.reachesIntoOuterContext=0}return result}else{const props={};props.state=params.state||null;props.alt=params.alt===undefined?null:params.alt;props.context=params.context||null;props.semanticContext=params.semanticContext||null;if(isCfg){props.reachesIntoOuterContext=params.reachesIntoOuterContext||0;props.precedenceFilterSuppressed=params.precedenceFilterSuppressed||false}return props}}class ATNConfig{constructor(params,config){this.checkContext(params,config);params=checkParams(params);config=checkParams(config,true);this.state=params.state!==null?params.state:config.state;this.alt=params.alt!==null?params.alt:config.alt;this.context=params.context!==null?params.context:config.context;this.semanticContext=params.semanticContext!==null?params.semanticContext:config.semanticContext!==null?config.semanticContext:SemanticContext.NONE;this.reachesIntoOuterContext=config.reachesIntoOuterContext;this.precedenceFilterSuppressed=config.precedenceFilterSuppressed}checkContext(params,config){if((params.context===null||params.context===undefined)&&(config===null||config.context===null||config.context===undefined)){this.context=null}}hashCode(){const hash=new Hash;this.updateHashCode(hash);return hash.finish()}updateHashCode(hash){hash.update(this.state.stateNumber,this.alt,this.context,this.semanticContext)}equals(other){if(this===other){return true}else if(!(other instanceof ATNConfig)){return false}else{return this.state.stateNumber===other.state.stateNumber&&this.alt===other.alt&&(this.context===null?other.context===null:this.context.equals(other.context))&&this.semanticContext.equals(other.semanticContext)&&this.precedenceFilterSuppressed===other.precedenceFilterSuppressed}}hashCodeForConfigSet(){const hash=new Hash;hash.update(this.state.stateNumber,this.alt,this.semanticContext);return hash.finish()}equalsForConfigSet(other){if(this===other){return true}else if(!(other instanceof ATNConfig)){return false}else{return this.state.stateNumber===other.state.stateNumber&&this.alt===other.alt&&this.semanticContext.equals(other.semanticContext)}}toString(){return"("+this.state+","+this.alt+(this.context!==null?",["+this.context.toString()+"]":"")+(this.semanticContext!==SemanticContext.NONE?","+this.semanticContext.toString():"")+(this.reachesIntoOuterContext>0?",up="+this.reachesIntoOuterContext:"")+")"}}class LexerATNConfig extends ATNConfig{constructor(params,config){super(params,config);const lexerActionExecutor=params.lexerActionExecutor||null;this.lexerActionExecutor=lexerActionExecutor||(config!==null?config.lexerActionExecutor:null);this.passedThroughNonGreedyDecision=config!==null?this.checkNonGreedyDecision(config,this.state):false;this.hashCodeForConfigSet=LexerATNConfig.prototype.hashCode;this.equalsForConfigSet=LexerATNConfig.prototype.equals;return this}updateHashCode(hash){hash.update(this.state.stateNumber,this.alt,this.context,this.semanticContext,this.passedThroughNonGreedyDecision,this.lexerActionExecutor)}equals(other){return this===other||other instanceof LexerATNConfig&&this.passedThroughNonGreedyDecision===other.passedThroughNonGreedyDecision&&(this.lexerActionExecutor?this.lexerActionExecutor.equals(other.lexerActionExecutor):!other.lexerActionExecutor)&&super.equals(other)}checkNonGreedyDecision(source,target){return source.passedThroughNonGreedyDecision||target instanceof DecisionState&&target.nonGreedy}}module.exports.ATNConfig=ATNConfig;module.exports.LexerATNConfig=LexerATNConfig},{"../Utils":14,"./ATNState":21,"./SemanticContext":28}],17:[function(require,module,exports){const ATN=require("./ATN");const Utils=require("./../Utils");const{SemanticContext}=require("./SemanticContext");const{merge}=require("./../PredictionContext");function hashATNConfig(c){return c.hashCodeForConfigSet()}function equalATNConfigs(a,b){if(a===b){return true}else if(a===null||b===null){return false}else return a.equalsForConfigSet(b)}class ATNConfigSet{constructor(fullCtx){this.configLookup=new Utils.Set(hashATNConfig,equalATNConfigs);this.fullCtx=fullCtx===undefined?true:fullCtx;this.readOnly=false;this.configs=[];this.uniqueAlt=0;this.conflictingAlts=null;this.hasSemanticContext=false;this.dipsIntoOuterContext=false;this.cachedHashCode=-1}add(config,mergeCache){if(mergeCache===undefined){mergeCache=null}if(this.readOnly){throw"This set is readonly"}if(config.semanticContext!==SemanticContext.NONE){this.hasSemanticContext=true}if(config.reachesIntoOuterContext>0){this.dipsIntoOuterContext=true}const existing=this.configLookup.add(config);if(existing===config){this.cachedHashCode=-1;this.configs.push(config);return true}const rootIsWildcard=!this.fullCtx;const merged=merge(existing.context,config.context,rootIsWildcard,mergeCache);existing.reachesIntoOuterContext=Math.max(existing.reachesIntoOuterContext,config.reachesIntoOuterContext);if(config.precedenceFilterSuppressed){existing.precedenceFilterSuppressed=true}existing.context=merged;return true}getStates(){const states=new Utils.Set;for(let i=0;i<this.configs.length;i++){states.add(this.configs[i].state)}return states}getPredicates(){const preds=[];for(let i=0;i<this.configs.length;i++){const c=this.configs[i].semanticContext;if(c!==SemanticContext.NONE){preds.push(c.semanticContext)}}return preds}optimizeConfigs(interpreter){if(this.readOnly){throw"This set is readonly"}if(this.configLookup.length===0){return}for(let i=0;i<this.configs.length;i++){const config=this.configs[i];config.context=interpreter.getCachedContext(config.context)}}addAll(coll){for(let i=0;i<coll.length;i++){this.add(coll[i])}return false}equals(other){return this===other||other instanceof ATNConfigSet&&Utils.equalArrays(this.configs,other.configs)&&this.fullCtx===other.fullCtx&&this.uniqueAlt===other.uniqueAlt&&this.conflictingAlts===other.conflictingAlts&&this.hasSemanticContext===other.hasSemanticContext&&this.dipsIntoOuterContext===other.dipsIntoOuterContext}hashCode(){const hash=new Utils.Hash;hash.update(this.configs);return hash.finish()}updateHashCode(hash){if(this.readOnly){if(this.cachedHashCode===-1){this.cachedHashCode=this.hashCode()}hash.update(this.cachedHashCode)}else{hash.update(this.hashCode())}}isEmpty(){return this.configs.length===0}contains(item){if(this.configLookup===null){throw"This method is not implemented for readonly sets."}return this.configLookup.contains(item)}containsFast(item){if(this.configLookup===null){throw"This method is not implemented for readonly sets."}return this.configLookup.containsFast(item)}clear(){if(this.readOnly){throw"This set is readonly"}this.configs=[];this.cachedHashCode=-1;this.configLookup=new Utils.Set}setReadonly(readOnly){this.readOnly=readOnly;if(readOnly){this.configLookup=null}}toString(){return Utils.arrayToString(this.configs)+(this.hasSemanticContext?",hasSemanticContext="+this.hasSemanticContext:"")+(this.uniqueAlt!==ATN.INVALID_ALT_NUMBER?",uniqueAlt="+this.uniqueAlt:"")+(this.conflictingAlts!==null?",conflictingAlts="+this.conflictingAlts:"")+(this.dipsIntoOuterContext?",dipsIntoOuterContext":"")}get items(){return this.configs}get length(){return this.configs.length}}class OrderedATNConfigSet extends ATNConfigSet{constructor(){super();this.configLookup=new Utils.Set}}module.exports={ATNConfigSet:ATNConfigSet,OrderedATNConfigSet:OrderedATNConfigSet}},{"./../PredictionContext":10,"./../Utils":14,"./ATN":15,"./SemanticContext":28}],18:[function(require,module,exports){class ATNDeserializationOptions{constructor(copyFrom){if(copyFrom===undefined){copyFrom=null}this.readOnly=false;this.verifyATN=copyFrom===null?true:copyFrom.verifyATN;this.generateRuleBypassTransitions=copyFrom===null?false:copyFrom.generateRuleBypassTransitions}}ATNDeserializationOptions.defaultOptions=new ATNDeserializationOptions;ATNDeserializationOptions.defaultOptions.readOnly=true;module.exports=ATNDeserializationOptions},{}],19:[function(require,module,exports){const{Token}=require("./../Token");const ATN=require("./ATN");const ATNType=require("./ATNType");const{ATNState,BasicState,DecisionState,BlockStartState,BlockEndState,LoopEndState,RuleStartState,RuleStopState,TokensStartState,PlusLoopbackState,StarLoopbackState,StarLoopEntryState,PlusBlockStartState,StarBlockStartState,BasicBlockStartState}=require("./ATNState");const{Transition,AtomTransition,SetTransition,NotSetTransition,RuleTransition,RangeTransition,ActionTransition,EpsilonTransition,WildcardTransition,PredicateTransition,PrecedencePredicateTransition}=require("./Transition");const{IntervalSet}=require("./../IntervalSet");const ATNDeserializationOptions=require("./ATNDeserializationOptions");const{LexerActionType,LexerSkipAction,LexerChannelAction,LexerCustomAction,LexerMoreAction,LexerTypeAction,LexerPushModeAction,LexerPopModeAction,LexerModeAction}=require("./LexerAction");const BASE_SERIALIZED_UUID="AADB8D7E-AEEF-4415-AD2B-8204D6CF042E";const ADDED_UNICODE_SMP="59627784-3BE5-417A-B9EB-8131A7286089";const SUPPORTED_UUIDS=[BASE_SERIALIZED_UUID,ADDED_UNICODE_SMP];const SERIALIZED_VERSION=3;const SERIALIZED_UUID=ADDED_UNICODE_SMP;function initArray(length,value){const tmp=[];tmp[length-1]=value;return tmp.map(function(i){return value})}class ATNDeserializer{constructor(options){if(options===undefined||options===null){options=ATNDeserializationOptions.defaultOptions}this.deserializationOptions=options;this.stateFactories=null;this.actionFactories=null}isFeatureSupported(feature,actualUuid){const idx1=SUPPORTED_UUIDS.indexOf(feature);if(idx1<0){return false}const idx2=SUPPORTED_UUIDS.indexOf(actualUuid);return idx2>=idx1}deserialize(data){this.reset(data);this.checkVersion();this.checkUUID();const atn=this.readATN();this.readStates(atn);this.readRules(atn);this.readModes(atn);const sets=[];this.readSets(atn,sets,this.readInt.bind(this));if(this.isFeatureSupported(ADDED_UNICODE_SMP,this.uuid)){this.readSets(atn,sets,this.readInt32.bind(this))}this.readEdges(atn,sets);this.readDecisions(atn);this.readLexerActions(atn);this.markPrecedenceDecisions(atn);this.verifyATN(atn);if(this.deserializationOptions.generateRuleBypassTransitions&&atn.grammarType===ATNType.PARSER){this.generateRuleBypassTransitions(atn);this.verifyATN(atn)}return atn}reset(data){const adjust=function(c){const v=c.charCodeAt(0);return v>1?v-2:v+65534};const temp=data.split("").map(adjust);temp[0]=data.charCodeAt(0);this.data=temp;this.pos=0}checkVersion(){const version=this.readInt();if(version!==SERIALIZED_VERSION){throw"Could not deserialize ATN with version "+version+" (expected "+SERIALIZED_VERSION+")."}}checkUUID(){const uuid=this.readUUID();if(SUPPORTED_UUIDS.indexOf(uuid)<0){throw"Could not deserialize ATN with UUID: "+uuid+" (expected "+SERIALIZED_UUID+" or a legacy UUID).",uuid,SERIALIZED_UUID}this.uuid=uuid}readATN(){const grammarType=this.readInt();const maxTokenType=this.readInt();return new ATN(grammarType,maxTokenType)}readStates(atn){let j,pair,stateNumber;const loopBackStateNumbers=[];const endStateNumbers=[];const nstates=this.readInt();for(let i=0;i<nstates;i++){const stype=this.readInt();if(stype===ATNState.INVALID_TYPE){atn.addState(null);continue}let ruleIndex=this.readInt();if(ruleIndex===65535){ruleIndex=-1}const s=this.stateFactory(stype,ruleIndex);if(stype===ATNState.LOOP_END){const loopBackStateNumber=this.readInt();loopBackStateNumbers.push([s,loopBackStateNumber])}else if(s instanceof BlockStartState){const endStateNumber=this.readInt();endStateNumbers.push([s,endStateNumber])}atn.addState(s)}for(j=0;j<loopBackStateNumbers.length;j++){pair=loopBackStateNumbers[j];pair[0].loopBackState=atn.states[pair[1]]}for(j=0;j<endStateNumbers.length;j++){pair=endStateNumbers[j];pair[0].endState=atn.states[pair[1]]}let numNonGreedyStates=this.readInt();for(j=0;j<numNonGreedyStates;j++){stateNumber=this.readInt();atn.states[stateNumber].nonGreedy=true}let numPrecedenceStates=this.readInt();for(j=0;j<numPrecedenceStates;j++){stateNumber=this.readInt();atn.states[stateNumber].isPrecedenceRule=true}}readRules(atn){let i;const nrules=this.readInt();if(atn.grammarType===ATNType.LEXER){atn.ruleToTokenType=initArray(nrules,0)}atn.ruleToStartState=initArray(nrules,0);for(i=0;i<nrules;i++){const s=this.readInt();atn.ruleToStartState[i]=atn.states[s];if(atn.grammarType===ATNType.LEXER){let tokenType=this.readInt();if(tokenType===65535){tokenType=Token.EOF}atn.ruleToTokenType[i]=tokenType}}atn.ruleToStopState=initArray(nrules,0);for(i=0;i<atn.states.length;i++){const state=atn.states[i];if(!(state instanceof RuleStopState)){continue}atn.ruleToStopState[state.ruleIndex]=state;atn.ruleToStartState[state.ruleIndex].stopState=state}}readModes(atn){const nmodes=this.readInt();for(let i=0;i<nmodes;i++){let s=this.readInt();atn.modeToStartState.push(atn.states[s])}}readSets(atn,sets,readUnicode){const m=this.readInt();for(let i=0;i<m;i++){const iset=new IntervalSet;sets.push(iset);const n=this.readInt();const containsEof=this.readInt();if(containsEof!==0){iset.addOne(-1)}for(let j=0;j<n;j++){const i1=readUnicode();const i2=readUnicode();iset.addRange(i1,i2)}}}readEdges(atn,sets){let i,j,state,trans,target;const nedges=this.readInt();for(i=0;i<nedges;i++){const src=this.readInt();const trg=this.readInt();const ttype=this.readInt();const arg1=this.readInt();const arg2=this.readInt();const arg3=this.readInt();trans=this.edgeFactory(atn,ttype,src,trg,arg1,arg2,arg3,sets);const srcState=atn.states[src];srcState.addTransition(trans)}for(i=0;i<atn.states.length;i++){state=atn.states[i];for(j=0;j<state.transitions.length;j++){const t=state.transitions[j];if(!(t instanceof RuleTransition)){continue}let outermostPrecedenceReturn=-1;if(atn.ruleToStartState[t.target.ruleIndex].isPrecedenceRule){if(t.precedence===0){outermostPrecedenceReturn=t.target.ruleIndex}}trans=new EpsilonTransition(t.followState,outermostPrecedenceReturn);atn.ruleToStopState[t.target.ruleIndex].addTransition(trans)}}for(i=0;i<atn.states.length;i++){state=atn.states[i];if(state instanceof BlockStartState){if(state.endState===null){throw"IllegalState"}if(state.endState.startState!==null){throw"IllegalState"}state.endState.startState=state}if(state instanceof PlusLoopbackState){for(j=0;j<state.transitions.length;j++){target=state.transitions[j].target;if(target instanceof PlusBlockStartState){target.loopBackState=state}}}else if(state instanceof StarLoopbackState){for(j=0;j<state.transitions.length;j++){target=state.transitions[j].target;if(target instanceof StarLoopEntryState){target.loopBackState=state}}}}}readDecisions(atn){const ndecisions=this.readInt();for(let i=0;i<ndecisions;i++){const s=this.readInt();const decState=atn.states[s];atn.decisionToState.push(decState);decState.decision=i}}readLexerActions(atn){if(atn.grammarType===ATNType.LEXER){const count=this.readInt();atn.lexerActions=initArray(count,null);for(let i=0;i<count;i++){const actionType=this.readInt();let data1=this.readInt();if(data1===65535){data1=-1}let data2=this.readInt();if(data2===65535){data2=-1}atn.lexerActions[i]=this.lexerActionFactory(actionType,data1,data2)}}}generateRuleBypassTransitions(atn){let i;const count=atn.ruleToStartState.length;for(i=0;i<count;i++){atn.ruleToTokenType[i]=atn.maxTokenType+i+1}for(i=0;i<count;i++){this.generateRuleBypassTransition(atn,i)}}generateRuleBypassTransition(atn,idx){let i,state;const bypassStart=new BasicBlockStartState;bypassStart.ruleIndex=idx;atn.addState(bypassStart);const bypassStop=new BlockEndState;bypassStop.ruleIndex=idx;atn.addState(bypassStop);bypassStart.endState=bypassStop;atn.defineDecisionState(bypassStart);bypassStop.startState=bypassStart;let excludeTransition=null;let endState=null;if(atn.ruleToStartState[idx].isPrecedenceRule){endState=null;for(i=0;i<atn.states.length;i++){state=atn.states[i];if(this.stateIsEndStateFor(state,idx)){endState=state;excludeTransition=state.loopBackState.transitions[0];break}}if(excludeTransition===null){throw"Couldn't identify final state of the precedence rule prefix section."}}else{endState=atn.ruleToStopState[idx]}for(i=0;i<atn.states.length;i++){state=atn.states[i];for(let j=0;j<state.transitions.length;j++){const transition=state.transitions[j];if(transition===excludeTransition){continue}if(transition.target===endState){transition.target=bypassStop}}}const ruleToStartState=atn.ruleToStartState[idx];const count=ruleToStartState.transitions.length;while(count>0){bypassStart.addTransition(ruleToStartState.transitions[count-1]);ruleToStartState.transitions=ruleToStartState.transitions.slice(-1)}atn.ruleToStartState[idx].addTransition(new EpsilonTransition(bypassStart));bypassStop.addTransition(new EpsilonTransition(endState));const matchState=new BasicState;atn.addState(matchState);matchState.addTransition(new AtomTransition(bypassStop,atn.ruleToTokenType[idx]));bypassStart.addTransition(new EpsilonTransition(matchState))}stateIsEndStateFor(state,idx){if(state.ruleIndex!==idx){return null}if(!(state instanceof StarLoopEntryState)){return null}const maybeLoopEndState=state.transitions[state.transitions.length-1].target;if(!(maybeLoopEndState instanceof LoopEndState)){return null}if(maybeLoopEndState.epsilonOnlyTransitions&&maybeLoopEndState.transitions[0].target instanceof RuleStopState){return state}else{return null}}markPrecedenceDecisions(atn){for(let i=0;i<atn.states.length;i++){const state=atn.states[i];if(!(state instanceof StarLoopEntryState)){continue}if(atn.ruleToStartState[state.ruleIndex].isPrecedenceRule){const maybeLoopEndState=state.transitions[state.transitions.length-1].target;if(maybeLoopEndState instanceof LoopEndState){if(maybeLoopEndState.epsilonOnlyTransitions&&maybeLoopEndState.transitions[0].target instanceof RuleStopState){state.isPrecedenceDecision=true}}}}}verifyATN(atn){if(!this.deserializationOptions.verifyATN){return}for(let i=0;i<atn.states.length;i++){const state=atn.states[i];if(state===null){continue}this.checkCondition(state.epsilonOnlyTransitions||state.transitions.length<=1);if(state instanceof PlusBlockStartState){this.checkCondition(state.loopBackState!==null)}else if(state instanceof StarLoopEntryState){this.checkCondition(state.loopBackState!==null);this.checkCondition(state.transitions.length===2);if(state.transitions[0].target instanceof StarBlockStartState){this.checkCondition(state.transitions[1].target instanceof LoopEndState);this.checkCondition(!state.nonGreedy)}else if(state.transitions[0].target instanceof LoopEndState){this.checkCondition(state.transitions[1].target instanceof StarBlockStartState);this.checkCondition(state.nonGreedy)}else{throw"IllegalState"}}else if(state instanceof StarLoopbackState){this.checkCondition(state.transitions.length===1);this.checkCondition(state.transitions[0].target instanceof StarLoopEntryState)}else if(state instanceof LoopEndState){this.checkCondition(state.loopBackState!==null)}else if(state instanceof RuleStartState){this.checkCondition(state.stopState!==null)}else if(state instanceof BlockStartState){this.checkCondition(state.endState!==null)}else if(state instanceof BlockEndState){this.checkCondition(state.startState!==null)}else if(state instanceof DecisionState){this.checkCondition(state.transitions.length<=1||state.decision>=0)}else{this.checkCondition(state.transitions.length<=1||state instanceof RuleStopState)}}}checkCondition(condition,message){if(!condition){if(message===undefined||message===null){message="IllegalState"}throw message}}readInt(){return this.data[this.pos++]}readInt32(){const low=this.readInt();const high=this.readInt();return low|high<<16}readLong(){const low=this.readInt32();const high=this.readInt32();return low&4294967295|high<<32}readUUID(){const bb=[];for(let i=7;i>=0;i--){const int=this.readInt();bb[2*i+1]=int&255;bb[2*i]=int>>8&255}return byteToHex[bb[0]]+byteToHex[bb[1]]+byteToHex[bb[2]]+byteToHex[bb[3]]+"-"+byteToHex[bb[4]]+byteToHex[bb[5]]+"-"+byteToHex[bb[6]]+byteToHex[bb[7]]+"-"+byteToHex[bb[8]]+byteToHex[bb[9]]+"-"+byteToHex[bb[10]]+byteToHex[bb[11]]+byteToHex[bb[12]]+byteToHex[bb[13]]+byteToHex[bb[14]]+byteToHex[bb[15]]}edgeFactory(atn,type,src,trg,arg1,arg2,arg3,sets){const target=atn.states[trg];switch(type){case Transition.EPSILON:return new EpsilonTransition(target);case Transition.RANGE:return arg3!==0?new RangeTransition(target,Token.EOF,arg2):new RangeTransition(target,arg1,arg2);case Transition.RULE:return new RuleTransition(atn.states[arg1],arg2,arg3,target);case Transition.PREDICATE:return new PredicateTransition(target,arg1,arg2,arg3!==0);case Transition.PRECEDENCE:return new PrecedencePredicateTransition(target,arg1);case Transition.ATOM:return arg3!==0?new AtomTransition(target,Token.EOF):new AtomTransition(target,arg1);case Transition.ACTION:return new ActionTransition(target,arg1,arg2,arg3!==0);case Transition.SET:return new SetTransition(target,sets[arg1]);case Transition.NOT_SET:return new NotSetTransition(target,sets[arg1]);case Transition.WILDCARD:return new WildcardTransition(target);default:throw"The specified transition type: "+type+" is not valid."}}stateFactory(type,ruleIndex){if(this.stateFactories===null){const sf=[];sf[ATNState.INVALID_TYPE]=null;sf[ATNState.BASIC]=()=>new BasicState;sf[ATNState.RULE_START]=()=>new RuleStartState;sf[ATNState.BLOCK_START]=()=>new BasicBlockStartState;sf[ATNState.PLUS_BLOCK_START]=()=>new PlusBlockStartState;sf[ATNState.STAR_BLOCK_START]=()=>new StarBlockStartState;sf[ATNState.TOKEN_START]=()=>new TokensStartState;sf[ATNState.RULE_STOP]=()=>new RuleStopState;sf[ATNState.BLOCK_END]=()=>new BlockEndState;sf[ATNState.STAR_LOOP_BACK]=()=>new StarLoopbackState;sf[ATNState.STAR_LOOP_ENTRY]=()=>new StarLoopEntryState;sf[ATNState.PLUS_LOOP_BACK]=()=>new PlusLoopbackState;sf[ATNState.LOOP_END]=()=>new LoopEndState;this.stateFactories=sf}if(type>this.stateFactories.length||this.stateFactories[type]===null){throw"The specified state type "+type+" is not valid."}else{const s=this.stateFactories[type]();if(s!==null){s.ruleIndex=ruleIndex;return s}}}lexerActionFactory(type,data1,data2){if(this.actionFactories===null){const af=[];af[LexerActionType.CHANNEL]=(data1,data2)=>new LexerChannelAction(data1);af[LexerActionType.CUSTOM]=(data1,data2)=>new LexerCustomAction(data1,data2);af[LexerActionType.MODE]=(data1,data2)=>new LexerModeAction(data1);af[LexerActionType.MORE]=(data1,data2)=>LexerMoreAction.INSTANCE;af[LexerActionType.POP_MODE]=(data1,data2)=>LexerPopModeAction.INSTANCE;af[LexerActionType.PUSH_MODE]=(data1,data2)=>new LexerPushModeAction(data1);af[LexerActionType.SKIP]=(data1,data2)=>LexerSkipAction.INSTANCE;af[LexerActionType.TYPE]=(data1,data2)=>new LexerTypeAction(data1);this.actionFactories=af}if(type>this.actionFactories.length||this.actionFactories[type]===null){throw"The specified lexer action type "+type+" is not valid."}else{return this.actionFactories[type](data1,data2)}}}function createByteToHex(){const bth=[];for(let i=0;i<256;i++){bth[i]=(i+256).toString(16).substr(1).toUpperCase()}return bth}const byteToHex=createByteToHex();module.exports=ATNDeserializer},{"./../IntervalSet":5,"./../Token":13,"./ATN":15,"./ATNDeserializationOptions":18,"./ATNState":21,"./ATNType":22,"./LexerAction":24,"./Transition":29}],20:[function(require,module,exports){const{DFAState}=require("./../dfa/DFAState");const{ATNConfigSet}=require("./ATNConfigSet");const{getCachedPredictionContext}=require("./../PredictionContext");const{Map}=require("./../Utils");class ATNSimulator{constructor(atn,sharedContextCache){this.atn=atn;this.sharedContextCache=sharedContextCache;return this}getCachedContext(context){if(this.sharedContextCache===null){return context}const visited=new Map;return getCachedPredictionContext(context,this.sharedContextCache,visited)}}ATNSimulator.ERROR=new DFAState(2147483647,new ATNConfigSet);module.exports=ATNSimulator},{"./../PredictionContext":10,"./../Utils":14,"./../dfa/DFAState":33,"./ATNConfigSet":17}],21:[function(require,module,exports){const INITIAL_NUM_TRANSITIONS=4;class ATNState{constructor(){this.atn=null;this.stateNumber=ATNState.INVALID_STATE_NUMBER;this.stateType=null;this.ruleIndex=0;this.epsilonOnlyTransitions=false;this.transitions=[];this.nextTokenWithinRule=null}toString(){return this.stateNumber}equals(other){if(other instanceof ATNState){return this.stateNumber===other.stateNumber}else{return false}}isNonGreedyExitState(){return false}addTransition(trans,index){if(index===undefined){index=-1}if(this.transitions.length===0){this.epsilonOnlyTransitions=trans.isEpsilon}else if(this.epsilonOnlyTransitions!==trans.isEpsilon){this.epsilonOnlyTransitions=false}if(index===-1){this.transitions.push(trans)}else{this.transitions.splice(index,1,trans)}}}ATNState.INVALID_TYPE=0;ATNState.BASIC=1;ATNState.RULE_START=2;ATNState.BLOCK_START=3;ATNState.PLUS_BLOCK_START=4;ATNState.STAR_BLOCK_START=5;ATNState.TOKEN_START=6;ATNState.RULE_STOP=7;ATNState.BLOCK_END=8;ATNState.STAR_LOOP_BACK=9;ATNState.STAR_LOOP_ENTRY=10;ATNState.PLUS_LOOP_BACK=11;ATNState.LOOP_END=12;ATNState.serializationNames=["INVALID","BASIC","RULE_START","BLOCK_START","PLUS_BLOCK_START","STAR_BLOCK_START","TOKEN_START","RULE_STOP","BLOCK_END","STAR_LOOP_BACK","STAR_LOOP_ENTRY","PLUS_LOOP_BACK","LOOP_END"];ATNState.INVALID_STATE_NUMBER=-1;class BasicState extends ATNState{constructor(){super();this.stateType=ATNState.BASIC}}class DecisionState extends ATNState{constructor(){super();this.decision=-1;this.nonGreedy=false;return this}}class BlockStartState extends DecisionState{constructor(){super();this.endState=null;return this}}class BasicBlockStartState extends BlockStartState{constructor(){super();this.stateType=ATNState.BLOCK_START;return this}}class BlockEndState extends ATNState{constructor(){super();this.stateType=ATNState.BLOCK_END;this.startState=null;return this}}class RuleStopState extends ATNState{constructor(){super();this.stateType=ATNState.RULE_STOP;return this}}class RuleStartState extends ATNState{constructor(){super();this.stateType=ATNState.RULE_START;this.stopState=null;this.isPrecedenceRule=false;return this}}class PlusLoopbackState extends DecisionState{constructor(){super();this.stateType=ATNState.PLUS_LOOP_BACK;return this}}class PlusBlockStartState extends BlockStartState{constructor(){super();this.stateType=ATNState.PLUS_BLOCK_START;this.loopBackState=null;return this}}class StarBlockStartState extends BlockStartState{constructor(){super();this.stateType=ATNState.STAR_BLOCK_START;return this}}class StarLoopbackState extends ATNState{constructor(){super();this.stateType=ATNState.STAR_LOOP_BACK;return this}}class StarLoopEntryState extends DecisionState{constructor(){super();this.stateType=ATNState.STAR_LOOP_ENTRY;this.loopBackState=null;this.isPrecedenceDecision=null;return this}}class LoopEndState extends ATNState{constructor(){super();this.stateType=ATNState.LOOP_END;this.loopBackState=null;return this}}class TokensStartState extends DecisionState{constructor(){super();this.stateType=ATNState.TOKEN_START;return this}}module.exports={ATNState:ATNState,BasicState:BasicState,DecisionState:DecisionState,BlockStartState:BlockStartState,BlockEndState:BlockEndState,LoopEndState:LoopEndState,RuleStartState:RuleStartState,RuleStopState:RuleStopState,TokensStartState:TokensStartState,PlusLoopbackState:PlusLoopbackState,StarLoopbackState:StarLoopbackState,StarLoopEntryState:StarLoopEntryState,PlusBlockStartState:PlusBlockStartState,StarBlockStartState:StarBlockStartState,BasicBlockStartState:BasicBlockStartState}},{}],22:[function(require,module,exports){module.exports={LEXER:0,PARSER:1}},{}],23:[function(require,module,exports){const{Token}=require("./../Token");const Lexer=require("./../Lexer");const ATN=require("./ATN");const ATNSimulator=require("./ATNSimulator");const{DFAState}=require("./../dfa/DFAState");const{OrderedATNConfigSet}=require("./ATNConfigSet");const{PredictionContext}=require("./../PredictionContext");const{SingletonPredictionContext}=require("./../PredictionContext");const{RuleStopState}=require("./ATNState");const{LexerATNConfig}=require("./ATNConfig");const{Transition}=require("./Transition");const LexerActionExecutor=require("./LexerActionExecutor");const{LexerNoViableAltException}=require("./../error/Errors");function resetSimState(sim){sim.index=-1;sim.line=0;sim.column=-1;sim.dfaState=null}class SimState{constructor(){resetSimState(this)}reset(){resetSimState(this)}}class LexerATNSimulator extends ATNSimulator{constructor(recog,atn,decisionToDFA,sharedContextCache){super(atn,sharedContextCache);this.decisionToDFA=decisionToDFA;this.recog=recog;this.startIndex=-1;this.line=1;this.column=0;this.mode=Lexer.DEFAULT_MODE;this.prevAccept=new SimState}copyState(simulator){this.column=simulator.column;this.line=simulator.line;this.mode=simulator.mode;this.startIndex=simulator.startIndex}match(input,mode){this.match_calls+=1;this.mode=mode;const mark=input.mark();try{this.startIndex=input.index;this.prevAccept.reset();const dfa=this.decisionToDFA[mode];if(dfa.s0===null){return this.matchATN(input)}else{return this.execATN(input,dfa.s0)}}finally{input.release(mark)}}reset(){this.prevAccept.reset();this.startIndex=-1;this.line=1;this.column=0;this.mode=Lexer.DEFAULT_MODE}matchATN(input){const startState=this.atn.modeToStartState[this.mode];if(LexerATNSimulator.debug){console.log("matchATN mode "+this.mode+" start: "+startState)}const old_mode=this.mode;const s0_closure=this.computeStartState(input,startState);const suppressEdge=s0_closure.hasSemanticContext;s0_closure.hasSemanticContext=false;const next=this.addDFAState(s0_closure);if(!suppressEdge){this.decisionToDFA[this.mode].s0=next}const predict=this.execATN(input,next);if(LexerATNSimulator.debug){console.log("DFA after matchATN: "+this.decisionToDFA[old_mode].toLexerString())}return predict}execATN(input,ds0){if(LexerATNSimulator.debug){console.log("start state closure="+ds0.configs)}if(ds0.isAcceptState){this.captureSimState(this.prevAccept,input,ds0)}let t=input.LA(1);let s=ds0;while(true){if(LexerATNSimulator.debug){console.log("execATN loop starting closure: "+s.configs)}let target=this.getExistingTargetState(s,t);if(target===null){target=this.computeTargetState(input,s,t)}if(target===ATNSimulator.ERROR){break}if(t!==Token.EOF){this.consume(input)}if(target.isAcceptState){this.captureSimState(this.prevAccept,input,target);if(t===Token.EOF){break}}t=input.LA(1);s=target}return this.failOrAccept(this.prevAccept,input,s.configs,t)}getExistingTargetState(s,t){if(s.edges===null||t<LexerATNSimulator.MIN_DFA_EDGE||t>LexerATNSimulator.MAX_DFA_EDGE){return null}let target=s.edges[t-LexerATNSimulator.MIN_DFA_EDGE];if(target===undefined){target=null}if(LexerATNSimulator.debug&&target!==null){console.log("reuse state "+s.stateNumber+" edge to "+target.stateNumber)}return target}computeTargetState(input,s,t){const reach=new OrderedATNConfigSet;this.getReachableConfigSet(input,s.configs,reach,t);if(reach.items.length===0){if(!reach.hasSemanticContext){this.addDFAEdge(s,t,ATNSimulator.ERROR)}return ATNSimulator.ERROR}return this.addDFAEdge(s,t,null,reach)}failOrAccept(prevAccept,input,reach,t){if(this.prevAccept.dfaState!==null){const lexerActionExecutor=prevAccept.dfaState.lexerActionExecutor;this.accept(input,lexerActionExecutor,this.startIndex,prevAccept.index,prevAccept.line,prevAccept.column);return prevAccept.dfaState.prediction}else{if(t===Token.EOF&&input.index===this.startIndex){return Token.EOF}throw new LexerNoViableAltException(this.recog,input,this.startIndex,reach)}}getReachableConfigSet(input,closure,reach,t){let skipAlt=ATN.INVALID_ALT_NUMBER;for(let i=0;i<closure.items.length;i++){const cfg=closure.items[i];const currentAltReachedAcceptState=cfg.alt===skipAlt;if(currentAltReachedAcceptState&&cfg.passedThroughNonGreedyDecision){continue}if(LexerATNSimulator.debug){console.log("testing %s at %s\n",this.getTokenName(t),cfg.toString(this.recog,true))}for(let j=0;j<cfg.state.transitions.length;j++){const trans=cfg.state.transitions[j];const target=this.getReachableTarget(trans,t);if(target!==null){let lexerActionExecutor=cfg.lexerActionExecutor;if(lexerActionExecutor!==null){lexerActionExecutor=lexerActionExecutor.fixOffsetBeforeMatch(input.index-this.startIndex)}const treatEofAsEpsilon=t===Token.EOF;const config=new LexerATNConfig({state:target,lexerActionExecutor:lexerActionExecutor},cfg);if(this.closure(input,config,reach,currentAltReachedAcceptState,true,treatEofAsEpsilon)){skipAlt=cfg.alt}}}}}accept(input,lexerActionExecutor,startIndex,index,line,charPos){if(LexerATNSimulator.debug){console.log("ACTION %s\n",lexerActionExecutor)}input.seek(index);this.line=line;this.column=charPos;if(lexerActionExecutor!==null&&this.recog!==null){lexerActionExecutor.execute(this.recog,input,startIndex)}}getReachableTarget(trans,t){if(trans.matches(t,0,Lexer.MAX_CHAR_VALUE)){return trans.target}else{return null}}computeStartState(input,p){const initialContext=PredictionContext.EMPTY;const configs=new OrderedATNConfigSet;for(let i=0;i<p.transitions.length;i++){const target=p.transitions[i].target;const cfg=new LexerATNConfig({state:target,alt:i+1,context:initialContext},null);this.closure(input,cfg,configs,false,false,false)}return configs}closure(input,config,configs,currentAltReachedAcceptState,speculative,treatEofAsEpsilon){let cfg=null;if(LexerATNSimulator.debug){console.log("closure("+config.toString(this.recog,true)+")")}if(config.state instanceof RuleStopState){if(LexerATNSimulator.debug){if(this.recog!==null){console.log("closure at %s rule stop %s\n",this.recog.ruleNames[config.state.ruleIndex],config)}else{console.log("closure at rule stop %s\n",config)}}if(config.context===null||config.context.hasEmptyPath()){if(config.context===null||config.context.isEmpty()){configs.add(config);return true}else{configs.add(new LexerATNConfig({state:config.state,context:PredictionContext.EMPTY},config));currentAltReachedAcceptState=true}}if(config.context!==null&&!config.context.isEmpty()){for(let i=0;i<config.context.length;i++){if(config.context.getReturnState(i)!==PredictionContext.EMPTY_RETURN_STATE){const newContext=config.context.getParent(i);const returnState=this.atn.states[config.context.getReturnState(i)];cfg=new LexerATNConfig({state:returnState,context:newContext},config);currentAltReachedAcceptState=this.closure(input,cfg,configs,currentAltReachedAcceptState,speculative,treatEofAsEpsilon)}}}return currentAltReachedAcceptState}if(!config.state.epsilonOnlyTransitions){if(!currentAltReachedAcceptState||!config.passedThroughNonGreedyDecision){configs.add(config)}}for(let j=0;j<config.state.transitions.length;j++){const trans=config.state.transitions[j];cfg=this.getEpsilonTarget(input,config,trans,configs,speculative,treatEofAsEpsilon);if(cfg!==null){currentAltReachedAcceptState=this.closure(input,cfg,configs,currentAltReachedAcceptState,speculative,treatEofAsEpsilon)}}return currentAltReachedAcceptState}getEpsilonTarget(input,config,trans,configs,speculative,treatEofAsEpsilon){let cfg=null;if(trans.serializationType===Transition.RULE){const newContext=SingletonPredictionContext.create(config.context,trans.followState.stateNumber);cfg=new LexerATNConfig({state:trans.target,context:newContext},config)}else if(trans.serializationType===Transition.PRECEDENCE){throw"Precedence predicates are not supported in lexers."}else if(trans.serializationType===Transition.PREDICATE){if(LexerATNSimulator.debug){console.log("EVAL rule "+trans.ruleIndex+":"+trans.predIndex)}configs.hasSemanticContext=true;if(this.evaluatePredicate(input,trans.ruleIndex,trans.predIndex,speculative)){cfg=new LexerATNConfig({state:trans.target},config)}}else if(trans.serializationType===Transition.ACTION){if(config.context===null||config.context.hasEmptyPath()){const lexerActionExecutor=LexerActionExecutor.append(config.lexerActionExecutor,this.atn.lexerActions[trans.actionIndex]);cfg=new LexerATNConfig({state:trans.target,lexerActionExecutor:lexerActionExecutor},config)}else{cfg=new LexerATNConfig({state:trans.target},config)}}else if(trans.serializationType===Transition.EPSILON){cfg=new LexerATNConfig({state:trans.target},config)}else if(trans.serializationType===Transition.ATOM||trans.serializationType===Transition.RANGE||trans.serializationType===Transition.SET){if(treatEofAsEpsilon){if(trans.matches(Token.EOF,0,Lexer.MAX_CHAR_VALUE)){cfg=new LexerATNConfig({state:trans.target},config)}}}return cfg}evaluatePredicate(input,ruleIndex,predIndex,speculative){if(this.recog===null){return true}if(!speculative){return this.recog.sempred(null,ruleIndex,predIndex)}const savedcolumn=this.column;const savedLine=this.line;const index=input.index;const marker=input.mark();try{this.consume(input);return this.recog.sempred(null,ruleIndex,predIndex)}finally{this.column=savedcolumn;this.line=savedLine;input.seek(index);input.release(marker)}}captureSimState(settings,input,dfaState){settings.index=input.index;settings.line=this.line;settings.column=this.column;settings.dfaState=dfaState}addDFAEdge(from_,tk,to,cfgs){if(to===undefined){to=null}if(cfgs===undefined){cfgs=null}if(to===null&&cfgs!==null){const suppressEdge=cfgs.hasSemanticContext;cfgs.hasSemanticContext=false;to=this.addDFAState(cfgs);if(suppressEdge){return to}}if(tk<LexerATNSimulator.MIN_DFA_EDGE||tk>LexerATNSimulator.MAX_DFA_EDGE){return to}if(LexerATNSimulator.debug){console.log("EDGE "+from_+" -> "+to+" upon "+tk)}if(from_.edges===null){from_.edges=[]}from_.edges[tk-LexerATNSimulator.MIN_DFA_EDGE]=to;return to}addDFAState(configs){const proposed=new DFAState(null,configs);let firstConfigWithRuleStopState=null;for(let i=0;i<configs.items.length;i++){const cfg=configs.items[i];if(cfg.state instanceof RuleStopState){firstConfigWithRuleStopState=cfg;break}}if(firstConfigWithRuleStopState!==null){proposed.isAcceptState=true;proposed.lexerActionExecutor=firstConfigWithRuleStopState.lexerActionExecutor;proposed.prediction=this.atn.ruleToTokenType[firstConfigWithRuleStopState.state.ruleIndex]}const dfa=this.decisionToDFA[this.mode];const existing=dfa.states.get(proposed);if(existing!==null){return existing}const newState=proposed;newState.stateNumber=dfa.states.length;configs.setReadonly(true);newState.configs=configs;dfa.states.add(newState);return newState}getDFA(mode){return this.decisionToDFA[mode]}getText(input){return input.getText(this.startIndex,input.index-1)}consume(input){const curChar=input.LA(1);if(curChar==="\n".charCodeAt(0)){this.line+=1;this.column=0}else{this.column+=1}input.consume()}getTokenName(tt){if(tt===-1){return"EOF"}else{return"'"+String.fromCharCode(tt)+"'"}}}LexerATNSimulator.debug=false;LexerATNSimulator.dfa_debug=false;LexerATNSimulator.MIN_DFA_EDGE=0;LexerATNSimulator.MAX_DFA_EDGE=127;LexerATNSimulator.match_calls=0;module.exports=LexerATNSimulator},{"./../Lexer":7,"./../PredictionContext":10,"./../Token":13,"./../dfa/DFAState":33,"./../error/Errors":38,"./ATN":15,"./ATNConfig":16,"./ATNConfigSet":17,"./ATNSimulator":20,"./ATNState":21,"./LexerActionExecutor":25,"./Transition":29}],24:[function(require,module,exports){const LexerActionType={CHANNEL:0,CUSTOM:1,MODE:2,MORE:3,POP_MODE:4,PUSH_MODE:5,SKIP:6,TYPE:7};class LexerAction{constructor(action){this.actionType=action;this.isPositionDependent=false}hashCode(){const hash=new Hash;this.updateHashCode(hash);return hash.finish()}updateHashCode(hash){hash.update(this.actionType)}equals(other){return this===other}}class LexerSkipAction extends LexerAction{constructor(){super(LexerActionType.SKIP)}execute(lexer){lexer.skip()}toString(){return"skip"}}LexerSkipAction.INSTANCE=new LexerSkipAction;class LexerTypeAction extends LexerAction{constructor(type){super(LexerActionType.TYPE);this.type=type}execute(lexer){lexer.type=this.type}updateHashCode(hash){hash.update(this.actionType,this.type)}equals(other){if(this===other){return true}else if(!(other instanceof LexerTypeAction)){return false}else{return this.type===other.type}}toString(){return"type("+this.type+")"}}class LexerPushModeAction extends LexerAction{constructor(mode){super(LexerActionType.PUSH_MODE);this.mode=mode}execute(lexer){lexer.pushMode(this.mode)}updateHashCode(hash){hash.update(this.actionType,this.mode)}equals(other){if(this===other){return true}else if(!(other instanceof LexerPushModeAction)){return false}else{return this.mode===other.mode}}toString(){return"pushMode("+this.mode+")"}}class LexerPopModeAction extends LexerAction{constructor(){super(LexerActionType.POP_MODE)}execute(lexer){lexer.popMode()}toString(){return"popMode"}}LexerPopModeAction.INSTANCE=new LexerPopModeAction;class LexerMoreAction extends LexerAction{constructor(){super(LexerActionType.MORE)}execute(lexer){lexer.more()}toString(){return"more"}}LexerMoreAction.INSTANCE=new LexerMoreAction;class LexerModeAction extends LexerAction{constructor(mode){super(LexerActionType.MODE);this.mode=mode}execute(lexer){lexer.mode(this.mode)}updateHashCode(hash){hash.update(this.actionType,this.mode)}equals(other){if(this===other){return true}else if(!(other instanceof LexerModeAction)){return false}else{return this.mode===other.mode}}toString(){return"mode("+this.mode+")"}}class LexerCustomAction extends LexerAction{constructor(ruleIndex,actionIndex){super(LexerActionType.CUSTOM);this.ruleIndex=ruleIndex;this.actionIndex=actionIndex;this.isPositionDependent=true}execute(lexer){lexer.action(null,this.ruleIndex,this.actionIndex)}updateHashCode(hash){hash.update(this.actionType,this.ruleIndex,this.actionIndex)}equals(other){if(this===other){return true}else if(!(other instanceof LexerCustomAction)){return false}else{return this.ruleIndex===other.ruleIndex&&this.actionIndex===other.actionIndex}}}class LexerChannelAction extends LexerAction{constructor(channel){super(LexerActionType.CHANNEL);this.channel=channel}execute(lexer){lexer._channel=this.channel}updateHashCode(hash){hash.update(this.actionType,this.channel)}equals(other){if(this===other){return true}else if(!(other instanceof LexerChannelAction)){return false}else{return this.channel===other.channel}}toString(){return"channel("+this.channel+")"}}class LexerIndexedCustomAction extends LexerAction{constructor(offset,action){super(action.actionType);this.offset=offset;this.action=action;this.isPositionDependent=true}execute(lexer){this.action.execute(lexer)}updateHashCode(hash){hash.update(this.actionType,this.offset,this.action)}equals(other){if(this===other){return true}else if(!(other instanceof LexerIndexedCustomAction)){return false}else{return this.offset===other.offset&&this.action===other.action}}}module.exports={LexerActionType:LexerActionType,LexerSkipAction:LexerSkipAction,LexerChannelAction:LexerChannelAction,LexerCustomAction:LexerCustomAction,LexerIndexedCustomAction:LexerIndexedCustomAction,LexerMoreAction:LexerMoreAction,LexerTypeAction:LexerTypeAction,LexerPushModeAction:LexerPushModeAction,LexerPopModeAction:LexerPopModeAction,LexerModeAction:LexerModeAction}},{}],25:[function(require,module,exports){const{hashStuff}=require("../Utils");const{LexerIndexedCustomAction}=require("./LexerAction");class LexerActionExecutor{constructor(lexerActions){this.lexerActions=lexerActions===null?[]:lexerActions;this.cachedHashCode=hashStuff(lexerActions);return this}fixOffsetBeforeMatch(offset){let updatedLexerActions=null;for(let i=0;i<this.lexerActions.length;i++){if(this.lexerActions[i].isPositionDependent&&!(this.lexerActions[i]instanceof LexerIndexedCustomAction)){if(updatedLexerActions===null){updatedLexerActions=this.lexerActions.concat([])}updatedLexerActions[i]=new LexerIndexedCustomAction(offset,this.lexerActions[i])}}if(updatedLexerActions===null){return this}else{return new LexerActionExecutor(updatedLexerActions)}}execute(lexer,input,startIndex){let requiresSeek=false;const stopIndex=input.index;try{for(let i=0;i<this.lexerActions.length;i++){let lexerAction=this.lexerActions[i];if(lexerAction instanceof LexerIndexedCustomAction){const offset=lexerAction.offset;input.seek(startIndex+offset);lexerAction=lexerAction.action;requiresSeek=startIndex+offset!==stopIndex}else if(lexerAction.isPositionDependent){input.seek(stopIndex);requiresSeek=false}lexerAction.execute(lexer)}}finally{if(requiresSeek){input.seek(stopIndex)}}}hashCode(){return this.cachedHashCode}updateHashCode(hash){hash.update(this.cachedHashCode)}equals(other){if(this===other){return true}else if(!(other instanceof LexerActionExecutor)){return false}else if(this.cachedHashCode!=other.cachedHashCode){return false}else if(this.lexerActions.length!=other.lexerActions.length){return false}else{const numActions=this.lexerActions.length;for(let idx=0;idx<numActions;++idx){if(!this.lexerActions[idx].equals(other.lexerActions[idx])){return false}}return true}}static append(lexerActionExecutor,lexerAction){if(lexerActionExecutor===null){return new LexerActionExecutor([lexerAction])}const lexerActions=lexerActionExecutor.lexerActions.concat([lexerAction]);return new LexerActionExecutor(lexerActions)}}module.exports=LexerActionExecutor},{"../Utils":14,"./LexerAction":24}],26:[function(require,module,exports){const Utils=require("./../Utils");const{Set,BitSet,DoubleDict}=Utils;const ATN=require("./ATN");const{ATNState,RuleStopState}=require("./ATNState");const{ATNConfig}=require("./ATNConfig");const{ATNConfigSet}=require("./ATNConfigSet");const{Token}=require("./../Token");const{DFAState,PredPrediction}=require("./../dfa/DFAState");const ATNSimulator=require("./ATNSimulator");const PredictionMode=require("./PredictionMode");const RuleContext=require("./../RuleContext");const{SemanticContext}=require("./SemanticContext");const{PredictionContext}=require("./../PredictionContext");const{Interval}=require("./../IntervalSet");const{Transition,SetTransition,NotSetTransition,RuleTransition,ActionTransition}=require("./Transition");const{NoViableAltException}=require("./../error/Errors");const{SingletonPredictionContext,predictionContextFromRuleContext}=require("./../PredictionContext");class ParserATNSimulator extends ATNSimulator{constructor(parser,atn,decisionToDFA,sharedContextCache){super(atn,sharedContextCache);this.parser=parser;this.decisionToDFA=decisionToDFA;this.predictionMode=PredictionMode.LL;this._input=null;this._startIndex=0;this._outerContext=null;this._dfa=null;this.mergeCache=null;this.debug=false;this.debug_closure=false;this.debug_add=false;this.debug_list_atn_decisions=false;this.dfa_debug=false;this.retry_debug=false}reset(){}adaptivePredict(input,decision,outerContext){if(this.debug||this.debug_list_atn_decisions){console.log("adaptivePredict decision "+decision+" exec LA(1)=="+this.getLookaheadName(input)+" line "+input.LT(1).line+":"+input.LT(1).column)}this._input=input;this._startIndex=input.index;this._outerContext=outerContext;const dfa=this.decisionToDFA[decision];this._dfa=dfa;const m=input.mark();const index=input.index;try{let s0;if(dfa.precedenceDfa){s0=dfa.getPrecedenceStartState(this.parser.getPrecedence())}else{s0=dfa.s0}if(s0===null){if(outerContext===null){outerContext=RuleContext.EMPTY}if(this.debug||this.debug_list_atn_decisions){console.log("predictATN decision "+dfa.decision+" exec LA(1)=="+this.getLookaheadName(input)+", outerContext="+outerContext.toString(this.parser.ruleNames))}const fullCtx=false;let s0_closure=this.computeStartState(dfa.atnStartState,RuleContext.EMPTY,fullCtx);if(dfa.precedenceDfa){dfa.s0.configs=s0_closure;s0_closure=this.applyPrecedenceFilter(s0_closure);s0=this.addDFAState(dfa,new DFAState(null,s0_closure));dfa.setPrecedenceStartState(this.parser.getPrecedence(),s0)}else{s0=this.addDFAState(dfa,new DFAState(null,s0_closure));dfa.s0=s0}}const alt=this.execATN(dfa,s0,input,index,outerContext);if(this.debug){console.log("DFA after predictATN: "+dfa.toString(this.parser.literalNames,this.parser.symbolicNames))}return alt}finally{this._dfa=null;this.mergeCache=null;input.seek(index);input.release(m)}}execATN(dfa,s0,input,startIndex,outerContext){if(this.debug||this.debug_list_atn_decisions){console.log("execATN decision "+dfa.decision+" exec LA(1)=="+this.getLookaheadName(input)+" line "+input.LT(1).line+":"+input.LT(1).column)}let alt;let previousD=s0;if(this.debug){console.log("s0 = "+s0)}let t=input.LA(1);while(true){let D=this.getExistingTargetState(previousD,t);if(D===null){D=this.computeTargetState(dfa,previousD,t)}if(D===ATNSimulator.ERROR){const e=this.noViableAlt(input,outerContext,previousD.configs,startIndex);input.seek(startIndex);alt=this.getSynValidOrSemInvalidAltThatFinishedDecisionEntryRule(previousD.configs,outerContext);if(alt!==ATN.INVALID_ALT_NUMBER){return alt}else{throw e}}if(D.requiresFullContext&&this.predictionMode!==PredictionMode.SLL){let conflictingAlts=null;if(D.predicates!==null){if(this.debug){console.log("DFA state has preds in DFA sim LL failover")}const conflictIndex=input.index;if(conflictIndex!==startIndex){input.seek(startIndex)}conflictingAlts=this.evalSemanticContext(D.predicates,outerContext,true);if(conflictingAlts.length===1){if(this.debug){console.log("Full LL avoided")}return conflictingAlts.minValue()}if(conflictIndex!==startIndex){input.seek(conflictIndex)}}if(this.dfa_debug){console.log("ctx sensitive state "+outerContext+" in "+D)}const fullCtx=true;const s0_closure=this.computeStartState(dfa.atnStartState,outerContext,fullCtx);this.reportAttemptingFullContext(dfa,conflictingAlts,D.configs,startIndex,input.index);alt=this.execATNWithFullContext(dfa,D,s0_closure,input,startIndex,outerContext);return alt}if(D.isAcceptState){if(D.predicates===null){return D.prediction}const stopIndex=input.index;input.seek(startIndex);const alts=this.evalSemanticContext(D.predicates,outerContext,true);if(alts.length===0){throw this.noViableAlt(input,outerContext,D.configs,startIndex)}else if(alts.length===1){return alts.minValue()}else{this.reportAmbiguity(dfa,D,startIndex,stopIndex,false,alts,D.configs);return alts.minValue()}}previousD=D;if(t!==Token.EOF){input.consume();t=input.LA(1)}}}getExistingTargetState(previousD,t){const edges=previousD.edges;if(edges===null){return null}else{return edges[t+1]||null}}computeTargetState(dfa,previousD,t){const reach=this.computeReachSet(previousD.configs,t,false);if(reach===null){this.addDFAEdge(dfa,previousD,t,ATNSimulator.ERROR);return ATNSimulator.ERROR}let D=new DFAState(null,reach);const predictedAlt=this.getUniqueAlt(reach);if(this.debug){const altSubSets=PredictionMode.getConflictingAltSubsets(reach);console.log("SLL altSubSets="+Utils.arrayToString(altSubSets)+", configs="+reach+", predict="+predictedAlt+", allSubsetsConflict="+PredictionMode.allSubsetsConflict(altSubSets)+", conflictingAlts="+this.getConflictingAlts(reach))}if(predictedAlt!==ATN.INVALID_ALT_NUMBER){D.isAcceptState=true;D.configs.uniqueAlt=predictedAlt;D.prediction=predictedAlt}else if(PredictionMode.hasSLLConflictTerminatingPrediction(this.predictionMode,reach)){D.configs.conflictingAlts=this.getConflictingAlts(reach);D.requiresFullContext=true;D.isAcceptState=true;D.prediction=D.configs.conflictingAlts.minValue()}if(D.isAcceptState&&D.configs.hasSemanticContext){this.predicateDFAState(D,this.atn.getDecisionState(dfa.decision));if(D.predicates!==null){D.prediction=ATN.INVALID_ALT_NUMBER}}D=this.addDFAEdge(dfa,previousD,t,D);return D}predicateDFAState(dfaState,decisionState){const nalts=decisionState.transitions.length;const altsToCollectPredsFrom=this.getConflictingAltsOrUniqueAlt(dfaState.configs);const altToPred=this.getPredsForAmbigAlts(altsToCollectPredsFrom,dfaState.configs,nalts);if(altToPred!==null){dfaState.predicates=this.getPredicatePredictions(altsToCollectPredsFrom,altToPred);dfaState.prediction=ATN.INVALID_ALT_NUMBER}else{dfaState.prediction=altsToCollectPredsFrom.minValue()}}execATNWithFullContext(dfa,D,s0,input,startIndex,outerContext){if(this.debug||this.debug_list_atn_decisions){console.log("execATNWithFullContext "+s0)}const fullCtx=true;let foundExactAmbig=false;let reach;let previous=s0;input.seek(startIndex);let t=input.LA(1);let predictedAlt=-1;while(true){reach=this.computeReachSet(previous,t,fullCtx);if(reach===null){const e=this.noViableAlt(input,outerContext,previous,startIndex);input.seek(startIndex);const alt=this.getSynValidOrSemInvalidAltThatFinishedDecisionEntryRule(previous,outerContext);if(alt!==ATN.INVALID_ALT_NUMBER){return alt}else{throw e}}const altSubSets=PredictionMode.getConflictingAltSubsets(reach);if(this.debug){console.log("LL altSubSets="+altSubSets+", predict="+PredictionMode.getUniqueAlt(altSubSets)+", resolvesToJustOneViableAlt="+PredictionMode.resolvesToJustOneViableAlt(altSubSets))}reach.uniqueAlt=this.getUniqueAlt(reach);if(reach.uniqueAlt!==ATN.INVALID_ALT_NUMBER){predictedAlt=reach.uniqueAlt;break}else if(this.predictionMode!==PredictionMode.LL_EXACT_AMBIG_DETECTION){predictedAlt=PredictionMode.resolvesToJustOneViableAlt(altSubSets);if(predictedAlt!==ATN.INVALID_ALT_NUMBER){break}}else{if(PredictionMode.allSubsetsConflict(altSubSets)&&PredictionMode.allSubsetsEqual(altSubSets)){foundExactAmbig=true;predictedAlt=PredictionMode.getSingleViableAlt(altSubSets);break}}previous=reach;if(t!==Token.EOF){input.consume();t=input.LA(1)}}if(reach.uniqueAlt!==ATN.INVALID_ALT_NUMBER){this.reportContextSensitivity(dfa,predictedAlt,reach,startIndex,input.index);return predictedAlt}this.reportAmbiguity(dfa,D,startIndex,input.index,foundExactAmbig,null,reach);return predictedAlt}computeReachSet(closure,t,fullCtx){if(this.debug){console.log("in computeReachSet, starting closure: "+closure)}if(this.mergeCache===null){this.mergeCache=new DoubleDict}const intermediate=new ATNConfigSet(fullCtx);let skippedStopStates=null;for(let i=0;i<closure.items.length;i++){const c=closure.items[i];if(this.debug){console.log("testing "+this.getTokenName(t)+" at "+c)}if(c.state instanceof RuleStopState){if(fullCtx||t===Token.EOF){if(skippedStopStates===null){skippedStopStates=[]}skippedStopStates.push(c);if(this.debug_add){console.log("added "+c+" to skippedStopStates")}}continue}for(let j=0;j<c.state.transitions.length;j++){const trans=c.state.transitions[j];const target=this.getReachableTarget(trans,t);if(target!==null){const cfg=new ATNConfig({state:target},c);intermediate.add(cfg,this.mergeCache);if(this.debug_add){console.log("added "+cfg+" to intermediate")}}}}let reach=null;if(skippedStopStates===null&&t!==Token.EOF){if(intermediate.items.length===1){reach=intermediate}else if(this.getUniqueAlt(intermediate)!==ATN.INVALID_ALT_NUMBER){reach=intermediate}}if(reach===null){reach=new ATNConfigSet(fullCtx);const closureBusy=new Set;const treatEofAsEpsilon=t===Token.EOF;for(let k=0;k<intermediate.items.length;k++){this.closure(intermediate.items[k],reach,closureBusy,false,fullCtx,treatEofAsEpsilon)}}if(t===Token.EOF){reach=this.removeAllConfigsNotInRuleStopState(reach,reach===intermediate)}if(skippedStopStates!==null&&(!fullCtx||!PredictionMode.hasConfigInRuleStopState(reach))){for(let l=0;l<skippedStopStates.length;l++){reach.add(skippedStopStates[l],this.mergeCache)}}if(reach.items.length===0){return null}else{return reach}}removeAllConfigsNotInRuleStopState(configs,lookToEndOfRule){if(PredictionMode.allConfigsInRuleStopStates(configs)){return configs}const result=new ATNConfigSet(configs.fullCtx);for(let i=0;i<configs.items.length;i++){const config=configs.items[i];if(config.state instanceof RuleStopState){result.add(config,this.mergeCache);continue}if(lookToEndOfRule&&config.state.epsilonOnlyTransitions){const nextTokens=this.atn.nextTokens(config.state);if(nextTokens.contains(Token.EPSILON)){const endOfRuleState=this.atn.ruleToStopState[config.state.ruleIndex];result.add(new ATNConfig({state:endOfRuleState},config),this.mergeCache)}}}return result}computeStartState(p,ctx,fullCtx){const initialContext=predictionContextFromRuleContext(this.atn,ctx);const configs=new ATNConfigSet(fullCtx);for(let i=0;i<p.transitions.length;i++){const target=p.transitions[i].target;const c=new ATNConfig({state:target,alt:i+1,context:initialContext},null);const closureBusy=new Set;this.closure(c,configs,closureBusy,true,fullCtx,false)}return configs}applyPrecedenceFilter(configs){let config;const statesFromAlt1=[];const configSet=new ATNConfigSet(configs.fullCtx);for(let i=0;i<configs.items.length;i++){config=configs.items[i];if(config.alt!==1){continue}const updatedContext=config.semanticContext.evalPrecedence(this.parser,this._outerContext);if(updatedContext===null){continue}statesFromAlt1[config.state.stateNumber]=config.context;if(updatedContext!==config.semanticContext){configSet.add(new ATNConfig({semanticContext:updatedContext},config),this.mergeCache)}else{configSet.add(config,this.mergeCache)}}for(let i=0;i<configs.items.length;i++){config=configs.items[i];if(config.alt===1){continue}if(!config.precedenceFilterSuppressed){const context=statesFromAlt1[config.state.stateNumber]||null;if(context!==null&&context.equals(config.context)){continue}}configSet.add(config,this.mergeCache)}return configSet}getReachableTarget(trans,ttype){if(trans.matches(ttype,0,this.atn.maxTokenType)){return trans.target}else{return null}}getPredsForAmbigAlts(ambigAlts,configs,nalts){let altToPred=[];for(let i=0;i<configs.items.length;i++){const c=configs.items[i];if(ambigAlts.contains(c.alt)){altToPred[c.alt]=SemanticContext.orContext(altToPred[c.alt]||null,c.semanticContext)}}let nPredAlts=0;for(let i=1;i<nalts+1;i++){const pred=altToPred[i]||null;if(pred===null){altToPred[i]=SemanticContext.NONE}else if(pred!==SemanticContext.NONE){nPredAlts+=1}}if(nPredAlts===0){altToPred=null}if(this.debug){console.log("getPredsForAmbigAlts result "+Utils.arrayToString(altToPred))}return altToPred}getPredicatePredictions(ambigAlts,altToPred){const pairs=[];let containsPredicate=false;for(let i=1;i<altToPred.length;i++){const pred=altToPred[i];if(ambigAlts!==null&&ambigAlts.contains(i)){pairs.push(new PredPrediction(pred,i))}if(pred!==SemanticContext.NONE){containsPredicate=true}}if(!containsPredicate){return null}return pairs}getSynValidOrSemInvalidAltThatFinishedDecisionEntryRule(configs,outerContext){const cfgs=this.splitAccordingToSemanticValidity(configs,outerContext);const semValidConfigs=cfgs[0];const semInvalidConfigs=cfgs[1];let alt=this.getAltThatFinishedDecisionEntryRule(semValidConfigs);if(alt!==ATN.INVALID_ALT_NUMBER){return alt}if(semInvalidConfigs.items.length>0){alt=this.getAltThatFinishedDecisionEntryRule(semInvalidConfigs);if(alt!==ATN.INVALID_ALT_NUMBER){return alt}}return ATN.INVALID_ALT_NUMBER}getAltThatFinishedDecisionEntryRule(configs){const alts=[];for(let i=0;i<configs.items.length;i++){const c=configs.items[i];if(c.reachesIntoOuterContext>0||c.state instanceof RuleStopState&&c.context.hasEmptyPath()){if(alts.indexOf(c.alt)<0){alts.push(c.alt)}}}if(alts.length===0){return ATN.INVALID_ALT_NUMBER}else{return Math.min.apply(null,alts)}}splitAccordingToSemanticValidity(configs,outerContext){const succeeded=new ATNConfigSet(configs.fullCtx);const failed=new ATNConfigSet(configs.fullCtx);for(let i=0;i<configs.items.length;i++){const c=configs.items[i];if(c.semanticContext!==SemanticContext.NONE){const predicateEvaluationResult=c.semanticContext.evaluate(this.parser,outerContext);if(predicateEvaluationResult){succeeded.add(c)}else{failed.add(c)}}else{succeeded.add(c)}}return[succeeded,failed]}evalSemanticContext(predPredictions,outerContext,complete){const predictions=new BitSet;for(let i=0;i<predPredictions.length;i++){const pair=predPredictions[i];if(pair.pred===SemanticContext.NONE){predictions.add(pair.alt);if(!complete){break}continue}const predicateEvaluationResult=pair.pred.evaluate(this.parser,outerContext);if(this.debug||this.dfa_debug){console.log("eval pred "+pair+"="+predicateEvaluationResult)}if(predicateEvaluationResult){if(this.debug||this.dfa_debug){console.log("PREDICT "+pair.alt)}predictions.add(pair.alt);if(!complete){break}}}return predictions}closure(config,configs,closureBusy,collectPredicates,fullCtx,treatEofAsEpsilon){const initialDepth=0;this.closureCheckingStopState(config,configs,closureBusy,collectPredicates,fullCtx,initialDepth,treatEofAsEpsilon)}closureCheckingStopState(config,configs,closureBusy,collectPredicates,fullCtx,depth,treatEofAsEpsilon){if(this.debug||this.debug_closure){console.log("closure("+config.toString(this.parser,true)+")");if(config.reachesIntoOuterContext>50){throw"problem"}}if(config.state instanceof RuleStopState){if(!config.context.isEmpty()){for(let i=0;i<config.context.length;i++){if(config.context.getReturnState(i)===PredictionContext.EMPTY_RETURN_STATE){if(fullCtx){configs.add(new ATNConfig({state:config.state,context:PredictionContext.EMPTY},config),this.mergeCache);continue}else{if(this.debug){console.log("FALLING off rule "+this.getRuleName(config.state.ruleIndex))}this.closure_(config,configs,closureBusy,collectPredicates,fullCtx,depth,treatEofAsEpsilon)}continue}const returnState=this.atn.states[config.context.getReturnState(i)];const newContext=config.context.getParent(i);const parms={state:returnState,alt:config.alt,context:newContext,semanticContext:config.semanticContext};const c=new ATNConfig(parms,null);c.reachesIntoOuterContext=config.reachesIntoOuterContext;this.closureCheckingStopState(c,configs,closureBusy,collectPredicates,fullCtx,depth-1,treatEofAsEpsilon)}return}else if(fullCtx){configs.add(config,this.mergeCache);return}else{if(this.debug){console.log("FALLING off rule "+this.getRuleName(config.state.ruleIndex))}}}this.closure_(config,configs,closureBusy,collectPredicates,fullCtx,depth,treatEofAsEpsilon)}closure_(config,configs,closureBusy,collectPredicates,fullCtx,depth,treatEofAsEpsilon){const p=config.state;if(!p.epsilonOnlyTransitions){configs.add(config,this.mergeCache)}for(let i=0;i<p.transitions.length;i++){if(i===0&&this.canDropLoopEntryEdgeInLeftRecursiveRule(config))continue;const t=p.transitions[i];const continueCollecting=collectPredicates&&!(t instanceof ActionTransition);const c=this.getEpsilonTarget(config,t,continueCollecting,depth===0,fullCtx,treatEofAsEpsilon);if(c!==null){let newDepth=depth;if(config.state instanceof RuleStopState){if(this._dfa!==null&&this._dfa.precedenceDfa){if(t.outermostPrecedenceReturn===this._dfa.atnStartState.ruleIndex){c.precedenceFilterSuppressed=true}}c.reachesIntoOuterContext+=1;if(closureBusy.add(c)!==c){continue}configs.dipsIntoOuterContext=true;newDepth-=1;if(this.debug){console.log("dips into outer ctx: "+c)}}else{if(!t.isEpsilon&&closureBusy.add(c)!==c){continue}if(t instanceof RuleTransition){if(newDepth>=0){newDepth+=1}}}this.closureCheckingStopState(c,configs,closureBusy,continueCollecting,fullCtx,newDepth,treatEofAsEpsilon)}}}canDropLoopEntryEdgeInLeftRecursiveRule(config){const p=config.state;if(p.stateType!==ATNState.STAR_LOOP_ENTRY)return false;if(p.stateType!==ATNState.STAR_LOOP_ENTRY||!p.isPrecedenceDecision||config.context.isEmpty()||config.context.hasEmptyPath())return false;const numCtxs=config.context.length;for(let i=0;i<numCtxs;i++){const returnState=this.atn.states[config.context.getReturnState(i)];if(returnState.ruleIndex!==p.ruleIndex)return false}const decisionStartState=p.transitions[0].target;const blockEndStateNum=decisionStartState.endState.stateNumber;const blockEndState=this.atn.states[blockEndStateNum];for(let i=0;i<numCtxs;i++){const returnStateNumber=config.context.getReturnState(i);const returnState=this.atn.states[returnStateNumber];if(returnState.transitions.length!==1||!returnState.transitions[0].isEpsilon)return false;const returnStateTarget=returnState.transitions[0].target;if(returnState.stateType===ATNState.BLOCK_END&&returnStateTarget===p)continue;if(returnState===blockEndState)continue;if(returnStateTarget===blockEndState)continue;if(returnStateTarget.stateType===ATNState.BLOCK_END&&returnStateTarget.transitions.length===1&&returnStateTarget.transitions[0].isEpsilon&&returnStateTarget.transitions[0].target===p)continue;return false}return true}getRuleName(index){if(this.parser!==null&&index>=0){return this.parser.ruleNames[index]}else{return"<rule "+index+">"}}getEpsilonTarget(config,t,collectPredicates,inContext,fullCtx,treatEofAsEpsilon){switch(t.serializationType){case Transition.RULE:return this.ruleTransition(config,t);case Transition.PRECEDENCE:return this.precedenceTransition(config,t,collectPredicates,inContext,fullCtx);case Transition.PREDICATE:return this.predTransition(config,t,collectPredicates,inContext,fullCtx);case Transition.ACTION:return this.actionTransition(config,t);case Transition.EPSILON:return new ATNConfig({state:t.target},config);case Transition.ATOM:case Transition.RANGE:case Transition.SET:if(treatEofAsEpsilon){if(t.matches(Token.EOF,0,1)){return new ATNConfig({state:t.target},config)}}return null;default:return null}}actionTransition(config,t){if(this.debug){const index=t.actionIndex===-1?65535:t.actionIndex;console.log("ACTION edge "+t.ruleIndex+":"+index)}return new ATNConfig({state:t.target},config)}precedenceTransition(config,pt,collectPredicates,inContext,fullCtx){if(this.debug){console.log("PRED (collectPredicates="+collectPredicates+") "+pt.precedence+">=_p, ctx dependent=true");if(this.parser!==null){console.log("context surrounding pred is "+Utils.arrayToString(this.parser.getRuleInvocationStack()))}}let c=null;if(collectPredicates&&inContext){if(fullCtx){const currentPosition=this._input.index;this._input.seek(this._startIndex);const predSucceeds=pt.getPredicate().evaluate(this.parser,this._outerContext);this._input.seek(currentPosition);if(predSucceeds){c=new ATNConfig({state:pt.target},config)}}else{const newSemCtx=SemanticContext.andContext(config.semanticContext,pt.getPredicate());c=new ATNConfig({state:pt.target,semanticContext:newSemCtx},config)}}else{c=new ATNConfig({state:pt.target},config)}if(this.debug){console.log("config from pred transition="+c)}return c}predTransition(config,pt,collectPredicates,inContext,fullCtx){if(this.debug){console.log("PRED (collectPredicates="+collectPredicates+") "+pt.ruleIndex+":"+pt.predIndex+", ctx dependent="+pt.isCtxDependent);if(this.parser!==null){console.log("context surrounding pred is "+Utils.arrayToString(this.parser.getRuleInvocationStack()))}}let c=null;if(collectPredicates&&(pt.isCtxDependent&&inContext||!pt.isCtxDependent)){if(fullCtx){const currentPosition=this._input.index;this._input.seek(this._startIndex);const predSucceeds=pt.getPredicate().evaluate(this.parser,this._outerContext);this._input.seek(currentPosition);if(predSucceeds){c=new ATNConfig({state:pt.target},config)}}else{const newSemCtx=SemanticContext.andContext(config.semanticContext,pt.getPredicate());c=new ATNConfig({state:pt.target,semanticContext:newSemCtx},config)}}else{c=new ATNConfig({state:pt.target},config)}if(this.debug){console.log("config from pred transition="+c)}return c}ruleTransition(config,t){if(this.debug){console.log("CALL rule "+this.getRuleName(t.target.ruleIndex)+", ctx="+config.context)}const returnState=t.followState;const newContext=SingletonPredictionContext.create(config.context,returnState.stateNumber);return new ATNConfig({state:t.target,context:newContext},config)}getConflictingAlts(configs){const altsets=PredictionMode.getConflictingAltSubsets(configs);return PredictionMode.getAlts(altsets)}getConflictingAltsOrUniqueAlt(configs){let conflictingAlts=null;if(configs.uniqueAlt!==ATN.INVALID_ALT_NUMBER){conflictingAlts=new BitSet;conflictingAlts.add(configs.uniqueAlt)}else{conflictingAlts=configs.conflictingAlts}return conflictingAlts}getTokenName(t){if(t===Token.EOF){return"EOF"}if(this.parser!==null&&this.parser.literalNames!==null){if(t>=this.parser.literalNames.length&&t>=this.parser.symbolicNames.length){console.log(""+t+" ttype out of range: "+this.parser.literalNames);console.log(""+this.parser.getInputStream().getTokens())}else{const name=this.parser.literalNames[t]||this.parser.symbolicNames[t];return name+"<"+t+">"}}return""+t}getLookaheadName(input){return this.getTokenName(input.LA(1))}dumpDeadEndConfigs(nvae){console.log("dead end configs: ");const decs=nvae.getDeadEndConfigs();for(let i=0;i<decs.length;i++){const c=decs[i];let trans="no edges";if(c.state.transitions.length>0){const t=c.state.transitions[0];if(t instanceof AtomTransition){trans="Atom "+this.getTokenName(t.label)}else if(t instanceof SetTransition){const neg=t instanceof NotSetTransition;trans=(neg?"~":"")+"Set "+t.set}}console.error(c.toString(this.parser,true)+":"+trans)}}noViableAlt(input,outerContext,configs,startIndex){return new NoViableAltException(this.parser,input,input.get(startIndex),input.LT(1),configs,outerContext)}getUniqueAlt(configs){let alt=ATN.INVALID_ALT_NUMBER;for(let i=0;i<configs.items.length;i++){const c=configs.items[i];if(alt===ATN.INVALID_ALT_NUMBER){alt=c.alt}else if(c.alt!==alt){return ATN.INVALID_ALT_NUMBER}}return alt}addDFAEdge(dfa,from_,t,to){if(this.debug){console.log("EDGE "+from_+" -> "+to+" upon "+this.getTokenName(t))}if(to===null){return null}to=this.addDFAState(dfa,to);if(from_===null||t<-1||t>this.atn.maxTokenType){return to}if(from_.edges===null){from_.edges=[]}from_.edges[t+1]=to;if(this.debug){const literalNames=this.parser===null?null:this.parser.literalNames;const symbolicNames=this.parser===null?null:this.parser.symbolicNames;console.log("DFA=\n"+dfa.toString(literalNames,symbolicNames))}return to}addDFAState(dfa,D){if(D===ATNSimulator.ERROR){return D}const existing=dfa.states.get(D);if(existing!==null){return existing}D.stateNumber=dfa.states.length;if(!D.configs.readOnly){D.configs.optimizeConfigs(this);D.configs.setReadonly(true)}dfa.states.add(D);if(this.debug){console.log("adding new DFA state: "+D)}return D}reportAttemptingFullContext(dfa,conflictingAlts,configs,startIndex,stopIndex){if(this.debug||this.retry_debug){const interval=new Interval(startIndex,stopIndex+1);console.log("reportAttemptingFullContext decision="+dfa.decision+":"+configs+", input="+this.parser.getTokenStream().getText(interval))}if(this.parser!==null){this.parser.getErrorListenerDispatch().reportAttemptingFullContext(this.parser,dfa,startIndex,stopIndex,conflictingAlts,configs)}}reportContextSensitivity(dfa,prediction,configs,startIndex,stopIndex){if(this.debug||this.retry_debug){const interval=new Interval(startIndex,stopIndex+1);console.log("reportContextSensitivity decision="+dfa.decision+":"+configs+", input="+this.parser.getTokenStream().getText(interval))}if(this.parser!==null){this.parser.getErrorListenerDispatch().reportContextSensitivity(this.parser,dfa,startIndex,stopIndex,prediction,configs)}}reportAmbiguity(dfa,D,startIndex,stopIndex,exact,ambigAlts,configs){if(this.debug||this.retry_debug){const interval=new Interval(startIndex,stopIndex+1);console.log("reportAmbiguity "+ambigAlts+":"+configs+", input="+this.parser.getTokenStream().getText(interval))}if(this.parser!==null){this.parser.getErrorListenerDispatch().reportAmbiguity(this.parser,dfa,startIndex,stopIndex,exact,ambigAlts,configs)}}}module.exports=ParserATNSimulator},{"./../IntervalSet":5,"./../PredictionContext":10,"./../RuleContext":12,"./../Token":13,"./../Utils":14,"./../dfa/DFAState":33,"./../error/Errors":38,"./ATN":15,"./ATNConfig":16,"./ATNConfigSet":17,"./ATNSimulator":20,"./ATNState":21,"./PredictionMode":27,"./SemanticContext":28,"./Transition":29}],27:[function(require,module,exports){const{Map,BitSet,AltDict,hashStuff}=require("./../Utils");const ATN=require("./ATN");const{RuleStopState}=require("./ATNState");const{ATNConfigSet}=require("./ATNConfigSet");const{ATNConfig}=require("./ATNConfig");const{SemanticContext}=require("./SemanticContext");const PredictionMode={SLL:0,LL:1,LL_EXACT_AMBIG_DETECTION:2,hasSLLConflictTerminatingPrediction:function(mode,configs){if(PredictionMode.allConfigsInRuleStopStates(configs)){return true}if(mode===PredictionMode.SLL){if(configs.hasSemanticContext){const dup=new ATNConfigSet;for(let i=0;i<configs.items.length;i++){let c=configs.items[i];c=new ATNConfig({semanticContext:SemanticContext.NONE},c);dup.add(c)}configs=dup}}const altsets=PredictionMode.getConflictingAltSubsets(configs);return PredictionMode.hasConflictingAltSet(altsets)&&!PredictionMode.hasStateAssociatedWithOneAlt(configs)},hasConfigInRuleStopState:function(configs){for(let i=0;i<configs.items.length;i++){const c=configs.items[i];if(c.state instanceof RuleStopState){return true}}return false},allConfigsInRuleStopStates:function(configs){for(let i=0;i<configs.items.length;i++){const c=configs.items[i];if(!(c.state instanceof RuleStopState)){return false}}return true},resolvesToJustOneViableAlt:function(altsets){return PredictionMode.getSingleViableAlt(altsets)},allSubsetsConflict:function(altsets){return!PredictionMode.hasNonConflictingAltSet(altsets)},hasNonConflictingAltSet:function(altsets){for(let i=0;i<altsets.length;i++){const alts=altsets[i];if(alts.length===1){return true}}return false},hasConflictingAltSet:function(altsets){for(let i=0;i<altsets.length;i++){const alts=altsets[i];if(alts.length>1){return true}}return false},allSubsetsEqual:function(altsets){let first=null;for(let i=0;i<altsets.length;i++){const alts=altsets[i];if(first===null){first=alts}else if(alts!==first){return false}}return true},getUniqueAlt:function(altsets){const all=PredictionMode.getAlts(altsets);if(all.length===1){return all.minValue()}else{return ATN.INVALID_ALT_NUMBER}},getAlts:function(altsets){const all=new BitSet;altsets.map(function(alts){all.or(alts)});return all},getConflictingAltSubsets:function(configs){const configToAlts=new Map;configToAlts.hashFunction=function(cfg){hashStuff(cfg.state.stateNumber,cfg.context)};configToAlts.equalsFunction=function(c1,c2){return c1.state.stateNumber===c2.state.stateNumber&&c1.context.equals(c2.context)};configs.items.map(function(cfg){let alts=configToAlts.get(cfg);if(alts===null){alts=new BitSet;configToAlts.put(cfg,alts)}alts.add(cfg.alt)});return configToAlts.getValues()},getStateToAltMap:function(configs){const m=new AltDict;configs.items.map(function(c){let alts=m.get(c.state);if(alts===null){alts=new BitSet;m.put(c.state,alts)}alts.add(c.alt)});return m},hasStateAssociatedWithOneAlt:function(configs){const values=PredictionMode.getStateToAltMap(configs).values();for(let i=0;i<values.length;i++){if(values[i].length===1){return true}}return false},getSingleViableAlt:function(altsets){let result=null;for(let i=0;i<altsets.length;i++){const alts=altsets[i];const minAlt=alts.minValue();if(result===null){result=minAlt}else if(result!==minAlt){return ATN.INVALID_ALT_NUMBER}}return result}};module.exports=PredictionMode},{"./../Utils":14,"./ATN":15,"./ATNConfig":16,"./ATNConfigSet":17,"./ATNState":21,"./SemanticContext":28}],28:[function(require,module,exports){const{Set,Hash,equalArrays}=require("./../Utils");class SemanticContext{hashCode(){const hash=new Hash;this.updateHashCode(hash);return hash.finish()}evaluate(parser,outerContext){}evalPrecedence(parser,outerContext){return this}static andContext(a,b){if(a===null||a===SemanticContext.NONE){return b}if(b===null||b===SemanticContext.NONE){return a}const result=new AND(a,b);if(result.opnds.length===1){return result.opnds[0]}else{return result}}static orContext(a,b){if(a===null){return b}if(b===null){return a}if(a===SemanticContext.NONE||b===SemanticContext.NONE){return SemanticContext.NONE}const result=new OR(a,b);if(result.opnds.length===1){return result.opnds[0]}else{return result}}}class Predicate extends SemanticContext{constructor(ruleIndex,predIndex,isCtxDependent){super();this.ruleIndex=ruleIndex===undefined?-1:ruleIndex;this.predIndex=predIndex===undefined?-1:predIndex;this.isCtxDependent=isCtxDependent===undefined?false:isCtxDependent}evaluate(parser,outerContext){const localctx=this.isCtxDependent?outerContext:null;return parser.sempred(localctx,this.ruleIndex,this.predIndex)}updateHashCode(hash){hash.update(this.ruleIndex,this.predIndex,this.isCtxDependent)}equals(other){if(this===other){return true}else if(!(other instanceof Predicate)){return false}else{return this.ruleIndex===other.ruleIndex&&this.predIndex===other.predIndex&&this.isCtxDependent===other.isCtxDependent}}toString(){return"{"+this.ruleIndex+":"+this.predIndex+"}?"}}SemanticContext.NONE=new Predicate;class PrecedencePredicate extends SemanticContext{constructor(precedence){super();this.precedence=precedence===undefined?0:precedence}evaluate(parser,outerContext){return parser.precpred(outerContext,this.precedence)}evalPrecedence(parser,outerContext){if(parser.precpred(outerContext,this.precedence)){return SemanticContext.NONE}else{return null}}compareTo(other){return this.precedence-other.precedence}updateHashCode(hash){hash.update(this.precedence)}equals(other){if(this===other){return true}else if(!(other instanceof PrecedencePredicate)){return false}else{return this.precedence===other.precedence}}toString(){return"{"+this.precedence+">=prec}?"}static filterPrecedencePredicates(set){const result=[];set.values().map(function(context){if(context instanceof PrecedencePredicate){result.push(context)}});return result}}class AND extends SemanticContext{constructor(a,b){super();const operands=new Set;if(a instanceof AND){a.opnds.map(function(o){operands.add(o)})}else{operands.add(a)}if(b instanceof AND){b.opnds.map(function(o){operands.add(o)})}else{operands.add(b)}const precedencePredicates=PrecedencePredicate.filterPrecedencePredicates(operands);if(precedencePredicates.length>0){let reduced=null;precedencePredicates.map(function(p){if(reduced===null||p.precedence<reduced.precedence){reduced=p}});operands.add(reduced)}this.opnds=Array.from(operands.values())}equals(other){if(this===other){return true}else if(!(other instanceof AND)){return false}else{return equalArrays(this.opnds,other.opnds)}}updateHashCode(hash){hash.update(this.opnds,"AND")}evaluate(parser,outerContext){for(let i=0;i<this.opnds.length;i++){if(!this.opnds[i].evaluate(parser,outerContext)){return false}}return true}evalPrecedence(parser,outerContext){let differs=false;const operands=[];for(let i=0;i<this.opnds.length;i++){const context=this.opnds[i];const evaluated=context.evalPrecedence(parser,outerContext);differs|=evaluated!==context;if(evaluated===null){return null}else if(evaluated!==SemanticContext.NONE){operands.push(evaluated)}}if(!differs){return this}if(operands.length===0){return SemanticContext.NONE}let result=null;operands.map(function(o){result=result===null?o:SemanticContext.andContext(result,o)});return result}toString(){const s=this.opnds.map(o=>o.toString());return(s.length>3?s.slice(3):s).join("&&")}}class OR extends SemanticContext{constructor(a,b){super();const operands=new Set;if(a instanceof OR){a.opnds.map(function(o){operands.add(o)})}else{operands.add(a)}if(b instanceof OR){b.opnds.map(function(o){operands.add(o)})}else{operands.add(b)}const precedencePredicates=PrecedencePredicate.filterPrecedencePredicates(operands);if(precedencePredicates.length>0){const s=precedencePredicates.sort(function(a,b){return a.compareTo(b)});const reduced=s[s.length-1];operands.add(reduced)}this.opnds=Array.from(operands.values())}equals(other){if(this===other){return true}else if(!(other instanceof OR)){return false}else{return equalArrays(this.opnds,other.opnds)}}updateHashCode(hash){hash.update(this.opnds,"OR")}evaluate(parser,outerContext){for(let i=0;i<this.opnds.length;i++){if(this.opnds[i].evaluate(parser,outerContext)){return true}}return false}evalPrecedence(parser,outerContext){let differs=false;const operands=[];for(let i=0;i<this.opnds.length;i++){const context=this.opnds[i];const evaluated=context.evalPrecedence(parser,outerContext);differs|=evaluated!==context;if(evaluated===SemanticContext.NONE){return SemanticContext.NONE}else if(evaluated!==null){operands.push(evaluated)}}if(!differs){return this}if(operands.length===0){return null}const result=null;operands.map(function(o){return result===null?o:SemanticContext.orContext(result,o)});return result}toString(){const s=this.opnds.map(o=>o.toString());return(s.length>3?s.slice(3):s).join("||")}}module.exports={SemanticContext:SemanticContext,PrecedencePredicate:PrecedencePredicate,Predicate:Predicate}},{"./../Utils":14}],29:[function(require,module,exports){const{Token}=require("./../Token");const{IntervalSet}=require("./../IntervalSet");const{Predicate,PrecedencePredicate}=require("./SemanticContext");class Transition{constructor(target){if(target===undefined||target===null){throw"target cannot be null."}this.target=target;this.isEpsilon=false;this.label=null}}Transition.EPSILON=1;Transition.RANGE=2;Transition.RULE=3;Transition.PREDICATE=4;Transition.ATOM=5;Transition.ACTION=6;Transition.SET=7;Transition.NOT_SET=8;Transition.WILDCARD=9;Transition.PRECEDENCE=10;Transition.serializationNames=["INVALID","EPSILON","RANGE","RULE","PREDICATE","ATOM","ACTION","SET","NOT_SET","WILDCARD","PRECEDENCE"];Transition.serializationTypes={EpsilonTransition:Transition.EPSILON,RangeTransition:Transition.RANGE,RuleTransition:Transition.RULE,PredicateTransition:Transition.PREDICATE,AtomTransition:Transition.ATOM,ActionTransition:Transition.ACTION,SetTransition:Transition.SET,NotSetTransition:Transition.NOT_SET,WildcardTransition:Transition.WILDCARD,PrecedencePredicateTransition:Transition.PRECEDENCE};class AtomTransition extends Transition{constructor(target,label){super(target);this.label_=label;this.label=this.makeLabel();this.serializationType=Transition.ATOM}makeLabel(){const s=new IntervalSet;s.addOne(this.label_);return s}matches(symbol,minVocabSymbol,maxVocabSymbol){return this.label_===symbol}toString(){return this.label_}}class RuleTransition extends Transition{constructor(ruleStart,ruleIndex,precedence,followState){super(ruleStart);this.ruleIndex=ruleIndex;this.precedence=precedence;this.followState=followState;this.serializationType=Transition.RULE;this.isEpsilon=true}matches(symbol,minVocabSymbol,maxVocabSymbol){return false}}class EpsilonTransition extends Transition{constructor(target,outermostPrecedenceReturn){super(target);this.serializationType=Transition.EPSILON;this.isEpsilon=true;this.outermostPrecedenceReturn=outermostPrecedenceReturn}matches(symbol,minVocabSymbol,maxVocabSymbol){return false}toString(){return"epsilon"}}class RangeTransition extends Transition{constructor(target,start,stop){super(target);this.serializationType=Transition.RANGE;this.start=start;this.stop=stop;this.label=this.makeLabel()}makeLabel(){const s=new IntervalSet;s.addRange(this.start,this.stop);return s}matches(symbol,minVocabSymbol,maxVocabSymbol){return symbol>=this.start&&symbol<=this.stop}toString(){return"'"+String.fromCharCode(this.start)+"'..'"+String.fromCharCode(this.stop)+"'"}}class AbstractPredicateTransition extends Transition{constructor(target){super(target)}}class PredicateTransition extends AbstractPredicateTransition{constructor(target,ruleIndex,predIndex,isCtxDependent){super(target);this.serializationType=Transition.PREDICATE;this.ruleIndex=ruleIndex;this.predIndex=predIndex;this.isCtxDependent=isCtxDependent;this.isEpsilon=true}matches(symbol,minVocabSymbol,maxVocabSymbol){return false}getPredicate(){return new Predicate(this.ruleIndex,this.predIndex,this.isCtxDependent)}toString(){return"pred_"+this.ruleIndex+":"+this.predIndex}}class ActionTransition extends Transition{constructor(target,ruleIndex,actionIndex,isCtxDependent){super(target);this.serializationType=Transition.ACTION;this.ruleIndex=ruleIndex;this.actionIndex=actionIndex===undefined?-1:actionIndex;this.isCtxDependent=isCtxDependent===undefined?false:isCtxDependent;this.isEpsilon=true}matches(symbol,minVocabSymbol,maxVocabSymbol){return false}toString(){return"action_"+this.ruleIndex+":"+this.actionIndex}}class SetTransition extends Transition{constructor(target,set){super(target);this.serializationType=Transition.SET;if(set!==undefined&&set!==null){this.label=set}else{this.label=new IntervalSet;this.label.addOne(Token.INVALID_TYPE)}}matches(symbol,minVocabSymbol,maxVocabSymbol){return this.label.contains(symbol)}toString(){return this.label.toString()}}class NotSetTransition extends SetTransition{constructor(target,set){super(target,set);this.serializationType=Transition.NOT_SET}matches(symbol,minVocabSymbol,maxVocabSymbol){return symbol>=minVocabSymbol&&symbol<=maxVocabSymbol&&!super.matches(symbol,minVocabSymbol,maxVocabSymbol)}toString(){return"~"+super.toString()}}class WildcardTransition extends Transition{constructor(target){super(target);this.serializationType=Transition.WILDCARD}matches(symbol,minVocabSymbol,maxVocabSymbol){return symbol>=minVocabSymbol&&symbol<=maxVocabSymbol}toString(){return"."}}class PrecedencePredicateTransition extends AbstractPredicateTransition{constructor(target,precedence){super(target);this.serializationType=Transition.PRECEDENCE;this.precedence=precedence;this.isEpsilon=true}matches(symbol,minVocabSymbol,maxVocabSymbol){return false}getPredicate(){return new PrecedencePredicate(this.precedence)}toString(){return this.precedence+" >= _p"}}module.exports={Transition:Transition,AtomTransition:AtomTransition,SetTransition:SetTransition,NotSetTransition:NotSetTransition,RuleTransition:RuleTransition,ActionTransition:ActionTransition,EpsilonTransition:EpsilonTransition,RangeTransition:RangeTransition,WildcardTransition:WildcardTransition,PredicateTransition:PredicateTransition,PrecedencePredicateTransition:PrecedencePredicateTransition,AbstractPredicateTransition:AbstractPredicateTransition}},{"./../IntervalSet":5,"./../Token":13,"./SemanticContext":28}],30:[function(require,module,exports){exports.ATN=require("./ATN");exports.ATNDeserializer=require("./ATNDeserializer");exports.LexerATNSimulator=require("./LexerATNSimulator");exports.ParserATNSimulator=require("./ParserATNSimulator");exports.PredictionMode=require("./PredictionMode")},{"./ATN":15,"./ATNDeserializer":19,"./LexerATNSimulator":23,"./ParserATNSimulator":26,"./PredictionMode":27}],31:[function(require,module,exports){const{Set}=require("../Utils");const{DFAState}=require("./DFAState");const{StarLoopEntryState}=require("../atn/ATNState");const{ATNConfigSet}=require("./../atn/ATNConfigSet");const{DFASerializer}=require("./DFASerializer");const{LexerDFASerializer}=require("./DFASerializer");class DFA{constructor(atnStartState,decision){if(decision===undefined){decision=0}this.atnStartState=atnStartState;this.decision=decision;this._states=new Set;this.s0=null;this.precedenceDfa=false;if(atnStartState instanceof StarLoopEntryState){if(atnStartState.isPrecedenceDecision){this.precedenceDfa=true;const precedenceState=new DFAState(null,new ATNConfigSet);precedenceState.edges=[];precedenceState.isAcceptState=false;precedenceState.requiresFullContext=false;this.s0=precedenceState}}}getPrecedenceStartState(precedence){if(!this.precedenceDfa){throw"Only precedence DFAs may contain a precedence start state."}if(precedence<0||precedence>=this.s0.edges.length){return null}return this.s0.edges[precedence]||null}setPrecedenceStartState(precedence,startState){if(!this.precedenceDfa){throw"Only precedence DFAs may contain a precedence start state."}if(precedence<0){return}this.s0.edges[precedence]=startState}setPrecedenceDfa(precedenceDfa){if(this.precedenceDfa!==precedenceDfa){this._states=new Set;if(precedenceDfa){const precedenceState=new DFAState(null,new ATNConfigSet);precedenceState.edges=[];precedenceState.isAcceptState=false;precedenceState.requiresFullContext=false;this.s0=precedenceState}else{this.s0=null}this.precedenceDfa=precedenceDfa}}sortedStates(){const list=this._states.values();return list.sort(function(a,b){return a.stateNumber-b.stateNumber})}toString(literalNames,symbolicNames){literalNames=literalNames||null;symbolicNames=symbolicNames||null;if(this.s0===null){return""}const serializer=new DFASerializer(this,literalNames,symbolicNames);return serializer.toString()}toLexerString(){if(this.s0===null){return""}const serializer=new LexerDFASerializer(this);return serializer.toString()}get states(){return this._states}}module.exports=DFA},{"../Utils":14,"../atn/ATNState":21,"./../atn/ATNConfigSet":17,"./DFASerializer":32,"./DFAState":33}],32:[function(require,module,exports){const Utils=require("./../Utils");class DFASerializer{constructor(dfa,literalNames,symbolicNames){this.dfa=dfa;this.literalNames=literalNames||[];this.symbolicNames=symbolicNames||[]}toString(){if(this.dfa.s0===null){return null}let buf="";const states=this.dfa.sortedStates();for(let i=0;i<states.length;i++){const s=states[i];if(s.edges!==null){const n=s.edges.length;for(let j=0;j<n;j++){const t=s.edges[j]||null;if(t!==null&&t.stateNumber!==2147483647){buf=buf.concat(this.getStateString(s));buf=buf.concat("-");buf=buf.concat(this.getEdgeLabel(j));buf=buf.concat("->");buf=buf.concat(this.getStateString(t));buf=buf.concat("\n")}}}}return buf.length===0?null:buf}getEdgeLabel(i){if(i===0){return"EOF"}else if(this.literalNames!==null||this.symbolicNames!==null){return this.literalNames[i-1]||this.symbolicNames[i-1]}else{return String.fromCharCode(i-1)}}getStateString(s){const baseStateStr=(s.isAcceptState?":":"")+"s"+s.stateNumber+(s.requiresFullContext?"^":"");if(s.isAcceptState){if(s.predicates!==null){return baseStateStr+"=>"+Utils.arrayToString(s.predicates)}else{return baseStateStr+"=>"+s.prediction.toString()}}else{return baseStateStr}}}class LexerDFASerializer extends DFASerializer{constructor(dfa){super(dfa,null)}getEdgeLabel(i){return"'"+String.fromCharCode(i)+"'"}}module.exports={DFASerializer:DFASerializer,LexerDFASerializer:LexerDFASerializer}},{"./../Utils":14}],33:[function(require,module,exports){const{ATNConfigSet}=require("./../atn/ATNConfigSet");const{Hash,Set}=require("./../Utils");class PredPrediction{constructor(pred,alt){this.alt=alt;this.pred=pred}toString(){return"("+this.pred+", "+this.alt+")"}}class DFAState{constructor(stateNumber,configs){if(stateNumber===null){stateNumber=-1}if(configs===null){configs=new ATNConfigSet}this.stateNumber=stateNumber;this.configs=configs;this.edges=null;this.isAcceptState=false;this.prediction=0;this.lexerActionExecutor=null;this.requiresFullContext=false;this.predicates=null;return this}getAltSet(){const alts=new Set;if(this.configs!==null){for(let i=0;i<this.configs.length;i++){const c=this.configs[i];alts.add(c.alt)}}if(alts.length===0){return null}else{return alts}}equals(other){return this===other||other instanceof DFAState&&this.configs.equals(other.configs)}toString(){let s=""+this.stateNumber+":"+this.configs;if(this.isAcceptState){s=s+"=>";if(this.predicates!==null)s=s+this.predicates;else s=s+this.prediction}return s}hashCode(){const hash=new Hash;hash.update(this.configs);return hash.finish()}}module.exports={DFAState:DFAState,PredPrediction:PredPrediction}},{"./../Utils":14,"./../atn/ATNConfigSet":17}],34:[function(require,module,exports){exports.DFA=require("./DFA");exports.DFASerializer=require("./DFASerializer").DFASerializer;exports.LexerDFASerializer=require("./DFASerializer").LexerDFASerializer;exports.PredPrediction=require("./DFAState").PredPrediction},{"./DFA":31,"./DFASerializer":32,"./DFAState":33}],35:[function(require,module,exports){const{BitSet}=require("./../Utils");const{ErrorListener}=require("./ErrorListener");const{Interval}=require("./../IntervalSet");class DiagnosticErrorListener extends ErrorListener{constructor(exactOnly){super();exactOnly=exactOnly||true;this.exactOnly=exactOnly}reportAmbiguity(recognizer,dfa,startIndex,stopIndex,exact,ambigAlts,configs){if(this.exactOnly&&!exact){return}const msg="reportAmbiguity d="+this.getDecisionDescription(recognizer,dfa)+": ambigAlts="+this.getConflictingAlts(ambigAlts,configs)+", input='"+recognizer.getTokenStream().getText(new Interval(startIndex,stopIndex))+"'";recognizer.notifyErrorListeners(msg)}reportAttemptingFullContext(recognizer,dfa,startIndex,stopIndex,conflictingAlts,configs){const msg="reportAttemptingFullContext d="+this.getDecisionDescription(recognizer,dfa)+", input='"+recognizer.getTokenStream().getText(new Interval(startIndex,stopIndex))+"'";recognizer.notifyErrorListeners(msg)}reportContextSensitivity(recognizer,dfa,startIndex,stopIndex,prediction,configs){const msg="reportContextSensitivity d="+this.getDecisionDescription(recognizer,dfa)+", input='"+recognizer.getTokenStream().getText(new Interval(startIndex,stopIndex))+"'";recognizer.notifyErrorListeners(msg)}getDecisionDescription(recognizer,dfa){const decision=dfa.decision;const ruleIndex=dfa.atnStartState.ruleIndex;const ruleNames=recognizer.ruleNames;if(ruleIndex<0||ruleIndex>=ruleNames.length){return""+decision}const ruleName=ruleNames[ruleIndex]||null;if(ruleName===null||ruleName.length===0){return""+decision}return`${decision} (${ruleName})`}getConflictingAlts(reportedAlts,configs){if(reportedAlts!==null){return reportedAlts}const result=new BitSet;for(let i=0;i<configs.items.length;i++){result.add(configs.items[i].alt)}return`{${result.values().join(", ")}}`}}module.exports=DiagnosticErrorListener},{"./../IntervalSet":5,"./../Utils":14,"./ErrorListener":36}],36:[function(require,module,exports){class ErrorListener{syntaxError(recognizer,offendingSymbol,line,column,msg,e){}reportAmbiguity(recognizer,dfa,startIndex,stopIndex,exact,ambigAlts,configs){}reportAttemptingFullContext(recognizer,dfa,startIndex,stopIndex,conflictingAlts,configs){}reportContextSensitivity(recognizer,dfa,startIndex,stopIndex,prediction,configs){}}class ConsoleErrorListener extends ErrorListener{constructor(){super()}syntaxError(recognizer,offendingSymbol,line,column,msg,e){console.error("line "+line+":"+column+" "+msg)}}ConsoleErrorListener.INSTANCE=new ConsoleErrorListener;class ProxyErrorListener extends ErrorListener{constructor(delegates){super();if(delegates===null){throw"delegates"}this.delegates=delegates;return this}syntaxError(recognizer,offendingSymbol,line,column,msg,e){this.delegates.map(d=>d.syntaxError(recognizer,offendingSymbol,line,column,msg,e))}reportAmbiguity(recognizer,dfa,startIndex,stopIndex,exact,ambigAlts,configs){this.delegates.map(d=>d.reportAmbiguity(recognizer,dfa,startIndex,stopIndex,exact,ambigAlts,configs))}reportAttemptingFullContext(recognizer,dfa,startIndex,stopIndex,conflictingAlts,configs){this.delegates.map(d=>d.reportAttemptingFullContext(recognizer,dfa,startIndex,stopIndex,conflictingAlts,configs))}reportContextSensitivity(recognizer,dfa,startIndex,stopIndex,prediction,configs){this.delegates.map(d=>d.reportContextSensitivity(recognizer,dfa,startIndex,stopIndex,prediction,configs))}}module.exports={ErrorListener:ErrorListener,ConsoleErrorListener:ConsoleErrorListener,ProxyErrorListener:ProxyErrorListener}},{}],37:[function(require,module,exports){const{Token}=require("./../Token");const{NoViableAltException,InputMismatchException,FailedPredicateException,ParseCancellationException}=require("./Errors");const{ATNState}=require("./../atn/ATNState");const{Interval,IntervalSet}=require("./../IntervalSet");class ErrorStrategy{reset(recognizer){}recoverInline(recognizer){}recover(recognizer,e){}sync(recognizer){}inErrorRecoveryMode(recognizer){}reportError(recognizer){}}class DefaultErrorStrategy extends ErrorStrategy{constructor(){super();this.errorRecoveryMode=false;this.lastErrorIndex=-1;this.lastErrorStates=null;this.nextTokensContext=null;this.nextTokenState=0}reset(recognizer){this.endErrorCondition(recognizer)}beginErrorCondition(recognizer){this.errorRecoveryMode=true}inErrorRecoveryMode(recognizer){return this.errorRecoveryMode}endErrorCondition(recognizer){this.errorRecoveryMode=false;this.lastErrorStates=null;this.lastErrorIndex=-1}reportMatch(recognizer){this.endErrorCondition(recognizer)}reportError(recognizer,e){if(this.inErrorRecoveryMode(recognizer)){return}this.beginErrorCondition(recognizer);if(e instanceof NoViableAltException){this.reportNoViableAlternative(recognizer,e)}else if(e instanceof InputMismatchException){this.reportInputMismatch(recognizer,e)}else if(e instanceof FailedPredicateException){this.reportFailedPredicate(recognizer,e)}else{console.log("unknown recognition error type: "+e.constructor.name);console.log(e.stack);recognizer.notifyErrorListeners(e.getOffendingToken(),e.getMessage(),e)}}recover(recognizer,e){if(this.lastErrorIndex===recognizer.getInputStream().index&&this.lastErrorStates!==null&&this.lastErrorStates.indexOf(recognizer.state)>=0){recognizer.consume()}this.lastErrorIndex=recognizer._input.index;if(this.lastErrorStates===null){this.lastErrorStates=[]}this.lastErrorStates.push(recognizer.state);const followSet=this.getErrorRecoverySet(recognizer);this.consumeUntil(recognizer,followSet)}sync(recognizer){if(this.inErrorRecoveryMode(recognizer)){return}const s=recognizer._interp.atn.states[recognizer.state];const la=recognizer.getTokenStream().LA(1);const nextTokens=recognizer.atn.nextTokens(s);if(nextTokens.contains(la)){this.nextTokensContext=null;this.nextTokenState=ATNState.INVALID_STATE_NUMBER;return}else if(nextTokens.contains(Token.EPSILON)){if(this.nextTokensContext===null){this.nextTokensContext=recognizer._ctx;this.nextTokensState=recognizer._stateNumber}return}switch(s.stateType){case ATNState.BLOCK_START:case ATNState.STAR_BLOCK_START:case ATNState.PLUS_BLOCK_START:case ATNState.STAR_LOOP_ENTRY:if(this.singleTokenDeletion(recognizer)!==null){return}else{throw new InputMismatchException(recognizer)}case ATNState.PLUS_LOOP_BACK:case ATNState.STAR_LOOP_BACK:this.reportUnwantedToken(recognizer);const expecting=new IntervalSet;expecting.addSet(recognizer.getExpectedTokens());const whatFollowsLoopIterationOrRule=expecting.addSet(this.getErrorRecoverySet(recognizer));this.consumeUntil(recognizer,whatFollowsLoopIterationOrRule);break;default:}}reportNoViableAlternative(recognizer,e){const tokens=recognizer.getTokenStream();let input;if(tokens!==null){if(e.startToken.type===Token.EOF){input="<EOF>"}else{input=tokens.getText(new Interval(e.startToken.tokenIndex,e.offendingToken.tokenIndex))}}else{input="<unknown input>"}const msg="no viable alternative at input "+this.escapeWSAndQuote(input);recognizer.notifyErrorListeners(msg,e.offendingToken,e)}reportInputMismatch(recognizer,e){const msg="mismatched input "+this.getTokenErrorDisplay(e.offendingToken)+" expecting "+e.getExpectedTokens().toString(recognizer.literalNames,recognizer.symbolicNames);recognizer.notifyErrorListeners(msg,e.offendingToken,e)}reportFailedPredicate(recognizer,e){const ruleName=recognizer.ruleNames[recognizer._ctx.ruleIndex];const msg="rule "+ruleName+" "+e.message;recognizer.notifyErrorListeners(msg,e.offendingToken,e)}reportUnwantedToken(recognizer){if(this.inErrorRecoveryMode(recognizer)){return}this.beginErrorCondition(recognizer);const t=recognizer.getCurrentToken();const tokenName=this.getTokenErrorDisplay(t);const expecting=this.getExpectedTokens(recognizer);const msg="extraneous input "+tokenName+" expecting "+expecting.toString(recognizer.literalNames,recognizer.symbolicNames);recognizer.notifyErrorListeners(msg,t,null)}reportMissingToken(recognizer){if(this.inErrorRecoveryMode(recognizer)){return}this.beginErrorCondition(recognizer);const t=recognizer.getCurrentToken();const expecting=this.getExpectedTokens(recognizer);const msg="missing "+expecting.toString(recognizer.literalNames,recognizer.symbolicNames)+" at "+this.getTokenErrorDisplay(t);recognizer.notifyErrorListeners(msg,t,null)}recoverInline(recognizer){const matchedSymbol=this.singleTokenDeletion(recognizer);if(matchedSymbol!==null){recognizer.consume();return matchedSymbol}if(this.singleTokenInsertion(recognizer)){return this.getMissingSymbol(recognizer)}throw new InputMismatchException(recognizer)}singleTokenInsertion(recognizer){const currentSymbolType=recognizer.getTokenStream().LA(1);const atn=recognizer._interp.atn;const currentState=atn.states[recognizer.state];const next=currentState.transitions[0].target;const expectingAtLL2=atn.nextTokens(next,recognizer._ctx);if(expectingAtLL2.contains(currentSymbolType)){this.reportMissingToken(recognizer);return true}else{return false}}singleTokenDeletion(recognizer){const nextTokenType=recognizer.getTokenStream().LA(2);const expecting=this.getExpectedTokens(recognizer);if(expecting.contains(nextTokenType)){this.reportUnwantedToken(recognizer);recognizer.consume();const matchedSymbol=recognizer.getCurrentToken();this.reportMatch(recognizer);return matchedSymbol}else{return null}}getMissingSymbol(recognizer){const currentSymbol=recognizer.getCurrentToken();const expecting=this.getExpectedTokens(recognizer);const expectedTokenType=expecting.first();let tokenText;if(expectedTokenType===Token.EOF){tokenText="<missing EOF>"}else{tokenText="<missing "+recognizer.literalNames[expectedTokenType]+">"}let current=currentSymbol;const lookback=recognizer.getTokenStream().LT(-1);if(current.type===Token.EOF&&lookback!==null){current=lookback}return recognizer.getTokenFactory().create(current.source,expectedTokenType,tokenText,Token.DEFAULT_CHANNEL,-1,-1,current.line,current.column)}getExpectedTokens(recognizer){return recognizer.getExpectedTokens()}getTokenErrorDisplay(t){if(t===null){return"<no token>"}let s=t.text;if(s===null){if(t.type===Token.EOF){s="<EOF>"}else{s="<"+t.type+">"}}return this.escapeWSAndQuote(s)}escapeWSAndQuote(s){s=s.replace(/\n/g,"\\n");s=s.replace(/\r/g,"\\r");s=s.replace(/\t/g,"\\t");return"'"+s+"'"}getErrorRecoverySet(recognizer){const atn=recognizer._interp.atn;let ctx=recognizer._ctx;const recoverSet=new IntervalSet;while(ctx!==null&&ctx.invokingState>=0){const invokingState=atn.states[ctx.invokingState];const rt=invokingState.transitions[0];const follow=atn.nextTokens(rt.followState);recoverSet.addSet(follow);ctx=ctx.parentCtx}recoverSet.removeOne(Token.EPSILON);return recoverSet}consumeUntil(recognizer,set){let ttype=recognizer.getTokenStream().LA(1);while(ttype!==Token.EOF&&!set.contains(ttype)){recognizer.consume();ttype=recognizer.getTokenStream().LA(1)}}}class BailErrorStrategy extends DefaultErrorStrategy{constructor(){super()}recover(recognizer,e){let context=recognizer._ctx;while(context!==null){context.exception=e;context=context.parentCtx}throw new ParseCancellationException(e)}recoverInline(recognizer){this.recover(recognizer,new InputMismatchException(recognizer))}sync(recognizer){}}module.exports={BailErrorStrategy:BailErrorStrategy,DefaultErrorStrategy:DefaultErrorStrategy}},{"./../IntervalSet":5,"./../Token":13,"./../atn/ATNState":21,"./Errors":38}],38:[function(require,module,exports){const{PredicateTransition}=require("./../atn/Transition");const{Interval}=require("../IntervalSet").Interval;class RecognitionException extends Error{constructor(params){super(params.message);if(!!Error.captureStackTrace){Error.captureStackTrace(this,RecognitionException)}else{var stack=(new Error).stack}this.message=params.message;this.recognizer=params.recognizer;this.input=params.input;this.ctx=params.ctx;this.offendingToken=null;this.offendingState=-1;if(this.recognizer!==null){this.offendingState=this.recognizer.state}}getExpectedTokens(){if(this.recognizer!==null){return this.recognizer.atn.getExpectedTokens(this.offendingState,this.ctx)}else{return null}}toString(){return this.message}}class LexerNoViableAltException extends RecognitionException{constructor(lexer,input,startIndex,deadEndConfigs){super({message:"",recognizer:lexer,input:input,ctx:null});this.startIndex=startIndex;this.deadEndConfigs=deadEndConfigs}toString(){let symbol="";if(this.startIndex>=0&&this.startIndex<this.input.size){symbol=this.input.getText(new Interval(this.startIndex,this.startIndex))}return"LexerNoViableAltException"+symbol}}class NoViableAltException extends RecognitionException{constructor(recognizer,input,startToken,offendingToken,deadEndConfigs,ctx){ctx=ctx||recognizer._ctx;offendingToken=offendingToken||recognizer.getCurrentToken();startToken=startToken||recognizer.getCurrentToken();input=input||recognizer.getInputStream();super({message:"",recognizer:recognizer,input:input,ctx:ctx});this.deadEndConfigs=deadEndConfigs;this.startToken=startToken;this.offendingToken=offendingToken}}class InputMismatchException extends RecognitionException{constructor(recognizer){super({message:"",recognizer:recognizer,input:recognizer.getInputStream(),ctx:recognizer._ctx});this.offendingToken=recognizer.getCurrentToken()}}function formatMessage(predicate,message){if(message!==null){return message}else{return"failed predicate: {"+predicate+"}?"}}class FailedPredicateException extends RecognitionException{constructor(recognizer,predicate,message){super({message:formatMessage(predicate,message||null),recognizer:recognizer,input:recognizer.getInputStream(),ctx:recognizer._ctx});const s=recognizer._interp.atn.states[recognizer.state];const trans=s.transitions[0];if(trans instanceof PredicateTransition){this.ruleIndex=trans.ruleIndex;this.predicateIndex=trans.predIndex}else{this.ruleIndex=0;this.predicateIndex=0}this.predicate=predicate;this.offendingToken=recognizer.getCurrentToken()}}class ParseCancellationException extends Error{constructor(){super();Error.captureStackTrace(this,ParseCancellationException)}}module.exports={RecognitionException:RecognitionException,NoViableAltException:NoViableAltException,LexerNoViableAltException:LexerNoViableAltException,InputMismatchException:InputMismatchException,FailedPredicateException:FailedPredicateException,ParseCancellationException:ParseCancellationException}},{"../IntervalSet":5,"./../atn/Transition":29}],39:[function(require,module,exports){module.exports.RecognitionException=require("./Errors").RecognitionException;module.exports.NoViableAltException=require("./Errors").NoViableAltException;module.exports.LexerNoViableAltException=require("./Errors").LexerNoViableAltException;module.exports.InputMismatchException=require("./Errors").InputMismatchException;module.exports.FailedPredicateException=require("./Errors").FailedPredicateException;module.exports.DiagnosticErrorListener=require("./DiagnosticErrorListener");module.exports.BailErrorStrategy=require("./ErrorStrategy").BailErrorStrategy;module.exports.DefaultErrorStrategy=require("./ErrorStrategy").DefaultErrorStrategy;module.exports.ErrorListener=require("./ErrorListener").ErrorListener},{"./DiagnosticErrorListener":35,"./ErrorListener":36,"./ErrorStrategy":37,"./Errors":38}],40:[function(require,module,exports){exports.atn=require("./atn/index");exports.dfa=require("./dfa/index");exports.error=require("./error/index");exports.Token=require("./Token").Token;exports.InputStream=require("./InputStream");exports.CommonTokenStream=require("./CommonTokenStream");exports.Lexer=require("./Lexer");exports.Parser=require("./Parser");var pc=require("./PredictionContext");exports.PredictionContextCache=pc.PredictionContextCache;exports.ParserRuleContext=require("./ParserRuleContext")},{"./CommonTokenStream":3,"./InputStream":4,"./Lexer":7,"./Parser":8,"./ParserRuleContext":9,"./PredictionContext":10,"./Token":13,"./atn/index":30,"./dfa/index":34,"./error/index":39}],41:[function(require,module,exports){exports.mathLexer=require("./mathLexer").mathLexer;exports.mathParser=require("./mathParser").mathParser;exports.antlr4=require("./index")},{"./index":40,"./mathLexer":42,"./mathParser":43}],42:[function(require,module,exports){antlr4=require("./index");const serializedATN=["悋Ꜫ脳맭䅼㯧瞆","奤ßࠝ\b\t\t","\t\t\t","\t\b\t\b\t\t\t\n\t\n\v\t\v","\f\t\f\r\t\r\t\t","\t\t\t\t","\t\t\t","\t\t\t\t","\t\t\t",'\t\t \t !\t!"\t"#',"\t#$\t$%\t%&\t&'\t'(\t()\t)","*\t*+\t+,\t,-\t-.\t./\t/0\t0","1\t12\t23\t34\t45\t56\t67\t7","8\t89\t9:\t:;\t;<\t<=\t=>\t>","?\t?@\t@A\tAB\tBC\tCD\tDE\tE","F\tFG\tGH\tHI\tIJ\tJK\tKL\tL","M\tMN\tNO\tOP\tPQ\tQR\tRS\tS","T\tTU\tUV\tVW\tWX\tXY\tYZ\tZ","[\t[\\\t\\]\t]^\t^_\t_`\t`a\ta","b\tbc\tcd\tde\tef\tfg\tgh\th","i\tij\tjk\tkl\tlm\tmn\tno\to","p\tpq\tqr\trs\tst\ttu\tuv\tv","w\twx\txy\tyz\tz{\t{|\t|}\t}","~\t~\t\t\t","\t\t\t\t","\t\t\t","\t\t\t\t","\t\t\t","\t\t\t\t","\t\t\t","\t\t\t\t","\t\t\t","\t\t \t ¡\t","¡¢\t¢£\t£¤\t¤","¥\t¥¦\t¦§\t§¨\t","¨©\t©ª\tª«\t«","¬\t¬­\t­®\t®¯\t","¯°\t°±\t±²\t²","³\t³´\t´µ\tµ¶\t","¶·\t·¸\t¸¹\t¹","º\tº»\t»¼\t¼½\t","½¾\t¾¿\t¿À\tÀ","Á\tÁÂ\tÂÃ\tÃÄ\t","ÄÅ\tÅÆ\tÆÇ\tÇ","È\tÈÉ\tÉÊ\tÊË\t","ËÌ\tÌÍ\tÍÎ\tÎ","Ï\tÏÐ\tÐÑ\tÑÒ\t","ÒÓ\tÓÔ\tÔÕ\tÕ","Ö\tÖ×\t×Ø\tØÙ\t","ÙÚ\tÚÛ\tÛÜ\tÜ","Ý\tÝÞ\tÞß\tß","","\b","\b\t\t\n\n\v\v\f","\f\r\r","","","","","","","","Ȉ\n\rȉ","Ȍ\nȐ","\n\fȓ\v","ȗ\n\rȘț","\nȠ\n","\rȡȤ\n","Ȩ\n\fȫ\v","ȯ\n\r","Ȱȳ\nȵ\n","ȹ\n","Ƚ\nȿ\n   ","  Ʌ\n \f  Ɉ\v    ","   ɏ\n \f  ɒ\v   ","    ə\n \f  ɜ\v  ",' ɟ\n !!!!!""','""""#####',"#########","##########","##########","##########ʗ","\n#$$$%%%%%%","%%&&&&&&&&","&'''''''(","((((((()))",")))))))***","*******+++","++++,,,,,,","-------...","..........",".////00011","1122222333","3334455566","6677777777","7888899999",":::::;;;;;",";<<<<====>",">>>???????","@@@@@@@AAA","AAAAABBBBB","BBBCCCCDDD","DDEEEEFFFF","FGGGGHHHHH","IIIIIJJJJJ","JKKKKKLLLL","LLMMMMMNNN","NNNOOOOOOP","PPPPPQQQQQ","QQQQQRRRRR","RRRSSSSSSS","STTTTTTUUU","UUVVVVWWWW","WWWXXXXXYY","YYYYYYYYYY","ZZZZZ[[[[[","[[[[[[\\\\\\\\","\\\\]]]]^^^","____``````","aaaaaaaaaa","aabbbbbbbb","cccccccddd","dddeeeefff","fffffffffи\nf","ggggghhhhh","hiiiiijjjj","jjjjjjjjkk","kkkklllllm","mmmmmnnnnn","oooopppppp","pppppppѼ\npqq","qqrrrrrrrs","sssssssttt","ttuuuuuuvv","vvwwwwwwwx","xxxxxxxxxx","yyzzzzz{{{","{{||||||||","|||||ӊ\n|}}}}","}}~~~~~~~~","~~","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","     ","   ¡¡¡","¡¢¢¢¢¢","¢£££££","££¤¤¤¤","¤¤¥¥¥¥","¥¥¥¦¦¦","¦¦¦§§§","§¨¨¨¨¨","©©©©©©","©©©ªªª","ªªªªª«","««««««","«««¬¬¬","¬¬¬¬¬¬","­­­­­­","­­­®®®","®®®®®¯","¯¯¯¯¯¯","¯¯¯°°°","°°°°°°","°±±±±±","±²²²²²","³³³³³³","³´´´´´","´´´´´µ","µµµµµµ","µµµ¶¶¶","¶¶¶¶¶¶","······","··¸¸¸¸","¸¸¸¸¸¸","¸¸¹¹¹¹","¹¹¹ººº","ºººººº","ººº»»»","»»»»»»","»»»»¼¼","¼¼¼¼¼¼","½½½½½½","¾¾¾¾¾¿","¿¿¿¿¿¿","¿ÀÀÀÀÀ","ÀÀÀÀÀÀ","ÀÀÁÁÁÁ","ÁÁÁÁÁÁ","ÁÁÁÁÁ۝\n","ÁÂÂÂÂÂ","ÂÂÂÂÂÂ","ÂÂÂÂۭ\nÂÃ","ÃÃÃÃÃÃ","ÃÃÃÃÃÃ","ۻ\nÃÄÄÄÄ","ÄÄÄÄÅÅ","ÅÅÅÅÅÅ","ÅÅÅÅÆÆ","ÆÆÆÆÇÇ","ÇÇÇÈÈÈ","ÈÈÈÈÈÈ","ÈÉÉÉÉÉ","ÉÉÉÉÉÉ","ÊÊÊÊÊÊ","ÊÊÊËËË","ËËËËËË","ËËËËËÌ","ÌÌÌÌÌÌ","ÌÌÌÌÌÌ","ÌÌÌÌÌÌ","ÍÍÍÍÍÍ","ÍÍÍÍÍÍ","ÎÎÎÎÎÎ","ÎÎÎÎÏÏ","ÏÏÏÐÐÐ","ÐÐÐÐÑÑ","ÑÑÑÑÑރ\nÑ","ÒÒÒÒÒÒ","ÒÒÒÒÒÒ","ސ\nÒÓÓÓÓ","ÓÓÓÓÓÓ","ÓÓÓÓÓޠ\nÓ","ÔÔÔÔÔÔ","ÔÔÔÕÕÕ","ÕÕÕÕÕÕ","ÕÖÖÖÖÖ","ÖÖÖ×××","××××××","ØØØØØØ","ØØØØØÙ","ÙÙÙÙÙÙ","ÙÙÙÙÚÚ","Úߞ\nÚÚÚÚߢ","\nÚ\fÚÚߥ\vÚÛÛ","Ûߩ\nÛ\rÛÛߪÛ","ÛÛÛÛ߱\nÛÛ","ÛÛߵ\nÛ\fÛÛ߸\v","ÛÛߺ\nÛÜÜÝ","Ý߿\nÝ\rÝÝࠀÝ","ÝÞÞÞÞÞࠉ","\nÞ\fÞÞࠌ\vÞÞÞ","ÞÞÞßßß","ßßࠗ\nß\fßßࠚ\v","ßßßࠊà","\t\v\r\b\t\n\v","\f\r!","#%')+-/135","79;= ?!A\"C#E$G%I&K'M(O)Q*S+U,W-Y.[/]0_1a2c3e4g5","i6k7m8o9q:s;u<w=y>{?}@ABCDEF","GHIJKLMNOP","Q¡R£S¥T§U©V«W­X¯Y±Z³","[µ\\·]¹^»_½`¿aÁbÃcÅdÇ","eÉfËgÍhÏiÑjÓkÕl×mÙnÛ","oÝpßqárãsåtçuévëwíxï","yñzó{õ|÷}ù~ûýÿ","āăąćĉċ","čďđēĕė","ęěĝğġģ","ĥħĩīĭį","ıĳĵķĹĻ","Ľ Ŀ¡Ł¢Ń£Ņ¤Ň¥","ŉ¦ŋ§ō¨ŏ©őªœ«","ŕ¬ŗ­ř®ś¯ŝ°ş±","š²ţ³ť´ŧµũ¶ū·","ŭ¸ů¹űºų»ŵ¼ŷ½","Ź¾Ż¿ŽÀſÁƁÂƃÃ","ƅÄƇÅƉÆƋÇƍÈƏÉ","ƑÊƓËƕÌƗÍƙÎƛÏ","ƝÐƟÑơÒƣÓƥÔƧÕ","ƩÖƫ×ƭØƯÙƱÚƳÛ","ƵÜƷƹÝƻÞƽß","2;3;--//))","$$bbC\\aa2;C\\aa","%%\fÂØÚøú Ⰲ、あ㆑","㌂㎁㐂䀁丂\ud801車ﬁ＂￲",'\v\f""\f\fࡘ',"","\t","\v\r","","","","","!","#%'",")+","-/","13","57","9;=","?A","CE","GI","KM","OQS","UW","Y[","]_","ac","egi","km","oq","su","wy","{}","","","","","","","","","¡£","¥§","©«","­¯","±³","µ·","¹»","½¿","ÁÃ","ÅÇ","ÉË","ÍÏ","ÑÓ","Õ×","ÙÛ","Ýß","áã","åç","éë","íï","ñó","õ÷","ùû","ýÿ","āă","ąć","ĉċ","čď","đē","ĕė","ęě","ĝğ","ġģ","ĥħ","ĩī","ĭį","ıĳ","ĵķ","ĹĻ","ĽĿ","ŁŃ","ŅŇ","ŉŋ","ōŏ","őœ","ŕŗ","řś","ŝş","šţ","ťŧ","ũū","ŭů","űų","ŵŷ","ŹŻ","Žſ","Ɓƃ","ƅƇ","ƉƋ","ƍƏ","ƑƓ","ƕƗ","ƙƛ","ƝƟ","ơƣ","ƥƧ","Ʃƫ","ƭƯ","ƱƳ","Ƶƹ","ƻƽ","ƿǁ","ǃ\tǅ","\vǇ\rǉ","ǋǍ","ǏǑ","ǓǕ","ǗǙ","ǜ!Ǟ","#ǡ%ǣ","'Ǧ)Ǫ","+Ǯ-Ǳ","/Ǵ1Ƿ","3Ǻ5Ǽ7Ǿ","9Ȁ;Ȃ","=Ⱦ?ɞ","AɠCɥ","EʖGʘ","IʛKʣMʬ","OʳQʻ","S˅Uˏ","W˖Y˜","[ˣ]˱","_˵a˸c˼","éġ","ỉǩ","m̐o̙","q̝s̢","u̧w̭y̱","{̵}̹","̀͇","͏͗","͛͠","ͤͩ","ͭͲ","ͷͽ","΂Έ","΍Γ","Ι¡Ο","£Ω¥α","§ι©ο","«τ­ψ","¯Ϗ±ϔ","³Ϡµϥ","·ϰ¹϶","»Ϻ½Ͻ","¿ЁÁЇ","ÃГÅЛ","ÇТÉШ","ËзÍй","ÏоÑф","ÓщÕѕ","×ћÙѠ","ÛѦÝѫ","ßѻáѽ","ãҁå҈","çҐéҕ","ëқíҟ","ïҦñұ","óҳõҸ","÷ӉùӋ","ûӑýӛ","ÿӥāӪ","ăӯąӳ","ćӹĉӾ","ċԄčԈ","ďԍđԔ","ēԛĕԣ","ėԫęԳ","ěԹĝՁ","ğՍġՕ","ģ՝ĥա","ħըĩլ","īյĭպ","įրıֆ","ĳ֑ĵ֝","ķ֥Ĺ֯","ĻַĽֿ","ĿׅŁ׍","ŃבŅח","Ňמŉפ","ŋ׫ōױ","ŏ׵ő׺","œ؃ŕ؋","ŗؕř؞","śاŝد","şعšك","ţىťَ","ŧٕũٟ","ū٩ŭٲ","ůٺűچ","ųڍŵڙ","ŷڦŹڮ","ŻڴŽڹ","ſہƁۜ","ƃ۬ƅۺ","ƇۼƉ܄","Ƌܐƍܖ","ƏܛƑܥ","Ɠܰƕܹ","Ɨ݇ƙݚ","ƛݦƝݰ","Ɵݵơނ","ƣޏƥޟ","ƧޡƩު","ƫ޴ƭ޼","Ư߅Ʊߐ","ƳߝƵ߹","Ʒ߻ƹ߾","ƻࠄƽࠒ","ƿǀ0ǀ","ǁǂ*ǂ","ǃǄ+Ǆ\b","ǅǆ.ǆ\n","Ǉǈ]ǈ\f","ǉǊ_Ǌ","ǋǌ#ǌ","Ǎǎ'ǎ","Ǐǐ,ǐ","Ǒǒ1ǒ","Ǔǔ-ǔ","Ǖǖ(ǖ","Ǘǘ@ǘ","Ǚǚ@ǚǛ?Ǜ","ǜǝ>ǝ"," Ǟǟ>ǟǠ",'?Ǡ"ǡǢ',"?Ǣ$ǣǤ?","Ǥǥ?ǥ&","Ǧǧ?ǧǨ?Ǩ","ǩ?ǩ(Ǫǫ","#ǫǬ?Ǭǭ","?ǭ*Ǯǯ#","ǯǰ?ǰ,","Ǳǲ>ǲǳ@ǳ",".Ǵǵ(ǵǶ","(Ƕ0ǷǸ","~Ǹǹ~ǹ2","ǺǻAǻ4","Ǽǽ<ǽ6Ǿ","ǿ}ǿ8Ȁȁ","ȁ:Ȃȃ","/ȃ<Ȅȋ","2ȅȇ0ȆȈ\t","ȇȆȈȉ","ȉȇȉȊ","ȊȌȋȅ","ȋȌȌȿ","ȍȑ\tȎȐ\t","ȏȎȐȓ","ȑȏȑȒ","ȒȚȓȑ","ȔȖ0ȕȗ\tȖ","ȕȗȘȘ","ȖȘșș","țȚȔȚ","țțȿȜ","ȣ2ȝȟ0ȞȠ","\tȟȞȠȡ","ȡȟȡȢ","ȢȤȣȝ","ȣȤȤȵ","ȥȩ\tȦȨ","\tȧȦȨȫ","ȩȧȩȪ","ȪȲȫȩ","ȬȮ0ȭȯ","\tȮȭȯȰ","ȰȮȰȱ","ȱȳȲȬ","Ȳȳȳȵ","ȴȜȴȥ","ȵȶȶȸ","Gȷȹ\tȸȷ","ȸȹȹȺ","Ⱥȼ\tȻȽ\t","ȼȻȼȽ","ȽȿȾȄ","ȾȍȾȴ","ȿ>ɀɆ)","ɁɅ\nɂɃ^","ɃɅ)ɄɁ","ɄɂɅɈ","ɆɄɆɇ","ɇɉɈɆ","ɉɟ)Ɋɐ$ɋ","ɏ\nɌɍ^ɍɏ","$ɎɋɎɌ","ɏɒɐɎ","ɐɑɑɓ","ɒɐɓɟ","$ɔɚbɕə\n","ɖɗ^ɗəb","ɘɕɘɖ","əɜɚɘ","ɚɛɛɝ","ɜɚɝɟb","ɞɀɞɊ","ɞɔɟ@","ɠɡPɡɢW","ɢɣNɣɤNɤ","BɥɦGɦɧ","TɧɨTɨɩ","QɩɪTɪD","ɫʗOɬɭM","ɭʗOɮɯFɯ","ʗOɰɱEɱʗ","OɲɳOɳʗ","OɴɵOɵʗ4","ɶɷMɷɸO","ɸʗ4ɹɺFɺ","ɻOɻʗ4ɼɽ","EɽɾOɾʗ","4ɿʀOʀʁO","ʁʗ4ʂʃO","ʃʗ5ʄʅMʅ","ʆOʆʗ5ʇʈ","FʈʉOʉʗ","5ʊʋEʋʌO","ʌʗ5ʍʎO","ʎʏOʏʗ5ʐ","ʗNʑʒOʒʗ","NʓʗIʔʕ","MʕʗIʖɫ","ʖɬʖɮ","ʖɰʖɲ","ʖɴʖɶ","ʖɹʖɼ","ʖɿʖʂ","ʖʄʖʇ","ʖʊʖʍ","ʖʐʖʑ","ʖʓʖʔ","ʗFʘʙK","ʙʚHʚH","ʛʜKʜʝHʝ","ʞGʞʟTʟʠ","TʠʡQʡʢ","TʢJʣʤK","ʤʥUʥʦP","ʦʧWʧʨOʨ","ʩDʩʪGʪʫ","TʫLʬʭ","KʭʮUʮʯV","ʯʰGʰʱZ","ʱʲVʲNʳ","ʴKʴʵUʵʶ","GʶʷTʷʸ","TʸʹQʹʺT","ʺPʻʼK","ʼʽUʽʾPʾ","ʿQʿˀPˀˁ","Vˁ˂G˂˃","Z˃˄V˄R","˅ˆKˆˇU","ˇˈNˈˉQˉ","ˊIˊˋKˋˌ","EˌˍCˍˎ","NˎTˏːK","ːˑUˑ˒G","˒˓X˓˔G˔","˕P˕V˖˗","K˗˘U˘˙","Q˙˚F˚˛F","˛X˜˝K","˝˞U˞˟P˟","ˠWˠˡNˡˢ","NˢZˣˤ","Kˤ˥U˥˦P","˦˧W˧˨N","˨˩N˩˪Q˪","˫T˫ˬGˬ˭","T˭ˮTˮ˯","Q˯˰T˰\\","˱˲C˲˳P","˳˴F˴^˵","˶Q˶˷T˷`","˸˹P˹˺","Q˺˻V˻b","˼˽V˽˾T","˾˿W˿̀G̀","d́̂H̂̃","C̃̄N̄̅","U̅̆G̆f","̇̈G̈h","̉̊R̊̋K̋","j̌̍C̍̎","D̎̏U̏l","̐̑S̑̒W","̒̓Q̓̔V","̔̕K̖̕G̖","̗P̗̘V̘n","̙̚O̛̚","Q̛̜F̜p","̝̞U̞̟K","̟̠I̡̠P̡","r̢̣U̣̤","S̤̥T̥̦","V̦t̧̨V","̨̩T̩̪W","̪̫P̫̬E̬","v̭̮K̮̯","P̯̰V̰x","̱̲I̲̳E","̴̳F̴z","̵̶N̶̷E̷","̸O̸|̹̺","E̺̻Q̻̼","O̼̽D̽̾K","̾̿P̿~","̀́R́͂G͂","̓T̓̈́O̈́ͅ","W͆ͅV͆","͇͈F͈͉","G͉͊I͊͋T","͋͌G͍͌G","͍͎U͎","͏͐T͐͑C͑","͒F͓͒K͓͔","C͔͕P͕͖","U͖͗͘","E͙͘Q͙͚U","͚͛͜E","͜͝Q͝͞U","͟͞J͟","͠͡U͢͡K͢","ͣPͣͤ","ͥUͥͦKͦͧ","PͧͨJͨ","ͩͪVͪͫ","CͫͬPͬ","ͭͮVͮͯC","ͯͰPͰͱJ","ͱͲͳC","ͳʹEʹ͵Q͵","ͶUͶͷ","͸C͸͹E͹ͺ","QͺͻUͻͼ","Jͼͽ;","C;ͿUͿ΀K","΀΁P΁","΂΃C΃΄U","΄΅K΅ΆPΆ","·J·Έ","ΉCΉΊVΊ΋","C΋ΌPΌ","΍ΎCΎΏ","VΏΐCΐΑP","ΑΒJΒ","ΓΔCΔΕV","ΕΖCΖΗPΗ","Θ4ΘΙ","ΚTΚΛQΛΜ","WΜΝPΝΞ","FΞ ΟΠ","TΠΡQΡ΢W","΢ΣPΣΤF","ΤΥFΥΦQΦ","ΧYΧΨPΨ¢","ΩΪTΪΫ","QΫάWάέ","PέήFήίW","ίΰRΰ¤","αβEβγG","γδKδεNε","ζKζηPηθ","Iθ¦ικ","HκλNλμ","QμνQνξT","ξ¨οπG","πρXρςG","ςσPσª","τυQυφFφ","χFχ¬ψ","ωOωϊTϊϋ","QϋόWόύ","PύώFώ®","ϏϐTϐϑC","ϑϒPϒϓF","ϓ°ϔϕT","ϕϖCϖϗPϗ","ϘFϘϙDϙϚ","GϚϛVϛϜ","YϜϝGϝϞG","ϞϟPϟ²","ϠϡHϡϢC","ϢϣEϣϤVϤ","´ϥϦHϦ","ϧCϧϨEϨϩ","VϩϪFϪϫ","QϫϬWϬϭD","ϭϮNϮϯG","ϯ¶ϰϱR","ϱϲQϲϳYϳ","ϴGϴϵTϵ¸","϶ϷGϷϸ","ZϸϹRϹº","ϺϻNϻϼ","Pϼ¼ϽϾ","NϾϿQϿЀI","Ѐ¾ЁЂN","ЂЃQЃЄI","ЄЅ3ЅІ2І","ÀЇЈOЈ","ЉWЉЊNЊЋ","VЋЌKЌЍ","PЍЎQЎЏO","ЏАKАБC","БВNВÂ","ГДRДЕTЕ","ЖQЖЗFЗИ","WИЙEЙК","VКÄЛМ","UМНSНОT","ОПVПРR","РСKСÆ","ТУUУФWФ","ХOХЦUЦЧ","SЧÈШЩ","CЩЪUЪЫ","EЫÊЬЭ","LЭЮKЮиU","ЯаYабK","бвFвгGг","дEдеJеж","CжиTзЬ","зЯиÌ","йкEкл","JлмCмнT","нÎопE","прNрсG","стCтуPу","ÐфхEх","цQцчFчш","GшÒщъ","EъыQыь","PьэEэюC","юяVяѐG","ѐёPёђCђ","ѓVѓєGєÔ","ѕіGії","ZїјCјљ","EљњVњÖ","ћќHќѝK","ѝўPўџF","џØѠѡH","ѡѢKѢѣZѣ","ѤGѤѥFѥÚ","ѦѧNѧѨ","GѨѩHѩѪ","VѪÜѫѬ","NѬѭGѭѮP","ѮÞѯѰN","ѰѱQѱѲY","ѲѳGѳѼTѴ","ѵVѵѶQѶѷ","NѷѸQѸѹ","YѹѺGѺѼT","ѻѯѻѴ","ѼàѽѾO","ѾѿKѿҀF","Ҁâҁ҂R","҂҃T҃҄Q҄","҅R҅҆G҆҇","T҇ä҈҉","T҉ҊGҊҋ","RҋҌNҌҍC","ҍҎEҎҏG","ҏæҐґT","ґҒGҒғRғ","ҔVҔèҕ","ҖTҖҗKҗҘ","IҘҙJҙҚ","VҚêқҜ","TҜҝOҝҞD","ҞìҟҠU","ҠҡGҡҢC","ҢңTңҤEҤ","ҥJҥîҦ","ҧUҧҨWҨҩ","DҩҪUҪҫ","VҫҬKҬҭV","ҭҮWҮүV","үҰGҰð","ұҲVҲò","ҳҴVҴҵGҵ","ҶZҶҷVҷô","ҸҹVҹҺ","TҺһKһҼ","OҼöҽҾ","WҾҿRҿӀR","ӀӁGӁӊT","ӂӃVӃӄQӄ","ӅWӅӆRӆӇ","RӇӈGӈӊ","TӉҽӉӂ","ӊøӋӌ","XӌӍCӍӎN","ӎӏWӏӐG","ӐúӑӒF","ӒӓCӓӔVӔ","ӕGӕӖXӖӗ","CӗӘNӘә","WәӚGӚü","ӛӜVӜӝK","ӝӞOӞӟG","ӟӠXӠӡCӡ","ӢNӢӣWӣӤ","GӤþӥӦ","FӦӧCӧӨ","VӨөGөĀ","ӪӫVӫӬK","ӬӭOӭӮG","ӮĂӯӰP","ӰӱQӱӲYӲ","ĄӳӴVӴ","ӵQӵӶFӶӷ","CӷӸ[ӸĆ","ӹӺ[Ӻӻ","GӻӼCӼӽT","ӽĈӾӿO","ӿԀQԀԁP","ԁԂVԂԃJԃ","ĊԄԅFԅ","ԆCԆԇ[ԇČ","ԈԉJԉԊ","QԊԋWԋԌ","TԌĎԍԎ","OԎԏKԏԐP","ԐԑWԑԒV","ԒԓGԓĐ","ԔԕUԕԖGԖ","ԗEԗԘQԘԙ","PԙԚFԚĒ","ԛԜYԜԝ","GԝԞGԞԟM","ԟԠFԠԡC","ԡԢ[ԢĔ","ԣԤFԤԥCԥ","ԦVԦԧGԧԨ","FԨԩKԩԪ","HԪĖԫԬ","FԬԭCԭԮ[","ԮԯUԯ԰5","԰Ա8ԱԲ2Բ","ĘԳԴGԴ","ԵFԵԶCԶԷ","VԷԸGԸĚ","ԹԺGԺԻ","QԻԼOԼԽQ","ԽԾPԾԿV","ԿՀJՀĜ","ՁՂPՂՃGՃ","ՄVՄՅYՅՆ","QՆՇTՇՈ","MՈՉFՉՊC","ՊՋ[ՋՌU","ՌĞՍՎY","ՎՏQՏՐTՐ","ՑMՑՒFՒՓ","CՓՔ[ՔĠ","ՕՖYՖ՗","G՗՘G՘ՙM","ՙ՚P՚՛W","՛՜O՜Ģ","՝՞O՞՟C՟","ՠZՠĤա","բOբգGգդ","FդեKեզ","CզէPէĦ","ըթOթժK","ժիPիĨ","լխSխծW","ծկCկհTհ","ձVձղKղճ","NճմGմĪ","յնOնշ","QշոFոչG","չĬպջN","ջռCռսT","սվIվտGտ","ĮրցUց","ւOւփCփք","NքօNօİ","ֆևRևֈ","Gֈ։T։֊E","֊֋G֋֌P","֌֍V֍֎K֎","֏N֏֐G֐Ĳ","֑֒R֒֓","G֓֔T֔֕","E֖֕G֖֗P","֗֘V֘֙T","֚֙C֛֚P֛","֜M֜Ĵ֝","֞C֞֟X֟֠","G֠֡T֢֡","C֢֣I֣֤G","֤Ķ֥֦C","֦֧X֧֨G","֨֩T֪֩C֪","֫I֫֬G֭֬","K֭֮H֮ĸ","ְ֯Iְֱ","GֱֲQֲֳO","ֳִGִֵC","ֵֶPֶĺ","ַָJָֹCֹ","ֺTֺֻOֻּ","GּֽCֽ־","P־ļֿ׀","E׀ׁQׁׂW","ׂ׃P׃ׄV","ׄľׅ׆E","׆ׇQׇ׈W׈","׉P׉׊V׊׋","K׋׌H׌ŀ","׍׎U׎׏","W׏אOאł","בגUגדW","דהOהוK","וזHזń","חטCטיXי","ךGךכFכל","GלםXםņ","מןUןנ","VנסFסעG","עףXףň","פץUץצV","צקFקרGר","שXשתRתŊ","׫׬F׬׭","G׭׮X׮ׯ","UׯװSװŌ","ױײXײ׳C","׳״T״Ŏ","׵׶X׶׷C","׷׸T׸׹R׹","Ő׺׻P׻","׼Q׼׽T׽׾","O׾׿F׿؀","K؀؁U؁؂V","؂Œ؃؄P","؄؅Q؅؆T","؆؇O؇؈K؈","؉P؉؊X؊Ŕ","؋،P،؍","Q؍؎T؎؏","O؏ؐUؐؑF","ؑؒKؒؓU","ؓؔVؔŖ","ؕؖPؖؗQؗ","ؘTؘؙOؙؚ","Uؚ؛K؛؜","P؜؝X؝Ř","؞؟D؟ؠG","ؠءVءآC","آأFأؤKؤ","إUإئVئŚ","ابDبة","GةتVتث","CثجKجحP","حخXخŜ","دذDذرK","رزPزسQس","شOشصFصض","KضطUطظ","VظŞعغ","GغػZػؼR","ؼؽQؽؾP","ؾؿFؿـKـ","فUفقVقŠ","كلHلم","FمنKنه","UهوVوŢ","ىيHيًK","ًٌPٌٍX","ٍŤَُH","ُِKِّUّ","ْJْٓGٓٔ","TٔŦٕٖ","HٖٗKٗ٘","U٘ٙJٙٚG","ٚٛTٜٛK","ٜٝPٝٞXٞ","Ũٟ٠I٠","١C١٢O٢٣","O٣٤C٤٥","F٥٦K٦٧U","٧٨V٨Ū","٩٪I٪٫C","٫٬O٬٭O٭","ٮCٮٯKٯٰ","PٰٱXٱŬ","ٲٳIٳٴ","CٴٵOٵٶO","ٶٷCٷٸN","ٸٹPٹŮ","ٺٻJٻټ[ټ","ٽRٽپIپٿ","GٿڀQڀځ","OځڂFڂڃK","ڃڄUڄڅV","څŰچڇN","ڇڈQڈډIډ","ڊKڊڋPڋڌ","XڌŲڍڎ","NڎڏQڏڐ","IڐڑPڑڒQ","ڒړTړڔO","ڔڕFڕږKږ","ڗUڗژVژŴ","ڙښPښڛ","GڛڜIڜڝ","DڝڞKڞڟP","ڟڠQڠڡO","ڡڢFڢڣKڣ","ڤUڤڥVڥŶ","ڦڧRڧڨ","QڨکKکڪ","UڪګUګڬQ","ڬڭPڭŸ","ڮگVگڰF","ڰڱKڱڲUڲ","ڳVڳźڴ","ڵVڵڶKڶڷ","PڷڸXڸż","ڹںYںڻ","GڻڼKڼڽD","ڽھWھڿN","ڿۀNۀž","ہۂTۂۃGۃ","ۄIۄۅGۅۆ","ZۆۇTۇۈ","GۈۉRۉۊC","ۊۋNۋیE","یۍGۍƀ","ێۏKۏېUې","ۑTۑےGےۓ","Iۓ۔G۔۝","ZەۖKۖۗU","ۗۘOۘۙC","ۙۚVۚۛEۛ","۝Jۜێۜ","ە۝Ƃ۞","۟V۟۠T۠ۡ","KۡۢOۣۢ","UۣۤVۤۥC","ۥۦTۦۭV","ۧۨNۨ۩V۩","۪T۪۫Kۭ۫","O۬۞۬ۧ","ۭƄۮۯ","Vۯ۰T۰۱","K۱۲O۲۳G","۳۴P۴ۻF","۵۶T۶۷V۷","۸T۸۹K۹ۻ","Oۺۮۺ۵","ۻƆۼ۽","K۽۾P۾ۿ","Fۿ܀G܀܁Z","܁܂Q܂܃H","܃ƈ܄܅N","܅܆C܆܇U܇","܈V܈܉K܉܊","P܊܋F܋܌","G܌܍Z܍܎Q","܎܏H܏Ɗ","ܐܑUܑܒR","ܒܓNܓܔKܔ","ܕVܕƌܖ","ܗLܗܘQܘܙ","KܙܚPܚƎ","ܛܜUܜܝ","WܝܞDܞܟU","ܟܠVܠܡT","ܡܢKܢܣPܣ","ܤIܤƐܥ","ܦUܦܧVܧܨ","CܨܩTܩܪ","VܪܫUܫܬY","ܬܭKܭܮV","ܮܯJܯƒ","ܱܰGܱܲPܲ","ܳFܴܳUܴܵ","YܵܶKܷܶ","VܷܸJܸƔ","ܹܺKܻܺU","ܻܼPܼܽW","ܾܽNܾܿNܿ","݀Q݀݁T݂݁","G݂݃O݄݃","R݄݅V݆݅[","݆Ɩ݈݇K","݈݉U݉݊P","݊݋W݋݌N݌","ݍNݍݎQݎݏ","TݏݐYݐݑ","JݑݒKݒݓV","ݓݔGݔݕU","ݕݖRݖݗCݗ","ݘEݘݙGݙƘ","ݚݛTݛݜ","GݜݝOݝݞ","QݞݟXݟݠG","ݠݡUݡݢV","ݢݣCݣݤTݤ","ݥVݥƚݦ","ݧTݧݨGݨݩ","OݩݪQݪݫ","XݫݬGݬݭG","ݭݮPݮݯF","ݯƜݰݱL","ݱݲUݲݳQݳ","ݴPݴƞݵ","ݶNݶݷQݷݸ","QݸݹMݹݺ","WݺݻRݻƠ","ݼݽKݽݾU","ݾݿKݿރP","ހށKށރPނ","ݼނހރ","ƢބޅJޅ","ކCކސUއވ","EވމQމފ","PފދVދތC","ތލKލގP","ގސUޏބ","ޏއސƤ","ޑޒRޒޓCޓ","ޔTޔޕCޕޠ","OޖޗRޗޘ","CޘޙTޙޚC","ޚޛOޛޜG","ޜޝVޝޞGޞ","ޠTޟޑޟ","ޖޠƦޡ","ޢCޢޣFޣޤ","Fޤޥ[ޥަ","GަާCާިT","ިީUީƨ","ުޫCޫެF","ެޭFޭޮOޮ","ޯQޯްPްޱ","Vޱ޲J޲޳","U޳ƪ޴޵","C޵޶F޶޷F","޷޸F޸޹C","޹޺[޺޻U޻","Ƭ޼޽C޽","޾F޾޿F޿߀","J߀߁Q߁߂","W߂߃T߃߄U","߄Ʈ߅߆C","߆߇F߇߈F","߈߉O߉ߊKߊ","ߋPߋߌWߌߍ","VߍߎGߎߏ","Uߏưߐߑ","CߑߒFߒߓF","ߓߔUߔߕG","ߕߖEߖߗQߗ","ߘPߘߙFߙߚ","UߚƲߛߞ","\t\bߜߞƷÜߝߛ","ߝߜߞߣ","ߟߢ\t\tߠߢƷ","Üߡߟߡߠ","ߢߥߣߡ","ߣߤߤƴ","ߥߣߦߨ%","ߧߩ\n\nߨߧ","ߩߪߪߨ","ߪ߫߫߬","߬ߺ%߭߰B","߮߱\t\b߯߱ƷÜ߰","߮߰߯߱","߶߲ߵ\t\t߳ߵ","ƷÜߴ߲ߴ߳","ߵ߸߶ߴ","߶߷߷ߺ","߸߶߹ߦ","߹߭ߺƶ","߻߼\t\v߼Ƹ","߽߿\t\f߾߽","߿ࠀࠀ߾","ࠀࠁࠁࠂ","ࠂࠃ\bÝࠃƺ","ࠄࠅ1ࠅࠆ",",ࠆࠊࠇࠉ\v","ࠈࠇࠉࠌ","ࠊࠋࠊࠈ","ࠋࠍࠌࠊ","ࠍࠎ,ࠎࠏ","1ࠏࠐࠐࠑ\bÞ","ࠑƼࠒࠓ1","ࠓࠔ1ࠔ࠘","ࠕࠗ\n\rࠖࠕ","ࠗࠚ࠘ࠖ","࠘࠙࠙ࠛ","ࠚ࠘ࠛࠜ\bß","ࠜƾ-ȉȋȑ","ȘȚȡȣȩȰȲȴȸȼȾɄ","ɆɎɐɘɚɞʖзѻӉۜ۬","ۺނޏޟߝߡߣߪ߰ߴ߶߹","ࠀࠊ࠘\b"].join("");const atn=(new antlr4.atn.ATNDeserializer).deserialize(serializedATN);const decisionsToDFA=atn.decisionToState.map((ds,index)=>new antlr4.dfa.DFA(ds,index));class mathLexer extends antlr4.Lexer{constructor(input){super(input);this._interp=new antlr4.atn.LexerATNSimulator(this,atn,decisionsToDFA,new antlr4.PredictionContextCache)}get atn(){return atn}}exports.mathLexer=mathLexer},{"./index":40}],43:[function(require,module,exports){antlr4=require("./index");const serializedATN=["悋Ꜫ脳맭䅼㯧瞆","奤ßࠌ\t\t","\t\t\t\t","","",""," \n","","","3\n","","","","","R\n","[","\n","d\n","","m\n\fp\v","y","\n\f|\v","","\n","\n","\n","\n","","","","","","","","Ç\n\rÈ","","Ò\n\rÓ","","","","","","","","","","","","","","","","","ĸ\n","","","","ŏ\n","Ř\n","","","","","","","","","","","Ɨ\n","","ƥ\n","\fƨ\v","Ʊ","\n\fƴ\v","","ǂ\n","\fǅ\v","","","","","","ǧ\n\fǪ\v","","","Ǽ\n","","ȇ\n","ȉ\n","Ȓ\n","","","","","","ȷ","\n","","ɇ\n","","","ɗ\n","","ɤ\n","","","","","","","","","ʚ\n","ʜ\nʞ\n","","ʩ\n","","","","","","","","˖\n","","","˪\n","","","","̃\n","","̎\n","","̗\n","̠\n","\r̡","̫\n","\r̬","̶\n","\r̷","","͈","\n\f͋\v","","","","","","Ͱ\n\f","ͳ\v","",";\n","·\n\f","Ί\v","Γ\n","\fΖ\v","Ο","\n\f΢\v","","Ϋ\n\fή\v","","η\n\fκ\v","","υ\n","","ώ\n\fϑ\v","","Ϛ\n\fϝ\v","","Ϧ\n\fϩ\v","","ϲ\n\fϵ\v","","Ͼ\n\fЁ","\v","Њ\n\f","Ѝ\v","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ө\n","","Ӳ\n","","ӿ\n","ԁ\n","","Ԏ\nԐ\n","","","Ԡ\n\rԡ","","ԭ\n","","Ը\n","","Ճ\n","","","","՘\n՚\n","","ե\nէ\n","","","շ\n","վ\n","","ֆ\n","","","","","","","","ָ\n\fֻ","\v־\n\f","ׁ\v","","א\n","ה\n","","","","","","","","","","ؑ\n","","ؙ\n","ء\n","","","","","","","ى\n\fٌ\v","َ\n","","","ٟ\n","٨\n","","","","","","ڌ\n","","","ڜ\n","","","ګ\n","","ڸ\n","","","","","","","","ۦ\n","ۭ\n","۴\n","ۻ\n","","܂\n","܉\n","","","","ܠ\n","ܨ\n","","ܴ\n","ܶ\n","","݃\n݅\n","","","ݗ\n","\fݚ\v","","ݥ\n","","ݰ\n","","ݻ\n","","","ސ\n","","ޛ\n","","","","","","","","","","","","","","","ߴ\n\f","߷\vߺ\n","","ࠃ\nࠆ\n","","\b\b\n\f\n\n\f\r","","0011$$zz",'"Ûॾד',"߹\b߽","\nࠅ\fࠉ","","\b","","ה","\tה","È%","",""," ","  !",'!""ה#$',"'$%%&","&''ה()","()**++,",",ה-.)",".//201","132023","3445","5ה67*78","899::ה",";<+<==>",">??ה","@A,ABBC","CDDה","EF-FGGH","HIIה","JK&KLLM","MNNQOP","PRQOQR","RSST","TהUV.VW","WZXYY[","ZXZ[[\\","\\]]ה","^_/_``c","abbd","cacdde","effהgh","0hiinjk","kmlj","mpnlno","oqpnqr","rהst1","tuuzvw","wyxvy|","zxz{{}","|z}~","~ה2","","ה","3","","ה","4","","ה","5","","ה","6","","ה","7","","ה8","  ","¡¡¢¢","££¤¤","ה¥¦9¦","§§¨¨","©©ªª","««¬¬","ה­®:®","¯¯°°","±±ה²","³;³´´","µµ¶¶","ה·¸<¸","¹¹ºº","»»ה¼","½=½¾¾","¿¿ÀÀ","הÁÂ>Â","ÃÃÆÄ","ÅÅÇÆ","ÄÇÈÈ","ÆÈÉÉ","ÊÊËË","הÌÍ?Í","ÎÎÑÏ","ÐÐÒÑ","ÏÒÓÓ","ÑÓÔÔ","ÕÕÖÖ","ה×Ø@Ø","ÙÙÚÚ","ÛÛÜÜ","ÝÝהÞ","ßAßàà","ááââ","ããää","הåæBæ","ççèè","ééהê","ëCëìì","ííîî","הïðDð","ññòò","óóהô","õEõöö","÷÷øø","הùúFú","ûûüü","ýýהþ","ÿGÿĀĀ","āāĂĂ","הăĄHĄ","ąąĆĆ","ććהĈ","ĉIĉĊĊ","ċċČČ","הčĎJĎ","ďďĐĐ","đđהĒ","ēKēĔĔ","ĕĕĖĖ","הėĘLĘ","ęęĚĚ","ěěהĜ","ĝMĝĞĞ","ğğĠĠ","הġĢNĢ","ģģĤĤ","ĥĥהĦ","ħOħĨĨ","ĩĩĪĪ","הīĬPĬ","ĭĭĮĮ","įįİİ","ııהĲ","ĳQĳĴĴ","ķĵĶĶ","ĸķĵķ","ĸĸĹĹ","ĺĺהĻ","ļRļĽĽ","ľľĿĿ","ŀŀŁŁ","הłŃSŃ","ńńŅŅ","ņņŇŇ","ňňהŉ","ŊTŊŋŋ","ŎŌōō","ŏŎŌŎ","ŏŏŐŐ","őőהŒ","œUœŔŔ","ŗŕŖŖ","Řŗŕŗ","ŘŘřř","ŚŚהś","ŜVŜŝŝ","ŞŞşş","הŠšWš","ŢŢţţ","ŤŤהť","ŦXŦŧŧ","ŨŨũũ","ŪŪūū","הŬŭYŭ","ŮŮהů","ŰZŰűű","ŲŲųų","ŴŴŵŵ","הŶŷ[ŷ","ŸŸŹŹ","źźהŻ","ż\\żŽŽ","žžſſ","הƀƁ]Ɓ","ƂƂƃƃ","ƄƄƅƅ","ƆƆהƇ","ƈ^ƈƉƉ","ƊƊƋƋ","הƌƍ_ƍ","ƎƎƏƏ","ƐƐהƑ","ƒ`ƒƓƓ","ƖƔƕƕ","ƗƖƔƖ","ƗƗƘƘ","ƙƙהƚ","ƛaƛƜƜ","ƝƝƞƞ","הƟƠbƠ","ơơƦƢ","ƣƣƥƤ","ƢƥƨƦ","ƤƦƧƧ","ƩƨƦƩ","ƪƪהƫ","ƬcƬƭƭ","ƲƮƯƯ","ƱưƮƱ","ƴƲưƲ","ƳƳƵƴ","ƲƵƶƶ","הƷƸdƸ","ƹƹƺƺ","ƻƻהƼ","ƽeƽƾƾ","ǃƿǀǀ","ǂǁƿǂ","ǅǃǁǃ","ǄǄǆǅ","ǃǆǇǇ","הǈǉfǉ","ǊǊǋǋ","ǌǌהǍ","ǎgǎǏǏ","ǐǐǑǑ","הǒǓhǓ","ǔǔǕǕ","ǖǖהǗ","ǘiǘǙǙ","ǚǚǛǛ","הǜǝjǝ","ǞǞǟǟ","ǠǠהǡ","ǢkǢǣǣ","ǨǤǥǥ","ǧǦǤǧ","ǪǨǦǨ","ǩǩǫǪ","ǨǫǬǬ","הǭǮlǮ","ǯǯǰǰ","ǱǱǲǲ","ǳǳהǴ","ǵmǵǶǶ","ǷǷǸǸ","ǻǹǺǺ","Ǽǻǹǻ","ǼǼǽǽ","ǾǾהǿ","ȀnȀȁȁ","ȈȂȃȃ","ȆȄȅȅ","ȇȆȄȆ","ȇȇȉȈ","ȂȈȉȉ","ȊȊȋȋ","הȌȍoȍ","ȎȎȑȏ","ȐȐȒȑ","ȏȑȒȒ","ȓȓȔȔ","הȕȖpȖ","ȗȗȘȘ","șșהȚ","țqțȜȜ","ȝȝȞȞ","הȟȠrȠ","ȡȡȢȢ","ȣȣȤȤ","ȥȥȦȦ","ȧȧהȨ","ȩsȩȪȪ","ȫȫȬȬ","הȭȮtȮ","ȯȯȰȰ","ȱȱȲȲ","ȳȳȶȴ","ȵȵȷȶ","ȴȶȷȷ","ȸȸȹȹ","הȺȻuȻ","ȼȼȽȽ","ȾȾȿȿ","ɀɀהɁ","ɂvɂɃɃ","ɆɄɅɅ","ɇɆɄɆ","ɇɇɈɈ","ɉɉהɊ","ɋwɋɌɌ","ɍɍɎɎ","הɏɐxɐ","ɑɑɒɒ","ɓɓɖɔ","ɕɕɗɖ","ɔɖɗɗ","ɘɘəə","הɚɛyɛ","ɜɜɝɝ","ɞɞɟɟ","ɠɠɣɡ","ɢɢɤɣ","ɡɣɤɤ","ɥɥɦɦ","הɧɨzɨ","ɩɩɪɪ","ɫɫהɬ","ɭ{ɭɮɮ","ɯɯɰɰ","ɱɱɲɲ","הɳɴ|ɴ","ɵɵɶɶ","ɷɷהɸ","ɹ}ɹɺɺ","ɻɻɼɼ","הɽɾ~ɾ","ɿɿʀʀ","ʁʁהʂ","ʃʃʄʄ","ʅʅʆʆ","הʇʈʈ","ʉʉʊʊ","ʋʋהʌ","ʍʍʎʎ","ʏʏʐʐ","ʑʑʒʒ","ʝʓʔʔ","ʛʕʖʖ","ʙʗʘʘ","ʚʙʗʙ","ʚʚʜʛ","ʕʛʜʜ","ʞʝʓʝ","ʞʞʟʟ","ʠʠהʡ","ʢʢʣʣ","ʤʤʥʥ","ʨʦʧʧ","ʩʨʦʨ","ʩʩʪʪ","ʫʫהʬ","ʭʭʮʮ","הʯʰʰ","ʱʱהʲ","ʳʳʴʴ","ʵʵʶʶ","הʷʸʸ","ʹʹʺʺ","ʻʻהʼ","ʽʽʾʾ","ʿʿˀˀ","הˁ˂˂","˃˃˄˄","˅˅הˆ","ˇˇˈˈ","ˉˉˊˊ","הˋˌˌ","ˍˍˎˎ","ˏˏהː","ˑˑ˒˒","˕˓˔˔","˖˕˓˕","˖˖˗˗","˘˘ה˙","˚˚˛˛","˜˜˝˝","˞˞˟˟","ˠˠˡˡ","הˢˣˣ","ˤˤ˥˥","˦˦˩˧","˨˨˪˩","˧˩˪˪","˫˫ˬˬ","ה˭ˮˮ","˯˯˰˰","˱˱˲˲","˳˳ה˴","˵˵˶˶","˷˷˸˸","˹˹˺˺","ה˻˼˼","˽˽˾˾","˿˿̂̀","́́̃̂","̀̂̃̃","̄̄̅̅","ה̆̇̇","̈̈̉̉","̊̊̍̋","̌̌̎̍","̋̍̎̎","̏̏̐̐","ה̑̒̒","̓̖̓̔","̕̗̕̖","̔̖̗̗","̘̘̙̙","ה̛̚̛","̜̜̟̝","̞̞̠̟","̝̡̠̡","̟̡̢̢","̣̣̤̤","ה̥̦̦","̧̧̪̨","̩̩̫̪","̨̫̬̬","̪̬̭̭","̮̮̯̯","ה̰̱̱","̲̵̲̳","̴̴̶̵","̳̶̷̷","̵̷̸̸","̹̹̺̺","ה̻̼̼","̽̽̾̾","̿̿̀̀","́́ה͂","̓̓̈́̈́","͉͆ͅ͆","͈͇ͅ͈","͋͉͇͉","͊͊͌͋","͉͍͌͍","ה͎͏͏","͐͐͑͑","͒͓͒͓","͔͔ה͕","͖͖͗͗","͘͙͘͙","͚͚͛͛","ה͜͝͝","͞͟͞͟","͠͠͡͡","͢͢הͣ","ͤͤͥͥ","ͦͦͧͧ","ͨͨͩͩ","הͪͫͫ","ͬͬͱͭ","ͮͮͰͯ","ͭͰͳͱ","ͯͱͲͲ","ʹͳͱʹ","͵͵הͶ","ͷͷ͸͸","͹͹ͺͺ","ͽͻͼͼ",";ͽͻͽ",";;ͿͿ","΀΀ה΁","΂΂΃΃","Έ΄΅΅","·Ά΄·","ΊΈΆΈ","ΉΉ΋Ί","Έ΋ΌΌ","ה΍ΎΎ","ΏΏΔΐ","ΑΑΓΒ","ΐΓΖΔ","ΒΔΕΕ","ΗΖΔΗ","ΘΘהΙ","Κ ΚΛΛ","ΠΜΝΝ","ΟΞΜΟ","΢ΠΞΠ","ΡΡΣ΢","ΠΣΤΤ","הΥΦ¡Φ","ΧΧάΨ","ΩΩΫΪ","ΨΫήά","Ϊάέέ","ίήάί","ΰΰהα","β¢βγγ","θδεε","ηζδη","κθζθ","ιιλκ","θλμμ","הνξ£ξ","οοππ","ρρτς","σσυτ","ςτυυ","φφχχ","הψω¤ω","ϊϊϏϋ","όόώύ","ϋώϑϏ","ύϏϐϐ","ϒϑϏϒ","ϓϓהϔ","ϕ¥ϕϖϖ","ϛϗϘϘ","ϚϙϗϚ","ϝϛϙϛ","ϜϜϞϝ","ϛϞϟϟ","הϠϡ¦ϡ","ϢϢϧϣ","ϤϤϦϥ","ϣϦϩϧ","ϥϧϨϨ","ϪϩϧϪ","ϫϫהϬ","ϭ§ϭϮϮ","ϳϯϰϰ","ϲϱϯϲ","ϵϳϱϳ","ϴϴ϶ϵ","ϳ϶ϷϷ","הϸϹ¨Ϲ","ϺϺϿϻ","ϼϼϾϽ","ϻϾЁϿ","ϽϿЀЀ","ЂЁϿЂ","ЃЃהЄ","Ѕ©ЅІІ","ЋЇЈЈ","ЊЉЇЊ","ЍЋЉЋ","ЌЌЎЍ","ЋЎЏЏ","הАБªБ","ВВГГ","ДДЕЕ","ЖЖЗЗ","ИИЙЙ","ККהЛ","М«МНН","ООПП","РРСС","ТТУУ","הФХ¬Х","ЦЦЧЧ","ШШהЩ","Ъ­ЪЫЫ","ЬЬЭЭ","הЮЯ®Я","аабб","ввгг","ддее","жжהз","и¯ийй","кклл","ммнн","оопп","הрс°с","ттуу","ффхх","ццчч","шшщщ","ъъהы","ь±ьээ","ююяя","ѐѐёё","ђђѓѓ","הєѕ²ѕ","ііїї","јјљљ","њњћћ","ќќהѝ","ў³ўџџ","ѠѠѡѡ","ѢѢѣѣ","ѤѤѥѥ","הѦѧ´ѧ","ѨѨѩѩ","ѪѪהѫ","ѬµѬѭѭ","ѮѮѯѯ","הѰѱ¶ѱ","ѲѲѳѳ","ѴѴѵѵ","ѶѶѷѷ","ѸѸѹѹ","ѺѺהѻ","Ѽ·Ѽѽѽ","ѾѾѿѿ","ҀҀҁҁ","҂҂҃҃","ה҄҅¸҅","҆҆҇҇","҈҈ה҉","Ҋ¹Ҋҋҋ","ҌҌҍҍ","ҎҎҏҏ","ҐҐґґ","ҒҒғғ","הҔҕºҕ","ҖҖҗҗ","ҘҘҙҙ","ҚҚққ","ҜҜהҝ","Ҟ»Ҟҟҟ","ҠҠҡҡ","ҢҢңң","ҤҤҥҥ","הҦҧ¼ҧ","ҨҨҩҩ","ҪҪҫҫ","ҬҬҭҭ","ҮҮהү","Ұ½Ұұұ","ҲҲҳҳ","ҴҴҵҵ","ҶҶҷҷ","הҸҹ¾ҹ","ҺҺһһ","ҼҼҽҽ","ҾҾҿҿ","ӀӀהӁ","ӂ¿ӂӃӃ","ӄӄӅӅ","ӆӆӇӇ","הӈӉÀӉ","ӊӊӋӋ","ӌӌӍӍ","ӎӎӏӏ","ӐӐӑӑ","ӒӒהӓ","ӔÁӔӕӕ","ӖӖӗӗ","ӘӘәә","ӚӚӛӛ","הӜӝÂӝ","ӞӞӟӟ","ӠӠӡӡ","ӢӢהӣ","ӤÃӤӥӥ","ӨӦӧӧ","өӨӦӨ","өөӪӪ","ӫӫהӬ","ӭÄӭӮӮ","ӱӯӰӰ","Ӳӱӯӱ","ӲӲӳӳ","ӴӴהӵ","ӶÅӶӷӷ","ӸӸӹӹ","ԀӺӻӻ","ӾӼӽӽ","ӿӾӼӾ","ӿӿԁԀ","ӺԀԁԁ","ԂԂԃԃ","הԄԅÆԅ","ԆԆԇԇ","ԈԈԏԉ","ԊԊԍԋ","ԌԌԎԍ","ԋԍԎԎ","Ԑԏԉԏ","ԐԐԑԑ","ԒԒהԓ","ԔÇԔԕԕ","ԖԖԗԗ","ԘԘԙԙ","הԚԛÈԛ","ԜԜԟԝ","ԞԞԠԟ","ԝԠԡԡ","ԟԡԢԢ","ԣԣԤԤ","הԥԦÉԦ","ԧԧԨԨ","ԩԩԬԪ","ԫԫԭԬ","ԪԬԭԭ","ԮԮԯԯ","ה԰ԱÊԱ","ԲԲԳԳ","ԴԴԷԵ","ԶԶԸԷ","ԵԷԸԸ","ԹԹԺԺ","הԻԼËԼ","ԽԽԾԾ","ԿԿՂՀ","ՁՁՃՂ","ՀՂՃՃ","ՄՄՅՅ","הՆՇÌՇ","ՈՈՉՉ","ՊՊהՋ","ՌÍՌՍՍ","ՎՎՏՏ","הՐՑÎՑ","ՒՒՙՓ","ՔՔ՗Օ","ՖՖ՘՗","Օ՗՘՘","՚ՙՓՙ","՚՚՛՛","՜՜ה՝","՞Ï՞՟՟","զՠաա","դբգգ","եդբդ","եեէզ","ՠզէէ","ըըթթ","הժիÐի","լլխխ","ծծהկ","հÑհձձ","ղղճճ","նմյյ","շնմն","շշոո","չչהպ","ջ#ջսռ","վսռս","վվտտ","הրցÔց","ււօփ","քքֆօ","փօֆֆ","ևևֈֈ","ה։֊Õ֊","֋֋֌֌","֍֍֎֎","֏֏ה֐","֑Ö֑֒֒","֓֓֔֔","֕֖֕֖","ה֗֘×֘","֙֚֙֚","֛֛֜֜","֝֝ה֞","֟Ø֟֠֠","֡֢֡֢","֣֣֤֤","ה֥֦Ù֦","֧֧֨֨","֩֪֩֪","֫֫ה֬","֭Ú֭֮֮","֯ְ֯ְ","ֱֱֲֲ","הֳִִ","ֹ\nֵֶֶ","ָ\nֵַָ","ֻַֹֹ","ֺֺֿֻ","ֹּ־ֽ","ּ־ׁֿ","ֽֿ׀׀","ׂֿׁׂ","׃׃הׄ","ׅׅ׆Û׆","ה\bׇ׈׈","׉׉׊\b׊","ה׋הÛ׌","הÜ׍׏׎","א\b׏׎׏","אאהב",'ה!גה"ד',"דד","ד#ד(","ד-ד6","ד;ד@","דEדJ","דUד^ד","gדsד","דד","דד","דד","ד¥ד­","ד²ד·","ד¼דÁ","דÌד×","דÞדå","דêדï","דôדù","דþדă","דĈדč","דĒדė","דĜדġ","דĦדī","דĲדĻ","דłדŉ","דŒדś","דŠדť","דŬדů","דŶדŻ","דƀדƇ","דƌדƑ","דƚדƟ","דƫדƷ","דƼדǈ","דǍדǒ","דǗדǜ","דǡדǭ","דǴדǿ","דȌדȕ","דȚדȟ","דȨדȭ","דȺדɁ","דɊדɏ","דɚדɧ","דɬדɳ","דɸדɽ","דʂדʇ","דʌדʡ","דʬדʯ","דʲדʷ","דʼדˁ","דˆדˋ","דːד˙","דˢד˭","ד˴ד˻","ד̆ד̑","ד̚ד̥","ד̰ד̻","ד͂ד͎","ד͕ד͜","דͣדͪ","דͶד΁","ד΍דΙ","דΥדα","דνדψ","דϔדϠ","דϬדϸ","דЄדА","דЛדФ","דЩדЮ","דзדр","דыדє","דѝדѦ","דѫדѰ","דѻד҄","ד҉דҔ","דҝדҦ","דүדҸ","דӁדӈ","דӓדӜ","דӣדӬ","דӵדԄ","דԓדԚ","דԥד԰","דԻדՆ","דՋדՐ","ד՝דժ","דկדպ","דրד։","ד֐ד֗","ד֞ד֥","ד֬דֳ","דׄדׇ","ד׋ד׌","ד׍דב","דגהߵ","וז\fÆזח","\tחߴÇטי","\fÅיך\tךߴ","Æכל\fÄלם\t","םߴÅמן\fÃ","ןנ\tנߴ","Äסע\fÂעף\t","ףߴÃפץ\fÁ","ץצ\tצߴ","Âקר\fÀרש","שתת׫","׫׬Á׬ߴ","׭׮\fď׮ׯ","ׯװ'װױ","ױߴײ׳\fĎ","׳״״׵(","׵׶׶ߴ","׷׸\fč׸׹","׹׺*׺׻","׻ߴ׼׽\fČ","׽׾׾׿+","׿؀؀ߴ","؁؂\fċ؂؃","؃؄,؄؅","؅ߴ؆؇\fĊ","؇؈؈؉-","؉؊؊ߴ","؋،\fĉ،؍","؍؎)؎ؐ","؏ؑؐ؏","ؐؑؑؒ","ؒߴؓؔ\fĈ","ؔؕؕؖ.","ؘؖؙؗ","ؘؗؘؙ","ؙؚؚߴ","؛؜\fć؜؝","؝؞/؞ؠ","؟ءؠ؟","ؠءءآ","آߴأؤ\fĆ","ؤإإئ=","ئااߴ","بة\fąةت","تثfثج","جߴحخ\fĄ","خددذg","ذررߴ","زس\făسش","شصhصض","ضߴطظ\fĂ","ظععغi","غػػߴ","ؼؽ\fāؽؾ","ؾؿjؿـ","ـߴفق\fĀ","قككلk","لٍمي","نههى","ونىٌ","يويً","ًَٌي","ٍمٍَ","َُُߴ","ِّ\fÿّْ","ْٓlٓٔ","ٕٔٕٖ","ٖߴٗ٘\fþ","٘ٙٙٚm","ٚٛٛٞ","ٜٝٟٝ","ٜٞٟٞ","ٟ٠٠١","١ߴ٢٣\fý","٣٤٤٥o","٥٧٦٨","٧٦٧٨","٨٩٩ߴ","٪٫\fü٫٬","٬٭p٭ٮ","ٮߴٯٰ\fû","ٰٱٱٲq","ٲٳٳߴ","ٴٵ\fúٵٶ","ٶٷrٷٸ","ٸٹٹٺ","ٺٻٻټ","ټߴٽپ\fù","پٿٿڀs","ڀځځߴ","ڂڃ\føڃڄ","ڄڅtڅچ","چڇڇڈ","ڈڋډڊ","ڊڌڋډ","ڋڌڌڍ","ڍڎڎߴ","ڏڐ\f÷ڐڑ","ڑڒuڒړ","ړڔڔڕ","ڕߴږڗ\fö","ڗژژڙv","ڙڛښڜ","ڛښڛڜ","ڜڝڝߴ","ڞڟ\fõڟڠ","ڠڡwڡڢ","ڢߴڣڤ\fô","ڤڥڥڦx","ڦڧڧڪ","ڨککګ","ڪڨڪګ","ګڬڬڭ","ڭߴڮگ\fó","گڰڰڱy","ڱڲڲڳ","ڳڴڴڷ","ڵڶڶڸ","ڷڵڷڸ","ڸڹڹں","ںߴڻڼ\fò","ڼڽڽھz","ھڿڿߴ","ۀہ\fñہۂ","ۂۃ{ۃۄ","ۄۅۅۆ","ۆߴۇۈ\fð","ۈۉۉۊ|","ۊۋۋߴ","یۍ\fïۍێ","ێۏ}ۏې","ېߴۑے\fî","ےۓۓ۔~","۔ەەߴ","ۖۗ\fíۗۘ","ۘۙۙۚ","ۚߴۛۜ\fì","ۜ۝۝۞","۞۟۟ߴ","۠ۡ\fëۡۢ","ۢۥۣۤ","ۤۦۥۣ","ۥۦۦߴ","ۧۨ\fêۨ۩","۩۬۪۫","ۭ۫۪۬","ۭ۬ۭߴ","ۮۯ\féۯ۰","۰۳۱۲","۲۴۳۱","۳۴۴ߴ","۵۶\fè۶۷","۷ۺ۸۹","۹ۻۺ۸","ۺۻۻߴ","ۼ۽\fç۽۾","۾܁ۿ܀","܀܂܁ۿ","܁܂܂ߴ","܃܄\fæ܄܅","܅܈܆܇","܇܉܈܆","܈܉܉ߴ","܊܋\få܋܌","܌܍Á܍܎","܎܏܏ܐ","ܐܑܑܒ","ܒߴܓܔ\fä","ܔܕܕܖÂ","ܖܗܗܘ","ܘܙܙߴ","ܚܛ\fãܛܜ","ܜܝÃܝܟ","ܞܠܟܞ","ܟܠܠܡ","ܡߴܢܣ\fâ","ܣܤܤܥÄ","ܥܧܦܨ","ܧܦܧܨ","ܨܩܩߴ","ܪܫ\fáܫܬ","ܬܭÅܭܮ","ܮܵܯܰ","ܰܳܱܲ","ܴܲܱܳ","ܴܳܴܶ","ܵܯܵܶ","ܷܶܷܸ","ܸߴܹܺ\fà","ܻܺܻܼÆ","ܼܽ݄ܽ","ܾܿ݂ܿ","݀݁݁݃","݂݀݂݃","݃݅݄ܾ","݄݅݆݅","݆݇݇ߴ","݈݉\fß݉݊","݊݋Ç݋݌","݌ݍݍݎ","ݎߴݏݐ\fÞ","ݐݑݑݒÈ","ݒݓݓݘ","ݔݕݕݗ","ݖݔݗݚ","ݘݖݘݙ","ݙݛݚݘ","ݛݜݜߴ","ݝݞ\fÝݞݟ","ݟݠÉݠݡ","ݡݤݢݣ","ݣݥݤݢ","ݤݥݥݦ","ݦݧݧߴ","ݨݩ\fÜݩݪ","ݪݫÊݫݬ","ݬݯݭݮ","ݮݰݯݭ","ݯݰݰݱ","ݱݲݲߴ","ݳݴ\fÛݴݵ","ݵݶËݶݷ","ݷݺݸݹ","ݹݻݺݸ","ݺݻݻݼ","ݼݽݽߴ","ݾݿ\fÚݿހ","ހށÌށނ","ނߴރބ\fÙ","ބޅޅކÍ","ކއއߴ","ވމ\fØމފ","ފދÎދތ","ތޏލގ","ގސޏލ","ޏސސޑ","ޑޒޒߴ","ޓޔ\f×ޔޕ","ޕޖÏޖޗ","ޗޚޘޙ","ޙޛޚޘ","ޚޛޛޜ","ޜޝޝߴ","ޞޟ\fÖޟޠ","ޠޡÐޡޢ","ޢߴޣޤ\fÕ","ޤޥޥަÑ","ަާާި","ިީީު","ުޫޫߴ","ެޭ\fÔޭޮ","ޮޯÕޯް","ްޱޱ޲","޲ߴ޳޴\fÓ","޴޵޵޶Ö","޶޷޷޸","޸޹޹ߴ","޺޻\fÒ޻޼","޼޽×޽޾","޾޿޿߀","߀ߴ߁߂\fÑ","߂߃߃߄Ø","߄߅߅߆","߆߇߇ߴ","߈߉\fÐ߉ߊ","ߊߋÙߋߌ","ߌߍߍߎ","ߎߴߏߐ\fÏ","ߐߑߑߒÚ","ߒߓߓߔ","ߔߕߕߴ","ߖߗ\fÎߗߘ","ߘߙÒߙߚ","ߚߛߛߜ","ߜߴߝߞ\fÍ","ߞߟߟߠÓ","ߠߡߡߢ","ߢߣߣߴ","ߤߥ\fÌߥߦ","ߦߧߧߨ\b","ߨߴߩߪ\fË","ߪ߫߫߬\f","߬߭\b߭ߴ","߮߯\fÊ߯߰","߰ߴ\f߲߱\fÇ","߲ߴ\n߳ו","߳ט߳כ","߳מ߳ס","߳פ߳ק","߳׭߳ײ","߳׷߳׼","߳؁߳؆","߳؋߳ؓ","߳؛߳أ","߳ب߳ح","߳ز߳ط","߳ؼ߳ف","ِ߳߳ٗ","߳٢߳٪","߳ٯ߳ٴ","߳ٽ߳ڂ","߳ڏ߳ږ","߳ڞ߳ڣ","߳ڮ߳ڻ","߳ۀ߳ۇ","߳ی߳ۑ","߳ۖ߳ۛ","߳۠߳ۧ","߳ۮ߳۵","߳ۼ߳܃","߳܊߳ܓ","߳ܚ߳ܢ","߳ܪܹ߳","݈߳߳ݏ","߳ݝ߳ݨ","߳ݳ߳ݾ","߳ރ߳ވ","߳ޓ߳ޞ","߳ޣ߳ެ","߳޳߳޺","߳߁߳߈","߳ߏ߳ߖ","߳ߝ߳ߤ","߳ߩ߳߮","߳߱ߴ߷","ߵ߳ߵ߶","߶߷ߵ","߸ߺ߹߸","߹ߺߺ߻","߻߼ ߼","߽߾\t\b߾\t߿ࠃ"," ࠀࠃ!ࠁࠃ","\fࠂ߿ࠂࠀ","ࠂࠁࠃࠄ","ࠄࠆࠅࠂ","ࠅࠆࠆࠇ","ࠇࠈࠈ\v","ࠉࠊ\t\tࠊ\r","q2QZcnzÈÓķŎ","ŗƖƦƲǃǨǻȆȈȑȶɆ","ɖɣʙʛʝʨ˕˩̡̖̂̍","̷̬͉ͱͽΈΔΠάθτϏ","ϛϧϳϿЋӨӱӾԀԍԏԡ","ԬԷՂ՗ՙդզնսօֹֿ","׏דؘؐؠيٍٞ٧ڋڛڪ","ڷۥ۬۳ۺ܁܈ܟܧ݂ܳܵ","݄ݘݤݯݺޏޚ߳ߵ߹ࠂࠅ"].join("");const atn=(new antlr4.atn.ATNDeserializer).deserialize(serializedATN);const decisionsToDFA=atn.decisionToState.map((ds,index)=>new antlr4.dfa.DFA(ds,index));const sharedContextCache=new antlr4.PredictionContextCache;class mathParser extends antlr4.Parser{static literalNames=[null,"'.'","'('","')'","','","'['","']'","'!'","'%'","'*'","'/'","'+'","'&'","'>'","'>='","'<'","'<='","'='","'=='","'==='","'!=='","'!='","'<>'","'&&'","'||'","'?'","':'","'{'","'}'","'-'",null,null,"'NULL'","'ERROR'",null,"'IF'","'IFERROR'","'ISNUMBER'","'ISTEXT'","'ISERROR'","'ISNONTEXT'","'ISLOGICAL'","'ISEVEN'","'ISODD'","'ISNULL'","'ISNULLORERROR'","'AND'","'OR'","'NOT'","'TRUE'","'FALSE'","'E'","'PI'","'ABS'","'QUOTIENT'","'MOD'","'SIGN'","'SQRT'","'TRUNC'","'INT'","'GCD'","'LCM'","'COMBIN'","'PERMUT'","'DEGREES'","'RADIANS'","'COS'","'COSH'","'SIN'","'SINH'","'TAN'","'TANH'","'ACOS'","'ACOSH'","'ASIN'","'ASINH'","'ATAN'","'ATANH'","'ATAN2'","'ROUND'","'ROUNDDOWN'","'ROUNDUP'","'CEILING'","'FLOOR'","'EVEN'","'ODD'","'MROUND'","'RAND'","'RANDBETWEEN'","'FACT'","'FACTDOUBLE'","'POWER'","'EXP'","'LN'","'LOG'","'LOG10'","'MULTINOMIAL'","'PRODUCT'","'SQRTPI'","'SUMSQ'","'ASC'",null,"'CHAR'","'CLEAN'","'CODE'","'CONCATENATE'","'EXACT'","'FIND'","'FIXED'","'LEFT'","'LEN'",null,"'MID'","'PROPER'","'REPLACE'","'REPT'","'RIGHT'","'RMB'","'SEARCH'","'SUBSTITUTE'","'T'","'TEXT'","'TRIM'",null,"'VALUE'","'DATEVALUE'","'TIMEVALUE'","'DATE'","'TIME'","'NOW'","'TODAY'","'YEAR'","'MONTH'","'DAY'","'HOUR'","'MINUTE'","'SECOND'","'WEEKDAY'","'DATEDIF'","'DAYS360'","'EDATE'","'EOMONTH'","'NETWORKDAYS'","'WORKDAY'","'WEEKNUM'","'MAX'","'MEDIAN'","'MIN'","'QUARTILE'","'MODE'","'LARGE'","'SMALL'","'PERCENTILE'","'PERCENTRANK'","'AVERAGE'","'AVERAGEIF'","'GEOMEAN'","'HARMEAN'","'COUNT'","'COUNTIF'","'SUM'","'SUMIF'","'AVEDEV'","'STDEV'","'STDEVP'","'DEVSQ'","'VAR'","'VARP'","'NORMDIST'","'NORMINV'","'NORMSDIST'","'NORMSINV'","'BETADIST'","'BETAINV'","'BINOMDIST'","'EXPONDIST'","'FDIST'","'FINV'","'FISHER'","'FISHERINV'","'GAMMADIST'","'GAMMAINV'","'GAMMALN'","'HYPGEOMDIST'","'LOGINV'","'LOGNORMDIST'","'NEGBINOMDIST'","'POISSON'","'TDIST'","'TINV'","'WEIBULL'","'REGEXREPALCE'",null,null,null,"'INDEXOF'","'LASTINDEXOF'","'SPLIT'","'JOIN'","'SUBSTRING'","'STARTSWITH'","'ENDSWITH'","'ISNULLOREMPTY'","'ISNULLORWHITESPACE'","'REMOVESTART'","'REMOVEEND'","'JSON'","'LOOKUP'",null,null,null,"'ADDYEARS'","'ADDMONTHS'","'ADDDAYS'","'ADDHOURS'","'ADDMINUTES'","'ADDSECONDS'"];static symbolicNames=[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"SUB","NUM","STRING","NULL","ERROR","UNIT","IF","IFERROR","ISNUMBER","ISTEXT","ISERROR","ISNONTEXT","ISLOGICAL","ISEVEN","ISODD","ISNULL","ISNULLORERROR","AND","OR","NOT","TRUE","FALSE","E","PI","ABS","QUOTIENT","MOD","SIGN","SQRT","TRUNC","INT","GCD","LCM","COMBIN","PERMUT","DEGREES","RADIANS","COS","COSH","SIN","SINH","TAN","TANH","ACOS","ACOSH","ASIN","ASINH","ATAN","ATANH","ATAN2","ROUND","ROUNDDOWN","ROUNDUP","CEILING","FLOOR","EVEN","ODD","MROUND","RAND","RANDBETWEEN","FACT","FACTDOUBLE","POWER","EXP","LN","LOG","LOG10","MULTINOMIAL","PRODUCT","SQRTPI","SUMSQ","ASC","JIS","CHAR","CLEAN","CODE","CONCATENATE","EXACT","FIND","FIXED","LEFT","LEN","LOWER","MID","PROPER","REPLACE","REPT","RIGHT","RMB","SEARCH","SUBSTITUTE","T","TEXT","TRIM","UPPER","VALUE","DATEVALUE","TIMEVALUE","DATE","TIME","NOW","TODAY","YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","WEEKDAY","DATEDIF","DAYS360","EDATE","EOMONTH","NETWORKDAYS","WORKDAY","WEEKNUM","MAX","MEDIAN","MIN","QUARTILE","MODE","LARGE","SMALL","PERCENTILE","PERCENTRANK","AVERAGE","AVERAGEIF","GEOMEAN","HARMEAN","COUNT","COUNTIF","SUM","SUMIF","AVEDEV","STDEV","STDEVP","DEVSQ","VAR","VARP","NORMDIST","NORMINV","NORMSDIST","NORMSINV","BETADIST","BETAINV","BINOMDIST","EXPONDIST","FDIST","FINV","FISHER","FISHERINV","GAMMADIST","GAMMAINV","GAMMALN","HYPGEOMDIST","LOGINV","LOGNORMDIST","NEGBINOMDIST","POISSON","TDIST","TINV","WEIBULL","REGEXREPALCE","ISREGEX","TRIMSTART","TRIMEND","INDEXOF","LASTINDEXOF","SPLIT","JOIN","SUBSTRING","STARTSWITH","ENDSWITH","ISNULLOREMPTY","ISNULLORWHITESPACE","REMOVESTART","REMOVEEND","JSON","LOOKUP","IN","HAS","PARAM","ADDYEARS","ADDMONTHS","ADDDAYS","ADDHOURS","ADDMINUTES","ADDSECONDS","PARAMETER","PARAMETER2","WS","COMMENT","LINE_COMMENT"];static ruleNames=["prog","expr","num","unit","arrayJson","parameter2"];constructor(input){super(input);this._interp=new antlr4.atn.ParserATNSimulator(this,atn,decisionsToDFA,sharedContextCache);this.ruleNames=mathParser.ruleNames;this.literalNames=mathParser.literalNames;this.symbolicNames=mathParser.symbolicNames}get atn(){return atn}sempred(localctx,ruleIndex,predIndex){return true}prog(){let localctx=new ProgContext(this,this._ctx,this.state);this.enterRule(localctx,0,0);try{this.enterOuterAlt(localctx,1);this.state=12;this.expr(0);this.match(-1)}catch(re){if(re instanceof antlr4.error.RecognitionException){localctx.exception=re;this._errHandler.reportError(this,re);this._errHandler.recover(this,re)}else{throw re}}finally{this.exitRule()}return localctx}expr(_p){if(_p===undefined){_p=0}const _parentctx=this._ctx;const _parentState=this.state;let localctx=new ExprContext(this,this._ctx,_parentState);let _prevctx=localctx;const _startState=2;this.enterRecursionRule(localctx,2,1,_p);var _la=0;try{this.enterOuterAlt(localctx,1);this._errHandler.sync(this);var la_=this._interp.adaptivePredict(this._input,76,this._ctx);switch(la_){case 1:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(2);this.state=17;this.expr(0);this.match(3);break;case 2:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(7);this.state=21;this.expr(198);break;case 3:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(35);this.match(2);this.state=24;this.expr(0);this.match(4);this.state=26;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);if(_la===4){this.match(4);this.state=28;this.expr(0)}this.match(3);break;case 4:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(37);this.match(2);this.state=35;this.expr(0);this.match(3);break;case 5:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(38);this.match(2);this.state=40;this.expr(0);this.match(3);break;case 6:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(39);this.match(2);this.state=45;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);if(_la===4){this.match(4);this.state=47;this.expr(0)}this.match(3);break;case 7:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(40);this.match(2);this.state=54;this.expr(0);this.match(3);break;case 8:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(41);this.match(2);this.state=59;this.expr(0);this.match(3);break;case 9:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(42);this.match(2);this.state=64;this.expr(0);this.match(3);break;case 10:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(43);this.match(2);this.state=69;this.expr(0);this.match(3);break;case 11:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(36);this.match(2);this.state=74;this.expr(0);this.match(4);this.state=76;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);if(_la===4){this.match(4);this.state=78;this.expr(0)}this.match(3);break;case 12:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(44);this.match(2);this.state=85;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);if(_la===4){this.match(4);this.state=87;this.expr(0)}this.match(3);break;case 13:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(45);this.match(2);this.state=94;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);if(_la===4){this.match(4);this.state=96;this.expr(0)}this.match(3);break;case 14:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(46);this.match(2);this.state=103;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);while(_la===4){this.match(4);this.state=105;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1)}this.match(3);break;case 15:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(47);this.match(2);this.state=115;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);while(_la===4){this.match(4);this.state=117;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1)}this.match(3);break;case 16:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(48);this.match(2);this.state=127;this.expr(0);this.match(3);break;case 17:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(49);this._errHandler.sync(this);var la_=this._interp.adaptivePredict(this._input,7,this._ctx);if(la_===1){this.match(2);this.match(3)}break;case 18:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(50);this._errHandler.sync(this);var la_=this._interp.adaptivePredict(this._input,8,this._ctx);if(la_===1){this.match(2);this.match(3)}break;case 19:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(51);this._errHandler.sync(this);var la_=this._interp.adaptivePredict(this._input,9,this._ctx);if(la_===1){this.match(2);this.match(3)}break;case 20:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(52);this._errHandler.sync(this);var la_=this._interp.adaptivePredict(this._input,10,this._ctx);if(la_===1){this.match(2);this.match(3)}break;case 21:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(53);this.match(2);this.state=152;this.expr(0);this.match(3);break;case 22:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(54);this.match(2);this.state=157;this.expr(0);this.match(4);this.state=159;this.expr(0);this.match(3);break;case 23:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(55);this.match(2);this.state=165;this.expr(0);this.match(4);this.state=167;this.expr(0);this.match(3);break;case 24:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(56);this.match(2);this.state=173;this.expr(0);this.match(3);break;case 25:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(57);this.match(2);this.state=178;this.expr(0);this.match(3);break;case 26:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(58);this.match(2);this.state=183;this.expr(0);this.match(3);break;case 27:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(59);this.match(2);this.state=188;this.expr(0);this.match(3);break;case 28:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(60);this.match(2);this.state=193;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);do{this.match(4);this.state=195;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1)}while(_la===4);this.match(3);break;case 29:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(61);this.match(2);this.state=204;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);do{this.match(4);this.state=206;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1)}while(_la===4);this.match(3);break;case 30:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(62);this.match(2);this.state=215;this.expr(0);this.match(4);this.state=217;this.expr(0);this.match(3);break;case 31:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(63);this.match(2);this.state=222;this.expr(0);this.match(4);this.state=224;this.expr(0);this.match(3);break;case 32:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(64);this.match(2);this.state=229;this.expr(0);this.match(3);break;case 33:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(65);this.match(2);this.state=234;this.expr(0);this.match(3);break;case 34:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(66);this.match(2);this.state=239;this.expr(0);this.match(3);break;case 35:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(67);this.match(2);this.state=244;this.expr(0);this.match(3);break;case 36:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(68);this.match(2);this.state=249;this.expr(0);this.match(3);break;case 37:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(69);this.match(2);this.state=254;this.expr(0);this.match(3);break;case 38:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(70);this.match(2);this.state=259;this.expr(0);this.match(3);break;case 39:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(71);this.match(2);this.state=264;this.expr(0);this.match(3);break;case 40:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(72);this.match(2);this.state=269;this.expr(0);this.match(3);break;case 41:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(73);this.match(2);this.state=274;this.expr(0);this.match(3);break;case 42:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(74);this.match(2);this.state=279;this.expr(0);this.match(3);break;case 43:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(75);this.match(2);this.state=284;this.expr(0);this.match(3);break;case 44:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(76);this.match(2);this.state=289;this.expr(0);this.match(3);break;case 45:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(77);this.match(2);this.state=294;this.expr(0);this.match(3);break;case 46:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(78);this.match(2);this.state=299;this.expr(0);this.match(4);this.state=301;this.expr(0);this.match(3);break;case 47:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(79);this.match(2);this.state=306;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);if(_la===4){this.match(4);this.state=308;this.expr(0)}this.match(3);break;case 48:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(80);this.match(2);this.state=315;this.expr(0);this.match(4);this.state=317;this.expr(0);this.match(3);break;case 49:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(81);this.match(2);this.state=322;this.expr(0);this.match(4);this.state=324;this.expr(0);this.match(3);break;case 50:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(82);this.match(2);this.state=329;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);if(_la===4){this.match(4);this.state=331;this.expr(0)}this.match(3);break;case 51:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(83);this.match(2);this.state=338;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);if(_la===4){this.match(4);this.state=340;this.expr(0)}this.match(3);break;case 52:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(84);this.match(2);this.state=347;this.expr(0);this.match(3);break;case 53:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(85);this.match(2);this.state=352;this.expr(0);this.match(3);break;case 54:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(86);this.match(2);this.state=357;this.expr(0);this.match(4);this.state=359;this.expr(0);this.match(3);break;case 55:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(87);this.match(2);this.match(3);break;case 56:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(88);this.match(2);this.state=367;this.expr(0);this.match(4);this.state=369;this.expr(0);this.match(3);break;case 57:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(89);this.match(2);this.state=374;this.expr(0);this.match(3);break;case 58:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(90);this.match(2);this.state=379;this.expr(0);this.match(3);break;case 59:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(91);this.match(2);this.state=384;this.expr(0);this.match(4);this.state=386;this.expr(0);this.match(3);break;case 60:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(92);this.match(2);this.state=391;this.expr(0);this.match(3);break;case 61:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(93);this.match(2);this.state=396;this.expr(0);this.match(3);break;case 62:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(94);this.match(2);this.state=401;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);if(_la===4){this.match(4);this.state=403;this.expr(0)}this.match(3);break;case 63:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(95);this.match(2);this.state=410;this.expr(0);this.match(3);break;case 64:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(96);this.match(2);this.state=415;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);while(_la===4){this.match(4);this.state=417;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1)}this.match(3);break;case 65:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(97);this.match(2);this.state=427;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);while(_la===4){this.match(4);this.state=429;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1)}this.match(3);break;case 66:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(98);this.match(2);this.state=439;this.expr(0);this.match(3);break;case 67:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(99);this.match(2);this.state=444;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);while(_la===4){this.match(4);this.state=446;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1)}this.match(3);break;case 68:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(100);this.match(2);this.state=456;this.expr(0);this.match(3);break;case 69:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(101);this.match(2);this.state=461;this.expr(0);this.match(3);break;case 70:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(102);this.match(2);this.state=466;this.expr(0);this.match(3);break;case 71:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(103);this.match(2);this.state=471;this.expr(0);this.match(3);break;case 72:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(104);this.match(2);this.state=476;this.expr(0);this.match(3);break;case 73:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(105);this.match(2);this.state=481;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);while(_la===4){this.match(4);this.state=483;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1)}this.match(3);break;case 74:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(106);this.match(2);this.state=493;this.expr(0);this.match(4);this.state=495;this.expr(0);this.match(3);break;case 75:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(107);this.match(2);this.state=500;this.expr(0);this.match(4);this.state=502;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);if(_la===4){this.match(4);this.state=504;this.expr(0)}this.match(3);break;case 76:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(108);this.match(2);this.state=511;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);if(_la===4){this.match(4);this.state=513;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);if(_la===4){this.match(4);this.state=515;this.expr(0)}}this.match(3);break;case 77:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(109);this.match(2);this.state=524;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);if(_la===4){this.match(4);this.state=526;this.expr(0)}this.match(3);break;case 78:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(110);this.match(2);this.state=533;this.expr(0);this.match(3);break;case 79:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(111);this.match(2);this.state=538;this.expr(0);this.match(3);break;case 80:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(112);this.match(2);this.state=543;this.expr(0);this.match(4);this.state=545;this.expr(0);this.match(4);this.state=547;this.expr(0);this.match(3);break;case 81:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(113);this.match(2);this.state=552;this.expr(0);this.match(3);break;case 82:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(114);this.match(2);this.state=557;this.expr(0);this.match(4);this.state=559;this.expr(0);this.match(4);this.state=561;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);if(_la===4){this.match(4);this.state=563;this.expr(0)}this.match(3);break;case 83:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(115);this.match(2);this.state=570;this.expr(0);this.match(4);this.state=572;this.expr(0);this.match(3);break;case 84:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(116);this.match(2);this.state=577;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);if(_la===4){this.match(4);this.state=579;this.expr(0)}this.match(3);break;case 85:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(117);this.match(2);this.state=586;this.expr(0);this.match(3);break;case 86:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(118);this.match(2);this.state=591;this.expr(0);this.match(4);this.state=593;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);if(_la===4){this.match(4);this.state=595;this.expr(0)}this.match(3);break;case 87:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(119);this.match(2);this.state=602;this.expr(0);this.match(4);this.state=604;this.expr(0);this.match(4);this.state=606;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);if(_la===4){this.match(4);this.state=608;this.expr(0)}this.match(3);break;case 88:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(120);this.match(2);this.state=615;this.expr(0);this.match(3);break;case 89:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(121);this.match(2);this.state=620;this.expr(0);this.match(4);this.state=622;this.expr(0);this.match(3);break;case 90:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(122);this.match(2);this.state=627;this.expr(0);this.match(3);break;case 91:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(123);this.match(2);this.state=632;this.expr(0);this.match(3);break;case 92:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(124);this.match(2);this.state=637;this.expr(0);this.match(3);break;case 93:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(125);this.match(2);this.state=642;this.expr(0);this.match(3);break;case 94:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(126);this.match(2);this.state=647;this.expr(0);this.match(3);break;case 95:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(127);this.match(2);this.state=652;this.expr(0);this.match(4);this.state=654;this.expr(0);this.match(4);this.state=656;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);if(_la===4){this.match(4);this.state=658;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);if(_la===4){this.match(4);this.state=660;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);if(_la===4){this.match(4);this.state=662;this.expr(0)}}}this.match(3);break;case 96:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(128);this.match(2);this.state=673;this.expr(0);this.match(4);this.state=675;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);if(_la===4){this.match(4);this.state=677;this.expr(0)}this.match(3);break;case 97:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(129);this.match(2);this.match(3);break;case 98:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(130);this.match(2);this.match(3);break;case 99:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(131);this.match(2);this.state=690;this.expr(0);this.match(3);break;case 100:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(132);this.match(2);this.state=695;this.expr(0);this.match(3);break;case 101:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(133);this.match(2);this.state=700;this.expr(0);this.match(3);break;case 102:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(134);this.match(2);this.state=705;this.expr(0);this.match(3);break;case 103:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(135);this.match(2);this.state=710;this.expr(0);this.match(3);break;case 104:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(136);this.match(2);this.state=715;this.expr(0);this.match(3);break;case 105:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(137);this.match(2);this.state=720;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);if(_la===4){this.match(4);this.state=722;this.expr(0)}this.match(3);break;case 106:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(138);this.match(2);this.state=729;this.expr(0);this.match(4);this.state=731;this.expr(0);this.match(4);this.state=733;this.expr(0);this.match(3);break;case 107:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(139);this.match(2);this.state=738;this.expr(0);this.match(4);this.state=740;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);if(_la===4){this.match(4);this.state=742;this.expr(0)}this.match(3);break;case 108:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(140);this.match(2);this.state=749;this.expr(0);this.match(4);this.state=751;this.expr(0);this.match(3);break;case 109:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(141);this.match(2);this.state=756;this.expr(0);this.match(4);this.state=758;this.expr(0);this.match(3);break;case 110:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(142);this.match(2);this.state=763;this.expr(0);this.match(4);this.state=765;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);if(_la===4){this.match(4);this.state=767;this.expr(0)}this.match(3);break;case 111:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(143);this.match(2);this.state=774;this.expr(0);this.match(4);this.state=776;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);if(_la===4){this.match(4);this.state=778;this.expr(0)}this.match(3);break;case 112:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(144);this.match(2);this.state=785;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);if(_la===4){this.match(4);this.state=787;this.expr(0)}this.match(3);break;case 113:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(145);this.match(2);this.state=794;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);do{this.match(4);this.state=796;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1)}while(_la===4);this.match(3);break;case 114:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(146);this.match(2);this.state=805;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);do{this.match(4);this.state=807;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1)}while(_la===4);this.match(3);break;case 115:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(147);this.match(2);this.state=816;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);do{this.match(4);this.state=818;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1)}while(_la===4);this.match(3);break;case 116:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(148);this.match(2);this.state=827;this.expr(0);this.match(4);this.state=829;this.expr(0);this.match(3);break;case 117:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(149);this.match(2);this.state=834;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);while(_la===4){this.match(4);this.state=836;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1)}this.match(3);break;case 118:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(150);this.match(2);this.state=846;this.expr(0);this.match(4);this.state=848;this.expr(0);this.match(3);break;case 119:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(151);this.match(2);this.state=853;this.expr(0);this.match(4);this.state=855;this.expr(0);this.match(3);break;case 120:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(152);this.match(2);this.state=860;this.expr(0);this.match(4);this.state=862;this.expr(0);this.match(3);break;case 121:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(153);this.match(2);this.state=867;this.expr(0);this.match(4);this.state=869;this.expr(0);this.match(3);break;case 122:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(154);this.match(2);this.state=874;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);while(_la===4){this.match(4);this.state=876;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1)}this.match(3);break;case 123:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(155);this.match(2);this.state=886;this.expr(0);this.match(4);this.state=888;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);if(_la===4){this.match(4);this.state=890;this.expr(0)}this.match(3);break;case 124:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(156);this.match(2);this.state=897;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);while(_la===4){this.match(4);this.state=899;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1)}this.match(3);break;case 125:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(157);this.match(2);this.state=909;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);while(_la===4){this.match(4);this.state=911;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1)}this.match(3);break;case 126:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(158);this.match(2);this.state=921;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);while(_la===4){this.match(4);this.state=923;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1)}this.match(3);break;case 127:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(159);this.match(2);this.state=933;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);while(_la===4){this.match(4);this.state=935;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1)}this.match(3);break;case 128:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(160);this.match(2);this.state=945;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);while(_la===4){this.match(4);this.state=947;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1)}this.match(3);break;case 129:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(161);this.match(2);this.state=957;this.expr(0);this.match(4);this.state=959;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);if(_la===4){this.match(4);this.state=961;this.expr(0)}this.match(3);break;case 130:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(162);this.match(2);this.state=968;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);while(_la===4){this.match(4);this.state=970;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1)}this.match(3);break;case 131:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(163);this.match(2);this.state=980;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);while(_la===4){this.match(4);this.state=982;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1)}this.match(3);break;case 132:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(164);this.match(2);this.state=992;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);while(_la===4){this.match(4);this.state=994;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1)}this.match(3);break;case 133:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(165);this.match(2);this.state=1004;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);while(_la===4){this.match(4);this.state=1006;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1)}this.match(3);break;case 134:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(166);this.match(2);this.state=1016;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);while(_la===4){this.match(4);this.state=1018;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1)}this.match(3);break;case 135:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(167);this.match(2);this.state=1028;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);while(_la===4){this.match(4);this.state=1030;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1)}this.match(3);break;case 136:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(168);this.match(2);this.state=1040;this.expr(0);this.match(4);this.state=1042;this.expr(0);this.match(4);this.state=1044;this.expr(0);this.match(4);this.state=1046;this.expr(0);this.match(3);break;case 137:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(169);this.match(2);this.state=1051;this.expr(0);this.match(4);this.state=1053;this.expr(0);this.match(4);this.state=1055;this.expr(0);this.match(3);break;case 138:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(170);this.match(2);this.state=1060;this.expr(0);this.match(3);break;case 139:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(171);this.match(2);this.state=1065;this.expr(0);this.match(3);break;case 140:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(172);this.match(2);this.state=1070;this.expr(0);this.match(4);this.state=1072;this.expr(0);this.match(4);this.state=1074;this.expr(0);this.match(3);break;case 141:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(173);this.match(2);this.state=1079;this.expr(0);this.match(4);this.state=1081;this.expr(0);this.match(4);this.state=1083;this.expr(0);this.match(3);break;case 142:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(174);this.match(2);this.state=1088;this.expr(0);this.match(4);this.state=1090;this.expr(0);this.match(4);this.state=1092;this.expr(0);this.match(4);this.state=1094;this.expr(0);this.match(3);break;case 143:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(175);this.match(2);this.state=1099;this.expr(0);this.match(4);this.state=1101;this.expr(0);this.match(4);this.state=1103;this.expr(0);this.match(3);break;case 144:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(176);this.match(2);this.state=1108;this.expr(0);this.match(4);this.state=1110;this.expr(0);this.match(4);this.state=1112;this.expr(0);this.match(3);break;case 145:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(177);this.match(2);this.state=1117;this.expr(0);this.match(4);this.state=1119;this.expr(0);this.match(4);this.state=1121;this.expr(0);this.match(3);break;case 146:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(178);this.match(2);this.state=1126;this.expr(0);this.match(3);break;case 147:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(179);this.match(2);this.state=1131;this.expr(0);this.match(3);break;case 148:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(180);this.match(2);this.state=1136;this.expr(0);this.match(4);this.state=1138;this.expr(0);this.match(4);this.state=1140;this.expr(0);this.match(4);this.state=1142;this.expr(0);this.match(3);break;case 149:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(181);this.match(2);this.state=1147;this.expr(0);this.match(4);this.state=1149;this.expr(0);this.match(4);this.state=1151;this.expr(0);this.match(3);break;case 150:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(182);this.match(2);this.state=1156;this.expr(0);this.match(3);break;case 151:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(183);this.match(2);this.state=1161;this.expr(0);this.match(4);this.state=1163;this.expr(0);this.match(4);this.state=1165;this.expr(0);this.match(4);this.state=1167;this.expr(0);this.match(3);break;case 152:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(184);this.match(2);this.state=1172;this.expr(0);this.match(4);this.state=1174;this.expr(0);this.match(4);this.state=1176;this.expr(0);this.match(3);break;case 153:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(185);this.match(2);this.state=1181;this.expr(0);this.match(4);this.state=1183;this.expr(0);this.match(4);this.state=1185;this.expr(0);this.match(3);break;case 154:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(186);this.match(2);this.state=1190;this.expr(0);this.match(4);this.state=1192;this.expr(0);this.match(4);this.state=1194;this.expr(0);this.match(3);break;case 155:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(187);this.match(2);this.state=1199;this.expr(0);this.match(4);this.state=1201;this.expr(0);this.match(4);this.state=1203;this.expr(0);this.match(3);break;case 156:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(188);this.match(2);this.state=1208;this.expr(0);this.match(4);this.state=1210;this.expr(0);this.match(4);this.state=1212;this.expr(0);this.match(3);break;case 157:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(189);this.match(2);this.state=1217;this.expr(0);this.match(4);this.state=1219;this.expr(0);this.match(3);break;case 158:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(190);this.match(2);this.state=1224;this.expr(0);this.match(4);this.state=1226;this.expr(0);this.match(4);this.state=1228;this.expr(0);this.match(4);this.state=1230;this.expr(0);this.match(3);break;case 159:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(191);this.match(2);this.state=1235;this.expr(0);this.match(4);this.state=1237;this.expr(0);this.match(4);this.state=1239;this.expr(0);this.match(3);break;case 160:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(192);this.match(2);this.state=1244;this.expr(0);this.match(4);this.state=1246;this.expr(0);this.match(3);break;case 161:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(193);this.match(2);this.state=1251;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);if(_la===4){this.match(4);this.state=1253;this.expr(0)}this.match(3);break;case 162:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(194);this.match(2);this.state=1260;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);if(_la===4){this.match(4);this.state=1262;this.expr(0)}this.match(3);break;case 163:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(195);this.match(2);this.state=1269;this.expr(0);this.match(4);this.state=1271;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);if(_la===4){this.match(4);this.state=1273;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);if(_la===4){this.match(4);this.state=1275;this.expr(0)}}this.match(3);break;case 164:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(196);this.match(2);this.state=1284;this.expr(0);this.match(4);this.state=1286;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);if(_la===4){this.match(4);this.state=1288;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);if(_la===4){this.match(4);this.state=1290;this.expr(0)}}this.match(3);break;case 165:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(197);this.match(2);this.state=1299;this.expr(0);this.match(4);this.state=1301;this.expr(0);this.match(3);break;case 166:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(198);this.match(2);this.state=1306;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);do{this.match(4);this.state=1308;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1)}while(_la===4);this.match(3);break;case 167:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(199);this.match(2);this.state=1317;this.expr(0);this.match(4);this.state=1319;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);if(_la===4){this.match(4);this.state=1321;this.expr(0)}this.match(3);break;case 168:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(200);this.match(2);this.state=1328;this.expr(0);this.match(4);this.state=1330;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);if(_la===4){this.match(4);this.state=1332;this.expr(0)}this.match(3);break;case 169:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(201);this.match(2);this.state=1339;this.expr(0);this.match(4);this.state=1341;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);if(_la===4){this.match(4);this.state=1343;this.expr(0)}this.match(3);break;case 170:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(202);this.match(2);this.state=1350;this.expr(0);this.match(3);break;case 171:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(203);this.match(2);this.state=1355;this.expr(0);this.match(3);break;case 172:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(204);this.match(2);this.state=1360;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);if(_la===4){this.match(4);this.state=1362;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);if(_la===4){this.match(4);this.state=1364;this.expr(0)}}this.match(3);break;case 173:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(205);this.match(2);this.state=1373;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);if(_la===4){this.match(4);this.state=1375;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);if(_la===4){this.match(4);this.state=1377;this.expr(0)}}this.match(3);break;case 174:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(206);this.match(2);this.state=1386;this.expr(0);this.match(3);break;case 175:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(207);this.match(2);this.state=1391;this.expr(0);this.match(4);this.state=1393;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);if(_la===4){this.match(4);this.state=1395;this.expr(0)}this.match(3);break;case 176:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(33);this.match(2);this._errHandler.sync(this);_la=this._input.LA(1);if([2,5,7,27,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,210,211,212,213,214,215,216,217,218].indexOf(_la)>-1){this.state=1402;this.expr(0)}this.match(3);break;case 177:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(210);this.match(2);this.state=1408;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);if(_la===4){this.match(4);this.state=1410;this.expr(0)}this.match(3);break;case 178:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(211);this.match(2);this.state=1417;this.expr(0);this.match(4);this.state=1419;this.expr(0);this.match(3);break;case 179:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(212);this.match(2);this.state=1424;this.expr(0);this.match(4);this.state=1426;this.expr(0);this.match(3);break;case 180:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(213);this.match(2);this.state=1431;this.expr(0);this.match(4);this.state=1433;this.expr(0);this.match(3);break;case 181:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(214);this.match(2);this.state=1438;this.expr(0);this.match(4);this.state=1440;this.expr(0);this.match(3);break;case 182:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(215);this.match(2);this.state=1445;this.expr(0);this.match(4);this.state=1447;this.expr(0);this.match(3);break;case 183:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(216);this.match(2);this.state=1452;this.expr(0);this.match(4);this.state=1454;this.expr(0);this.match(3);break;case 184:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(27);this.arrayJson();this._errHandler.sync(this);var _alt=this._interp.adaptivePredict(this._input,73,this._ctx);while(_alt!=2&&_alt!=0){if(_alt===1){this.match(4);this.arrayJson()}this._errHandler.sync(this);_alt=this._interp.adaptivePredict(this._input,73,this._ctx)}this._errHandler.sync(this);_la=this._input.LA(1);while(_la===4){this.match(4);this._errHandler.sync(this);_la=this._input.LA(1)}this.match(28);break;case 185:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(5);this.match(217);this.match(6);break;case 186:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(5);this.state=1478;this.expr(0);this.match(6);break;case 187:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(217);break;case 188:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(218);break;case 189:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.num();this._errHandler.sync(this);var la_=this._interp.adaptivePredict(this._input,75,this._ctx);if(la_===1){this.unit()}break;case 190:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(31);break;case 191:localctx=new ExprfunContext(this,localctx);this._ctx=localctx;_prevctx=localctx;this.match(32);break}this._ctx.stop=this._input.LT(-1);this._errHandler.sync(this);var _alt=this._interp.adaptivePredict(this._input,107,this._ctx);while(_alt!=2&&_alt!=0){if(_alt===1){if(this._parseListeners!==null){this.triggerExitRuleEvent()}_prevctx=localctx;this._errHandler.sync(this);var la_=this._interp.adaptivePredict(this._input,106,this._ctx);switch(la_){case 1:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);localctx.op=this._input.LT(1);_la=this._input.LA(1);if([1,2,3,4,5,6,7,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221].indexOf(_la)>-1){localctx.op=this._errHandler.recoverInline(this)}else{this._errHandler.reportMatch(this);this.consume()}this.state=1493;this.expr(197);break;case 2:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);localctx.op=this._input.LT(1);_la=this._input.LA(1);if([1,2,3,4,5,6,7,8,9,10,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221].indexOf(_la)>-1){localctx.op=this._errHandler.recoverInline(this)}else{this._errHandler.reportMatch(this);this.consume()}this.state=1496;this.expr(196);break;case 3:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);localctx.op=this._input.LT(1);_la=this._input.LA(1);if([1,2,3,4,5,6,7,8,9,10,11,12,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221].indexOf(_la)>-1){localctx.op=this._errHandler.recoverInline(this)}else{this._errHandler.reportMatch(this);this.consume()}this.state=1499;this.expr(195);break;case 4:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);localctx.op=this._input.LT(1);_la=this._input.LA(1);if([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221].indexOf(_la)>-1){localctx.op=this._errHandler.recoverInline(this)}else{this._errHandler.reportMatch(this);this.consume()}this.state=1502;this.expr(194);break;case 5:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);localctx.op=this._input.LT(1);_la=this._input.LA(1);if([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221].indexOf(_la)>-1){localctx.op=this._errHandler.recoverInline(this)}else{this._errHandler.reportMatch(this);this.consume()}this.state=1505;this.expr(193);break;case 6:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);localctx.op=this._input.LT(1);_la=this._input.LA(1);if([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221].indexOf(_la)>-1){localctx.op=this._errHandler.recoverInline(this)}else{this._errHandler.reportMatch(this);this.consume()}this.state=1508;this.expr(192);break;case 7:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(25);this.state=1511;this.expr(0);this.match(26);this.state=1513;this.expr(191);break;case 8:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(37);this.match(2);this.match(3);break;case 9:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(38);this.match(2);this.match(3);break;case 10:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(40);this.match(2);this.match(3);break;case 11:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(41);this.match(2);this.match(3);break;case 12:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(42);this.match(2);this.match(3);break;case 13:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(43);this.match(2);this.match(3);break;case 14:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(39);this.match(2);this._errHandler.sync(this);_la=this._input.LA(1);if([2,5,7,27,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,210,211,212,213,214,215,216,217,218].indexOf(_la)>-1){this.state=1549;this.expr(0)}this.match(3);break;case 15:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(44);this.match(2);this._errHandler.sync(this);_la=this._input.LA(1);if([2,5,7,27,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,210,211,212,213,214,215,216,217,218].indexOf(_la)>-1){this.state=1557;this.expr(0)}this.match(3);break;case 16:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(45);this.match(2);this._errHandler.sync(this);_la=this._input.LA(1);if([2,5,7,27,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,210,211,212,213,214,215,216,217,218].indexOf(_la)>-1){this.state=1565;this.expr(0)}this.match(3);break;case 17:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(59);this.match(2);this.match(3);break;case 18:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(100);this.match(2);this.match(3);break;case 19:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(101);this.match(2);this.match(3);break;case 20:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(102);this.match(2);this.match(3);break;case 21:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(103);this.match(2);this.match(3);break;case 22:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(104);this.match(2);this.match(3);break;case 23:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(105);this.match(2);this._errHandler.sync(this);_la=this._input.LA(1);if([2,5,7,27,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,210,211,212,213,214,215,216,217,218].indexOf(_la)>-1){this.state=1603;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);while(_la===4){this.match(4);this.state=1605;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1)}}this.match(3);break;case 24:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(106);this.match(2);this.state=1618;this.expr(0);this.match(3);break;case 25:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(107);this.match(2);this.state=1625;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);if(_la===4){this.match(4);this.state=1627;this.expr(0)}this.match(3);break;case 26:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(109);this.match(2);this._errHandler.sync(this);_la=this._input.LA(1);if([2,5,7,27,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,210,211,212,213,214,215,216,217,218].indexOf(_la)>-1){this.state=1636;this.expr(0)}this.match(3);break;case 27:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(110);this.match(2);this.match(3);break;case 28:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(111);this.match(2);this.match(3);break;case 29:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(112);this.match(2);this.state=1654;this.expr(0);this.match(4);this.state=1656;this.expr(0);this.match(3);break;case 30:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(113);this.match(2);this.match(3);break;case 31:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(114);this.match(2);this.state=1668;this.expr(0);this.match(4);this.state=1670;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);if(_la===4){this.match(4);this.state=1672;this.expr(0)}this.match(3);break;case 32:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(115);this.match(2);this.state=1681;this.expr(0);this.match(3);break;case 33:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(116);this.match(2);this._errHandler.sync(this);_la=this._input.LA(1);if([2,5,7,27,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,210,211,212,213,214,215,216,217,218].indexOf(_la)>-1){this.state=1688;this.expr(0)}this.match(3);break;case 34:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(117);this.match(2);this.match(3);break;case 35:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(118);this.match(2);this.state=1701;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);if(_la===4){this.match(4);this.state=1703;this.expr(0)}this.match(3);break;case 36:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(119);this.match(2);this.state=1712;this.expr(0);this.match(4);this.state=1714;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);if(_la===4){this.match(4);this.state=1716;this.expr(0)}this.match(3);break;case 37:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(120);this.match(2);this.match(3);break;case 38:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(121);this.match(2);this.state=1730;this.expr(0);this.match(3);break;case 39:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(122);this.match(2);this.match(3);break;case 40:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(123);this.match(2);this.match(3);break;case 41:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(124);this.match(2);this.match(3);break;case 42:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(125);this.match(2);this.match(3);break;case 43:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(126);this.match(2);this.match(3);break;case 44:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(131);this._errHandler.sync(this);var la_=this._interp.adaptivePredict(this._input,88,this._ctx);if(la_===1){this.match(2);this.match(3)}break;case 45:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(132);this._errHandler.sync(this);var la_=this._interp.adaptivePredict(this._input,89,this._ctx);if(la_===1){this.match(2);this.match(3)}break;case 46:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(133);this._errHandler.sync(this);var la_=this._interp.adaptivePredict(this._input,90,this._ctx);if(la_===1){this.match(2);this.match(3)}break;case 47:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(134);this._errHandler.sync(this);var la_=this._interp.adaptivePredict(this._input,91,this._ctx);if(la_===1){this.match(2);this.match(3)}break;case 48:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(135);this._errHandler.sync(this);var la_=this._interp.adaptivePredict(this._input,92,this._ctx);if(la_===1){this.match(2);this.match(3)}break;case 49:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(136);this._errHandler.sync(this);var la_=this._interp.adaptivePredict(this._input,93,this._ctx);if(la_===1){this.match(2);this.match(3)}break;case 50:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(191);this.match(2);this.state=1804;this.expr(0);this.match(4);this.state=1806;this.expr(0);this.match(3);break;case 51:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(192);this.match(2);this.state=1813;this.expr(0);this.match(3);break;case 52:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(193);this.match(2);this._errHandler.sync(this);_la=this._input.LA(1);if([2,5,7,27,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,210,211,212,213,214,215,216,217,218].indexOf(_la)>-1){this.state=1820;this.expr(0)}this.match(3);break;case 53:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(194);this.match(2);this._errHandler.sync(this);_la=this._input.LA(1);if([2,5,7,27,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,210,211,212,213,214,215,216,217,218].indexOf(_la)>-1){this.state=1828;this.expr(0)}this.match(3);break;case 54:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(195);this.match(2);this.state=1836;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);if(_la===4){this.match(4);this.state=1838;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);if(_la===4){this.match(4);this.state=1840;this.expr(0)}}this.match(3);break;case 55:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(196);this.match(2);this.state=1851;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);if(_la===4){this.match(4);this.state=1853;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);if(_la===4){this.match(4);this.state=1855;this.expr(0)}}this.match(3);break;case 56:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(197);this.match(2);this.state=1866;this.expr(0);this.match(3);break;case 57:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(198);this.match(2);this.state=1873;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);while(_la===4){this.match(4);this.state=1875;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1)}this.match(3);break;case 58:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(199);this.match(2);this.state=1887;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);if(_la===4){this.match(4);this.state=1889;this.expr(0)}this.match(3);break;case 59:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(200);this.match(2);this.state=1898;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);if(_la===4){this.match(4);this.state=1900;this.expr(0)}this.match(3);break;case 60:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(201);this.match(2);this.state=1909;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);if(_la===4){this.match(4);this.state=1911;this.expr(0)}this.match(3);break;case 61:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(202);this.match(2);this.match(3);break;case 62:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(203);this.match(2);this.match(3);break;case 63:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(204);this.match(2);this.state=1930;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);if(_la===4){this.match(4);this.state=1932;this.expr(0)}this.match(3);break;case 64:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(205);this.match(2);this.state=1941;this.expr(0);this._errHandler.sync(this);_la=this._input.LA(1);if(_la===4){this.match(4);this.state=1943;this.expr(0)}this.match(3);break;case 65:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(206);this.match(2);this.match(3);break;case 66:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(207);this.match(2);this.state=1957;this.expr(0);this.match(4);this.state=1959;this.expr(0);this.match(3);break;case 67:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(211);this.match(2);this.state=1966;this.expr(0);this.match(3);break;case 68:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(212);this.match(2);this.state=1973;this.expr(0);this.match(3);break;case 69:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(213);this.match(2);this.state=1980;this.expr(0);this.match(3);break;case 70:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(214);this.match(2);this.state=1987;this.expr(0);this.match(3);break;case 71:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(215);this.match(2);this.state=1994;this.expr(0);this.match(3);break;case 72:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(216);this.match(2);this.state=2001;this.expr(0);this.match(3);break;case 73:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(208);this.match(2);this.state=2008;this.expr(0);this.match(3);break;case 74:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.match(209);this.match(2);this.state=2015;this.expr(0);this.match(3);break;case 75:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(5);this.state=2020;this.expr(0);this.match(6);break;case 76:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(5);this.state=2025;this.parameter2();this.match(6);break;case 77:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(1);this.state=2030;this.parameter2();break;case 78:localctx=new ExprfunContext(this,new ExprContext(this,_parentctx,_parentState));this.pushNewRecursionContext(localctx,_startState,1);this.match(8);break}}this._errHandler.sync(this);_alt=this._interp.adaptivePredict(this._input,107,this._ctx)}}catch(error){if(error instanceof antlr4.error.RecognitionException){localctx.exception=error;this._errHandler.reportError(this,error);this._errHandler.recover(this,error)}else{throw error}}finally{this.unrollRecursionContexts(_parentctx)}return localctx}num(){let localctx=new NumContext(this,this._ctx,this.state);this.enterRule(localctx,4,2);var _la=0;try{this.enterOuterAlt(localctx,1);this._errHandler.sync(this);_la=this._input.LA(1);if(_la===29){this.match(29)}this.match(30)}catch(re){if(re instanceof antlr4.error.RecognitionException){localctx.exception=re;this._errHandler.reportError(this,re);this._errHandler.recover(this,re)}else{throw re}}finally{this.exitRule()}return localctx}unit(){let localctx=new UnitContext(this,this._ctx,this.state);this.enterRule(localctx,6,3);var _la=0;try{this.enterOuterAlt(localctx,1);_la=this._input.LA(1);if([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221].indexOf(_la)>-1){this._errHandler.recoverInline(this)}else{this._errHandler.reportMatch(this);this.consume()}}catch(re){if(re instanceof antlr4.error.RecognitionException){localctx.exception=re;this._errHandler.reportError(this,re);this._errHandler.recover(this,re)}else{throw re}}finally{this.exitRule()}return localctx}arrayJson(){let localctx=new ArrayJsonContext(this,this._ctx,this.state);this.enterRule(localctx,8,4);try{this.enterOuterAlt(localctx,1);this._errHandler.sync(this);var la_=this._interp.adaptivePredict(this._input,110,this._ctx);if(la_===1){this._errHandler.sync(this);switch(this._input.LA(1)){case 30:this.match(30);break;case 31:this.match(31);break;case 32:case 33:case 34:case 35:case 36:case 37:case 38:case 39:case 40:case 41:case 42:case 43:case 44:case 45:case 46:case 47:case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:case 58:case 59:case 60:case 61:case 62:case 63:case 64:case 65:case 66:case 67:case 68:case 69:case 70:case 71:case 72:case 73:case 74:case 75:case 76:case 77:case 78:case 79:case 80:case 81:case 82:case 83:case 84:case 85:case 86:case 87:case 88:case 89:case 90:case 91:case 92:case 93:case 94:case 95:case 96:case 97:case 98:case 99:case 100:case 101:case 102:case 103:case 104:case 105:case 106:case 107:case 108:case 109:case 110:case 111:case 112:case 113:case 114:case 115:case 116:case 117:case 118:case 119:case 120:case 121:case 122:case 123:case 124:case 125:case 126:case 127:case 128:case 129:case 130:case 131:case 132:case 133:case 134:case 135:case 136:case 137:case 138:case 139:case 140:case 141:case 142:case 143:case 144:case 145:case 146:case 147:case 148:case 149:case 150:case 151:case 152:case 153:case 154:case 155:case 156:case 157:case 158:case 159:case 160:case 161:case 162:case 163:case 164:case 165:case 166:case 167:case 168:case 169:case 170:case 171:case 172:case 173:case 174:case 175:case 176:case 177:case 178:case 179:case 180:case 181:case 182:case 183:case 184:case 185:case 186:case 187:case 188:case 189:case 190:case 191:case 192:case 193:case 194:case 195:case 196:case 197:case 198:case 199:case 200:case 201:case 202:case 203:case 204:case 205:case 206:case 207:case 208:case 209:case 210:case 211:case 212:case 213:case 214:case 215:case 216:case 217:this.state=2047;this.parameter2();break;default:throw new antlr4.error.NoViableAltException(this)}this.match(26)}this.state=2053;this.expr(0)}catch(re){if(re instanceof antlr4.error.RecognitionException){localctx.exception=re;this._errHandler.reportError(this,re);this._errHandler.recover(this,re)}else{throw re}}finally{this.exitRule()}return localctx}parameter2(){let localctx=new Parameter2Context(this,this._ctx,this.state);this.enterRule(localctx,10,5);var _la=0;try{this.enterOuterAlt(localctx,1);_la=this._input.LA(1);if([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,218,219,220,221].indexOf(_la)>-1){this._errHandler.recoverInline(this)}else{this._errHandler.reportMatch(this);this.consume()}}catch(re){if(re instanceof antlr4.error.RecognitionException){localctx.exception=re;this._errHandler.reportError(this,re);this._errHandler.recover(this,re)}else{throw re}}finally{this.exitRule()}return localctx}}mathParser.RULE_arrayJson=4;class ProgContext extends antlr4.ParserRuleContext{constructor(parser,parent,invokingState){if(parent===undefined){parent=null}if(invokingState===undefined||invokingState===null){invokingState=-1}super(parent,invokingState);this.parser=parser;this.ruleIndex=0}}class ExprContext extends antlr4.ParserRuleContext{constructor(parser,parent,invokingState){if(parent===undefined){parent=null}if(invokingState===undefined||invokingState===null){invokingState=-1}super(parent,invokingState);this.parser=parser;this.ruleIndex=1}copyFrom(ctx){super.copyFrom(ctx)}}class ExprfunContext extends ExprContext{constructor(parser,ctx){super(parser);super.copyFrom(ctx)}}class NumContext extends antlr4.ParserRuleContext{constructor(parser,parent,invokingState){if(parent===undefined){parent=null}if(invokingState===undefined||invokingState===null){invokingState=-1}super(parent,invokingState);this.parser=parser;this.ruleIndex=2}}class UnitContext extends antlr4.ParserRuleContext{constructor(parser,parent,invokingState){if(parent===undefined){parent=null}if(invokingState===undefined||invokingState===null){invokingState=-1}super(parent,invokingState);this.parser=parser;this.ruleIndex=3}}class ArrayJsonContext extends antlr4.ParserRuleContext{constructor(parser,parent,invokingState){if(parent===undefined){parent=null}if(invokingState===undefined||invokingState===null){invokingState=-1}super(parent,invokingState);this.parser=parser;this.ruleIndex=4}}class Parameter2Context extends antlr4.ParserRuleContext{constructor(parser,parent,invokingState){if(parent===undefined){parent=null}if(invokingState===undefined||invokingState===null){invokingState=-1}super(parent,invokingState);this.parser=parser;this.ruleIndex=5}}mathParser.ProgContext=ProgContext;mathParser.ExprContext=ExprContext;mathParser.NumContext=NumContext;mathParser.UnitContext=UnitContext;mathParser.ArrayJsonContext=ArrayJsonContext;mathParser.Parameter2Context=Parameter2Context;exports.mathParser=mathParser},{"./index":40}],44:[function(require,module,exports){if(!String.prototype.codePointAt){(function(){"use strict";var defineProperty=function(){let result;try{const object={};const $defineProperty=Object.defineProperty;result=$defineProperty(object,object,object)&&$defineProperty}catch(error){}return result}();const codePointAt=function(position){if(this==null){throw TypeError()}const string=String(this);const size=string.length;let index=position?Number(position):0;if(index!==index){index=0}if(index<0||index>=size){return undefined}const first=string.charCodeAt(index);let second;if(first>=55296&&first<=56319&&size>index+1){second=string.charCodeAt(index+1);if(second>=56320&&second<=57343){return(first-55296)*1024+second-56320+65536}}return first};if(defineProperty){defineProperty(String.prototype,"codePointAt",{value:codePointAt,configurable:true,writable:true})}else{String.prototype.codePointAt=codePointAt}})()}},{}],45:[function(require,module,exports){if(!String.fromCodePoint){(function(){const defineProperty=function(){let result;try{const object={};const $defineProperty=Object.defineProperty;result=$defineProperty(object,object,object)&&$defineProperty}catch(error){}return result}();const stringFromCharCode=String.fromCharCode;const floor=Math.floor;const fromCodePoint=function(_){const MAX_SIZE=16384;const codeUnits=[];let highSurrogate;let lowSurrogate;let index=-1;const length=arguments.length;if(!length){return""}let result="";while(++index<length){let codePoint=Number(arguments[index]);if(!isFinite(codePoint)||codePoint<0||codePoint>1114111||floor(codePoint)!==codePoint){throw RangeError("Invalid code point: "+codePoint)}if(codePoint<=65535){codeUnits.push(codePoint)}else{codePoint-=65536;highSurrogate=(codePoint>>10)+55296;lowSurrogate=codePoint%1024+56320;codeUnits.push(highSurrogate,lowSurrogate)}if(index+1===length||codeUnits.length>MAX_SIZE){result+=stringFromCharCode.apply(null,codeUnits);codeUnits.length=0}}return result};if(defineProperty){defineProperty(String,"fromCodePoint",{value:fromCodePoint,configurable:true,writable:true})}else{String.fromCodePoint=fromCodePoint}})()}},{}],46:[function(require,module,exports){const{Token}=require("./../Token");const{Interval}=require("./../IntervalSet");const INVALID_INTERVAL=new Interval(-1,-2);class Tree{}class SyntaxTree extends Tree{constructor(){super()}}class ParseTree extends SyntaxTree{constructor(){super()}}class RuleNode extends ParseTree{constructor(){super()}getRuleContext(){throw new Error("missing interface implementation")}}class TerminalNode extends ParseTree{constructor(){super()}}class ErrorNode extends TerminalNode{constructor(){super()}}class ParseTreeVisitor{visit(ctx){if(Array.isArray(ctx)){return ctx.map(function(child){return child.accept(this)},this)}else{return ctx.accept(this)}}visitChildren(ctx){if(ctx.children){return this.visit(ctx.children)}else{return null}}visitTerminal(node){}visitErrorNode(node){}}class ParseTreeListener{visitTerminal(node){}visitErrorNode(node){}enterEveryRule(node){}exitEveryRule(node){}}class TerminalNodeImpl extends TerminalNode{constructor(symbol){super();this.parentCtx=null;this.symbol=symbol}getChild(i){return null}getSymbol(){return this.symbol}getParent(){return this.parentCtx}getPayload(){return this.symbol}getSourceInterval(){if(this.symbol===null){return INVALID_INTERVAL}const tokenIndex=this.symbol.tokenIndex;return new Interval(tokenIndex,tokenIndex)}getChildCount(){return 0}accept(visitor){return visitor.visitTerminal(this)}getText(){return this.symbol.text}toString(){if(this.symbol.type===Token.EOF){return"<EOF>"}else{return this.symbol.text}}}class ErrorNodeImpl extends TerminalNodeImpl{constructor(token){super(token)}isErrorNode(){return true}accept(visitor){return visitor.visitErrorNode(this)}}class ParseTreeWalker{walk(listener,t){const errorNode=t instanceof ErrorNode||t.isErrorNode!==undefined&&t.isErrorNode();if(errorNode){listener.visitErrorNode(t)}else if(t instanceof TerminalNode){listener.visitTerminal(t)}else{this.enterRule(listener,t);for(let i=0;i<t.getChildCount();i++){const child=t.getChild(i);this.walk(listener,child)}this.exitRule(listener,t)}}enterRule(listener,r){const ctx=r.getRuleContext();listener.enterEveryRule(ctx);ctx.enterRule(listener)}exitRule(listener,r){const ctx=r.getRuleContext();ctx.exitRule(listener);listener.exitEveryRule(ctx)}}ParseTreeWalker.DEFAULT=new ParseTreeWalker;module.exports={RuleNode:RuleNode,ErrorNode:ErrorNode,TerminalNode:TerminalNode,ErrorNodeImpl:ErrorNodeImpl,TerminalNodeImpl:TerminalNodeImpl,ParseTreeListener:ParseTreeListener,ParseTreeVisitor:ParseTreeVisitor,ParseTreeWalker:ParseTreeWalker,INVALID_INTERVAL:INVALID_INTERVAL}},{"./../IntervalSet":5,"./../Token":13}],47:[function(require,module,exports){const Utils=require("./../Utils");const{Token}=require("./../Token");const{ErrorNode,TerminalNode,RuleNode}=require("./Tree");const Trees={toStringTree:function(tree,ruleNames,recog){ruleNames=ruleNames||null;recog=recog||null;if(recog!==null){ruleNames=recog.ruleNames}let s=Trees.getNodeText(tree,ruleNames);s=Utils.escapeWhitespace(s,false);const c=tree.getChildCount();if(c===0){return s}let res="("+s+" ";if(c>0){s=Trees.toStringTree(tree.getChild(0),ruleNames);res=res.concat(s)}for(let i=1;i<c;i++){s=Trees.toStringTree(tree.getChild(i),ruleNames);res=res.concat(" "+s)}res=res.concat(")");return res},getNodeText:function(t,ruleNames,recog){ruleNames=ruleNames||null;recog=recog||null;if(recog!==null){ruleNames=recog.ruleNames}if(ruleNames!==null){if(t instanceof RuleNode){const context=t.getRuleContext();const altNumber=context.getAltNumber();if(altNumber!=0){return ruleNames[t.ruleIndex]+":"+altNumber}return ruleNames[t.ruleIndex]}else if(t instanceof ErrorNode){return t.toString()}else if(t instanceof TerminalNode){if(t.symbol!==null){return t.symbol.text}}}const payload=t.getPayload();if(payload instanceof Token){return payload.text}return t.getPayload().toString()},getChildren:function(t){const list=[];for(let i=0;i<t.getChildCount();i++){list.push(t.getChild(i))}return list},getAncestors:function(t){let ancestors=[];t=t.getParent();while(t!==null){ancestors=[t].concat(ancestors);t=t.getParent()}return ancestors},findAllTokenNodes:function(t,ttype){return Trees.findAllNodes(t,ttype,true)},findAllRuleNodes:function(t,ruleIndex){return Trees.findAllNodes(t,ruleIndex,false)},findAllNodes:function(t,index,findTokens){const nodes=[];Trees._findAllNodes(t,index,findTokens,nodes);return nodes},_findAllNodes:function(t,index,findTokens,nodes){if(findTokens&&t instanceof TerminalNode){if(t.symbol.type===index){nodes.push(t)}}else if(!findTokens&&t instanceof RuleNode){if(t.ruleIndex===index){nodes.push(t)}}for(let i=0;i<t.getChildCount();i++){Trees._findAllNodes(t.getChild(i),index,findTokens,nodes)}},descendants:function(t){let nodes=[t];for(let i=0;i<t.getChildCount();i++){nodes=nodes.concat(Trees.descendants(t.getChild(i)))}return nodes}};module.exports=Trees},{"./../Token":13,"./../Utils":14,"./Tree":46}]},{},[41])(41)});